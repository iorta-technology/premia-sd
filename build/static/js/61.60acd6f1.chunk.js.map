{"version":3,"sources":["axios-common.js","axios-lmsv2.js","store/actions/leads.js","store/actions/newLead.js","store/actions/address.js","store/actions/auth.js","axios-banca.js","store/actions/kpiDashboard.js","store/actions/renewals.js","store/actions/home.js","store/actions/history.js","store/actions/product.js","store/actions/agentMicrosite.js","axios-manipal.js","components/AdvisorOnboarding/AdvisorCard.js"],"names":["instance","axios","create","baseURL","baseURLAgentMicroSite","headers","fetchAllLeads","id","leads","pageNo","console","log","skipVal","leadFilter","getLeadFilter","dispatch","type","actionTypes","get","then","res","allLeads","count","response","data","errMsg","errCode","catch","error","fetchAllLeadsFail","fetchDesignation","channelCode","designations","fetchDesignationFail","errors","fetchTeamMember","axiosLms","teamMember","fetchTeamMemberFail","createLeadSuccess","formData","succMsg","createLead","post","errorMessage","createLeadFail","editLead","put","editLeadSuccess","editLeadFail","fetchLeadDetails","appointmentData","leadDetails","appointmentDetails","fetchLeadId","fetchLeadDetailsSuccess","fetchLeadDetailsFail","storeLead","storeForm","fetchAllState","states","fetchStateFail","fetchAllCities","stateCode","cities","fetchCitiesFail","login","email","password","a","payload","login_agent_data","logout","fetchUserDetails","userId","userDetails","fetchUserDetailsFail","fetchHierarchy","hierarchy","fetchHierarchyFail","kpiDashboard","value","kpi_data","fetchAllRenewals","allRenewals","fetchAllRenewalsFail","fetchPaidRenewals","paidRenewals","fetchPaidRenewalsFail","fetchUnPaidRenewals","unPaidRenewals","fetchUnPaidRenewalsFail","fetchLapsedRenewals","lapsedRenewals","fetchLapsedRenewalsFail","fetchRenewalDetails","RenewalDetails","fetchRenewalDetailsFail","home","agent_id","activities","info","fetchHistory","leadId","history","fetchHistoryFail","fetchProduct","product","productCategory","fetchProductFail","fetchPlanName","productId","planName","fetchPlanNameFail","fetchAgentDetails","agentId","agentDetails","fetchAgentDetailsFail","fetchCompany","aboutCompany","fetchCompanyFail","fetchBlogs","blogs","fetchBlogsFail","LeadCard","React","memo","props","useDispatch","useHistory","useState","window","innerWidth","width","setWidth","useEffect","handleWindowResize","addEventListener","removeEventListener","content","span","style","fontSize","color","className","card","align","size","xl","backgroundColor","justify","offset","placement","trigger","marginLeft","fontWeight","gutter"],"mappings":"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","file":"static/js/61.60acd6f1.chunk.js","sourcesContent":["import axios from 'axios'; \r\nexport const baseURL = 'https://sdrestnode.iorta.in/secure/sd/';\r\nexport const baseURLAgentMicroSite = 'https://salesdrivex.iorta.in/';\r\nlet defaultHeaders = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json' ,\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseURL,\r\n    baseURLAgentMicroSite:baseURLAgentMicroSite,\r\n    headers: defaultHeaders\r\n});\r\n\r\nexport default instance;","import axios from 'axios'; \r\nexport const baseURL = 'https://sdtatadevlmsv2.iorta.in/secure/user/v2/';\r\n\r\nlet defaultHeaders = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json' ,\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseURL,\r\n    headers: defaultHeaders\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-common';\r\nimport { getLeadFilter } from '../../helpers';\r\nimport axiosLms from '../../axios-lmsv2';\r\n\r\n// Fetch leads data\r\nexport const fetchAllLeadsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ALL_LEADS_START\r\n    }\r\n}\r\n\r\nexport const fetchAllLeadsSuccess = (allLeads,count) => {\r\n    return {\r\n        type: actionTypes.FETCH_ALL_LEADS_SUCCESS,\r\n        allLeads: allLeads,\r\n        count:count\r\n    }\r\n} \r\n\r\n\r\nexport const fetchAllLeadsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ALL_LEADS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchAllLeads = (id,leads,pageNo) => {\r\n    console.log(id)\r\n       const leadFilter =  getLeadFilter(leads)\r\n        let skipVal \r\n        if(pageNo===1){\r\n            skipVal = 0\r\n        }else{\r\n            skipVal = (pageNo-1)*15\r\n\r\n        }\r\n    return dispatch => {\r\n        dispatch(fetchAllLeadsStart())\r\n        return axios.get(`user/v2/getLead/${id}?leadfilter=${leadFilter}&skip=${skipVal}`)\r\n            .then(res => {\r\n                // console.log(res.data.errMsg[1][0].count)\r\n                const response = res.data.errMsg\r\n                const errorCode = res.data.errCode\r\n                if(errorCode===-1){\r\n\r\n                    return dispatch(fetchAllLeadsSuccess(response[0],response[1][0].count))\r\n                }else{\r\n                    throw response\r\n                }\r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchAllLeadsFail(error))\r\n            })\r\n    }\r\n}\r\n\r\n// Fetch Designation\r\n\r\nexport const fetchDesignationStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_DESIGNATION_START\r\n    }\r\n}\r\n\r\nexport const fetchDesignationSuccess = (designations) => {\r\n    return {\r\n        type: actionTypes.FETCH_DESIGNATION_SUCCESS,\r\n        designations: designations,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchDesignationFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_DESIGNATION_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchDesignation = (channelCode) => {\r\n        \r\n    return dispatch => {\r\n        dispatch(fetchDesignationStart())\r\n        return axios.get(`admin/getDesignationMaster?userId=5b3b4cc28fa96d39870443e3&channelCode=5dbfdfa8e51cd5522249ba70`)\r\n            .then(res => {\r\n                \r\n                if(res.data.errCode === -1){\r\n                    return dispatch(fetchDesignationSuccess(res.data.errMsg[0]))\r\n                } \r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchDesignationFail(error.response.data.errors))\r\n            })\r\n    }\r\n}\r\n\r\n// Fetch Team Member\r\n\r\nexport const fetchTeamMemberStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_TEAM_MEMBER_START\r\n    }\r\n}\r\n\r\nexport const fetchTeamMemberSuccess = (teamMember) => {\r\n    return {\r\n        type: actionTypes.FETCH_TEAM_MEMBER_SUCCESS,\r\n        teamMember:teamMember\r\n    }\r\n} \r\n\r\n\r\nexport const fetchTeamMemberFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_TEAM_MEMBER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchTeamMember = (id) => {\r\n        \r\n    return dispatch => {\r\n        dispatch(fetchTeamMemberStart())\r\n        return axiosLms.get(`user_tree?userId=6153f1ec4735ef7f942926e3`)\r\n            .then(res => {\r\n                    console.log(res.data.errMsg)\r\n                    if(res.data.errCode===-1){\r\n                        return dispatch(fetchTeamMemberSuccess())\r\n                    }else{\r\n                        throw res\r\n                    }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                return dispatch(fetchTeamMemberFail(error))\r\n            })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-common';\r\n\r\n\r\n\r\n\r\nexport const createLeadStart = () => {\r\n    return {\r\n        type: actionTypes.CREATE_LEAD_START\r\n    }\r\n}\r\n\r\nexport const createLeadSuccess = (formData,succMsg) => {\r\n    return {\r\n        type: actionTypes.CREATE_LEAD_SUCCESS,\r\n        formData: formData,\r\n        succMsg:succMsg\r\n    }\r\n} \r\n\r\n\r\nexport const createLeadFail = (error) => {\r\n    return {\r\n        type: actionTypes.CREATE_LEAD_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const createLead = (formData) => {\r\n        \r\n    return dispatch => {\r\n        dispatch(createLeadStart())\r\n        return axios.post(`user/addlead`,formData)\r\n            .then(res => {\r\n                if(res.data.errCode===-1){\r\n                    const response = res.data.errMsg\r\n                    const succMsg = 'Lead Created Successfully'\r\n                    console.log('creat action',response)\r\n                    return dispatch(createLeadSuccess(...response,succMsg))\r\n\r\n                }else{\r\n                    throw res\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                const errorMessage = error.data.errMsg\r\n                return dispatch(createLeadFail(errorMessage))\r\n            })\r\n    }\r\n}\r\n\r\nexport const editLeadStart = () => {\r\n    return {\r\n        type: actionTypes.EDIT_LEAD_START\r\n    }\r\n}\r\n\r\nexport const editLeadSuccess = (formData) => {\r\n    return {\r\n        type: actionTypes.EDIT_LEAD_SUCCESS,\r\n        formData: formData,\r\n    }\r\n} \r\n\r\n\r\nexport const editLeadFail = (error) => {\r\n    return {\r\n        type: actionTypes.EDIT_LEAD_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const editLead = (formData,id) => {\r\n        \r\n    return dispatch => {\r\n        dispatch(editLeadStart())\r\n        return axios.put(`user/updateLead/${id}`,formData)\r\n            .then(res => {\r\n                if(res.data.errCode===-1){\r\n                    let formData = res.data.errMsg[0]\r\n                    let appointmentData = res.data.errMsg[1]\r\n\r\n                    return dispatch(editLeadSuccess(formData,appointmentData))\r\n                }else{\r\n                    throw res\r\n                }\r\n            })\r\n            .catch(error => {\r\n                const errorMessage = error.data.errMsg\r\n\r\n                return dispatch(editLeadFail(errorMessage))\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchLeadDetailsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_LEAD_DETAILS_START\r\n    }\r\n}\r\n\r\nexport const fetchLeadDetailsSuccess = (leadDetails,appointmentDetails,id) => {\r\n    return {\r\n        type: actionTypes.FETCH_LEAD_DETAILS_SUCCESS,\r\n        leadDetails: leadDetails,\r\n        appointmentDetails: appointmentDetails,\r\n        fetchLeadId:id,\r\n\r\n    }\r\n} \r\n\r\n\r\nexport const fetchLeadDetailsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_LEAD_DETAILS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchLeadDetails = (id) => {\r\n        \r\n    return dispatch => {\r\n        dispatch(fetchLeadDetailsStart())\r\n        return axios.get(`user/getlead_details/${id}`)\r\n            .then(res => {\r\n                    console.log(res.data.errMsg)\r\n                    let formData = res.data.errMsg[0]\r\n                    let appointmentData = res.data.errMsg[1]\r\n                    if(res.data.errCode===-1){\r\n                        return dispatch(fetchLeadDetailsSuccess(formData,appointmentData,id))\r\n                    }else{\r\n                        throw formData\r\n                    }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                return dispatch(fetchLeadDetailsFail(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const storeForm = (formData) => {\r\n    return {\r\n        type: actionTypes.STORE_FORM_SUCCESS,\r\n        formData: formData,\r\n    }\r\n}\r\nexport const storeLead = (formData) => {\r\n        console.log(formData)\r\n    return dispatch => {\r\n        dispatch(storeForm(formData))\r\n    }\r\n}\r\n\r\n\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-common';\r\n\r\n\r\n// Fetch leads data\r\nexport const fetchStateStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_STATES_START\r\n    }\r\n}\r\n\r\nexport const fetchStateSuccess = (states) => {\r\n    return {\r\n        type: actionTypes.FETCH_STATES_SUCCESS,\r\n        states: states,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchStateFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_STATES_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchAllState = (leads,pageNo) => {\r\n        \r\n    return dispatch => {\r\n        dispatch(fetchStateStart())\r\n        return axios.get(`admin/getState_city?userId=5b3b4cc28fa96d39870443e3&getstate=allstate`)\r\n            .then(res => {\r\n                // console.log(res.data.errMsg[1][0].count)\r\n                if(res.data.errCode===-1){\r\n\r\n                    return dispatch(fetchStateSuccess(res.data.errMsg))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchStateFail(error.response.data.errors))\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchCitiesStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CITIES_START\r\n    }\r\n}\r\n\r\nexport const fetchCitiesSuccess = (cities) => {\r\n    return {\r\n        type: actionTypes.FETCH_CITIES_SUCCESS,\r\n        cities: cities,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchCitiesFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_CITIES_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchAllCities = (stateCode) => {\r\n        \r\n    return dispatch => {\r\n        dispatch(fetchCitiesStart())\r\n        return axios.get(`admin/getState_city?userId=5b3b4cc28fa96d39870443e3&stateCode=${stateCode}`)\r\n            .then(res => {\r\n                // console.log(res.data.errMsg[1][0].count)\r\n                if(res.data.errCode===-1){\r\n\r\n                    return dispatch(fetchCitiesSuccess(res.data.errMsg))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchCitiesFail(error.response.data.errors))\r\n            })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-common';\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\n\r\nexport const loginStart = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_START\r\n    }\r\n}\r\n\r\nexport const loginSuccess = (payload) => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        login_agent_data:payload\r\n    }\r\n} \r\n\r\n\r\nexport const loginFail = (error) => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport  const login = (email,password) => {\r\n       \r\n    return async  dispatch => {\r\n        dispatch(loginStart())\r\n        // const response = await  axios.post(`user/user_login_v2`,{email,password})\r\n        // return await   dispatch(loginSuccess(response.data.errMsg));\r\n        return axios.post(`user/user_login_v2`,{email,password})\r\n        .then( res=>{\r\n            \r\n            if(res.data.errCode===-1){\r\n                return    dispatch(loginSuccess(res.data.errMsg));\r\n                \r\n            }\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logoutStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT_START\r\n    };\r\n};\r\n\r\nexport const logoutSuccess = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT_SUCCESS\r\n    };\r\n};\r\n\r\n\r\nexport const logout = () =>{\r\n    return dispatch =>{\r\n        dispatch(logoutStart())\r\n        // dispatch(logoutSuccess())\r\n       \r\n    return dispatch(logoutSuccess())\r\n    \r\n    }\r\n}\r\n// const getUserDetail = (cd=null) =>  {\r\n//     try {\r\n//         let self = this;\r\n//         self.GET('getuserDetails?user_id='+this.Islogin()._id, res => {\r\n//             if (res.data.errCode === -1) {\r\n//                 try {\r\n//                      console.log( 'USER_DATA_DEATILS )==>',res.data.errMsg[0])\r\n//                     self.$store.commit('USER_DATA_DEATILS', res.data.errMsg[0]);\r\n//                     self.$store.commit('SET_ACCESS_DATA', res.data.errMsg);\r\n//                     if (typeof cb === 'function') {\r\n//                         cb();\r\n//                     }\r\n//                 } catch (Exception) {\r\n//                     console.log(Exception);\r\n//                 }\r\n//             }\r\n//         });\r\n//     } catch (err) {\r\n//         console.log(err , '7f3bacc2-acd7-41b3-add2-fdb0451a47d5')\r\n//     }\r\n// }\r\n\r\n\r\n//Post login actions -- User Details\r\nexport const fetchUserDetailsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_DETAILS_START\r\n    }\r\n}\r\n\r\nexport const fetchUserDetailsSuccess = (userDetails) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_DETAILS_SUCCESS,\r\n        userDetails: userDetails,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchUserDetailsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_DETAILS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchUserDetails = (userId) => {\r\n        \r\n    return dispatch => {\r\n        dispatch(fetchUserDetailsStart())\r\n        return axios.get(`user/getuserDetails?user_id=${userId}`)\r\n            .then(res => {\r\n                let response = res.data.errMsg\r\n                if(res.data.errCode===-1){\r\n\r\n                    console.log('post login userdetails',res.data.errMsg[0])\r\n                    return dispatch(fetchUserDetailsSuccess(res.data.errMsg[0]))\r\n                }else{\r\n                    throw response\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // return dispatch(fetchUserDetailsFail(error.response.data.errors))\r\n                console.log(error)\r\n                return dispatch(fetchUserDetailsFail(error))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// Get Hierarchy\r\n\r\nexport const fetchHierarchyStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_HIERARCHY_START\r\n    }\r\n}\r\n\r\nexport const fetchHierarchySuccess = (hierarchy) => {\r\n    return {\r\n        type: actionTypes.FETCH_HIERARCHY_SUCCESS,\r\n        hierarchy: hierarchy,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchHierarchyFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_HIERARCHY_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchHierarchy = (userId,channelCode) => {\r\n    return dispatch => {\r\n        dispatch(fetchHierarchyStart())\r\n        return axios.get(`admin/getHierarchy?userId=5b3b4cc28fa96d39870443e3&channelCode=${channelCode}&skip=0&hierarchy_type=1`)\r\n            .then(res => {\r\n                console.log('post login hierarchy',res.data.errMsg[0])\r\n                return dispatch(fetchHierarchySuccess(res.data.errMsg[0]))\r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchHierarchyFail(error.response.data.errors))\r\n            })\r\n    }\r\n}","import axios from 'axios'; \r\nexport const baseURL = 'https://pocbancanode.iorta.in/secure/user/';\r\n\r\nlet defaultHeaders = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json' ,\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseURL,\r\n    headers: defaultHeaders\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-banca';\r\n\r\n\r\nexport const kpiDashboardStart = () => {\r\n    return {\r\n        type: actionTypes.KPI_DASHBOARD_START\r\n    }\r\n}\r\n\r\nexport const kpiDashboardSuccess = (payload) => {\r\n    return {\r\n        type: actionTypes.KPI_DASHBOARD_SUCCESS,\r\n        kpi_data:payload\r\n    }\r\n} \r\n\r\n\r\nexport const kpiDashboardFail = (error) => {\r\n    return {\r\n        type: actionTypes.KPI_DASHBOARD_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const kpiDashboard = (value) => {\r\n    return dispatch => {\r\n        dispatch(kpiDashboardStart())\r\n        return axios.get(`fetch_employee_kpi?emp_code=60e5d6056b18e8309da3fa49&category=${value}&channel=5f912e05037b6c581e7678f1`)\r\n        .then(res=>{\r\n            console.log(\"kpidashb data\",res)\r\n            return dispatch(kpiDashboardSuccess(res.data.errMsg))\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-manipal';\r\n\r\n\r\n// Fetch all renewals data\r\nexport const fetchAllRenewalsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ALL_RENEWALS_START\r\n    }\r\n}\r\n\r\nexport const fetchAllRenewalsSuccess = (allRenewals,count) => {\r\n    return {\r\n        type: actionTypes.FETCH_ALL_RENEWALS_SUCCESS,\r\n        allRenewals: allRenewals,\r\n        count:count\r\n    }\r\n} \r\n\r\n\r\nexport const fetchAllRenewalsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ALL_RENEWALS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchAllRenewals = (leads,pageNo) => {\r\n        let skipVal \r\n        if(pageNo===1){\r\n            skipVal = 0\r\n        }else{\r\n            skipVal = (pageNo-1)*15\r\n\r\n        }\r\n    return dispatch => {\r\n        dispatch(fetchAllRenewalsStart())\r\n        return axios.get(`getPolicy/610a50ec85eac609e29061e3?policy_filter=all&sortBy=-1&skip=${skipVal}`)\r\n            .then(res => {\r\n                console.log('fetch renewals',res.data.errMsg[0],res.data.errMsg[1][0].count)\r\n                return dispatch(fetchAllRenewalsSuccess(res.data.errMsg[0],res.data.errMsg[1][0].count))\r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchAllRenewalsFail(error.response.data.errors))\r\n            })\r\n    }\r\n}\r\n\r\n// Fetch paid renewals data\r\nexport const fetchPaidRenewalsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_PAID_RENEWALS_START\r\n    }\r\n}\r\n\r\nexport const fetchPaidRenewalsSuccess = (paidRenewals,count) => {\r\n    return {\r\n        type: actionTypes.FETCH_PAID_RENEWALS_SUCCESS,\r\n        paidRenewals: paidRenewals,\r\n        count:count\r\n    }\r\n} \r\n\r\n\r\nexport const fetchPaidRenewalsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_PAID_RENEWALS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchPaidRenewals = (leads,pageNo) => {\r\n        let skipVal \r\n        if(pageNo===1){\r\n            skipVal = 0\r\n        }else{\r\n            skipVal = (pageNo-1)*15\r\n\r\n        }\r\n    return dispatch => {\r\n        dispatch(fetchPaidRenewalsStart())\r\n        return axios.get(`getPolicy/610a50ec85eac609e29061e3?policy_filter=Paid&sortBy=-1&skip=${skipVal}`)\r\n            .then(res => {\r\n                console.log('fetch paid renewals',res.data.errMsg[0],res.data.errMsg[1][0].count)\r\n                return dispatch(fetchPaidRenewalsSuccess(res.data.errMsg[0],res.data.errMsg[1][0].count))\r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchPaidRenewalsFail(error.response.data.errors))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// Fetch unpaid renewals data\r\nexport const fetchUnPaidRenewalsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_UNPAID_RENEWALS_START\r\n    }\r\n}\r\n\r\nexport const fetchUnPaidRenewalsSuccess = (unPaidRenewals,count) => {\r\n    return {\r\n        type: actionTypes.FETCH_UNPAID_RENEWALS_SUCCESS,\r\n        unPaidRenewals: unPaidRenewals,\r\n        count:count\r\n    }\r\n} \r\n\r\n\r\nexport const fetchUnPaidRenewalsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_UNPAID_RENEWALS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchUnPaidRenewals = (leads,pageNo) => {\r\n        let skipVal \r\n        if(pageNo===1){\r\n            skipVal = 0\r\n        }else{\r\n            skipVal = (pageNo-1)*15\r\n\r\n        }\r\n    return dispatch => {\r\n        dispatch(fetchUnPaidRenewalsStart())\r\n        return axios.get(`getPolicy/610a50ec85eac609e29061e3?policy_filter=Unpaid&sortBy=-1&skip=${skipVal}`)\r\n            .then(res => {\r\n                console.log('fetch unpaid renewals',res?.data?.errMsg[0],res?.data?.errMsg[1][0].count)\r\n                return dispatch(fetchUnPaidRenewalsSuccess(res?.data?.errMsg[0],res?.data?.errMsg[1][0].count))\r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchUnPaidRenewalsFail(error?.response?.data?.errors))\r\n            })\r\n    }\r\n}\r\n\r\n// Fetch lapsed renewals data\r\nexport const fetchLapsedRenewalsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_LAPSED_RENEWALS_START\r\n    }\r\n}\r\n\r\nexport const fetchLapsedRenewalsSuccess = (lapsedRenewals,count) => {\r\n    return {\r\n        type: actionTypes.FETCH_LAPSED_RENEWALS_SUCCESS,\r\n        lapsedRenewals: lapsedRenewals,\r\n        count:count\r\n    }\r\n} \r\n\r\n\r\nexport const fetchLapsedRenewalsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_LAPSED_RENEWALS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchLapsedRenewals = (leads,pageNo) => {\r\n        let skipVal \r\n        if(pageNo===1){\r\n            skipVal = 0\r\n        }else{\r\n            skipVal = (pageNo-1)*15\r\n\r\n        }\r\n    return dispatch => {\r\n        dispatch(fetchLapsedRenewalsStart())\r\n        return axios.get(`getPolicy/610a50ec85eac609e29061e3?policy_filter=Lapsed&sortBy=-1&skip=${skipVal}`)\r\n            .then(res => {\r\n                console.log('fetch lapsed renewals',res.data.errMsg[0],res.data.errMsg[1][0].count)\r\n                return dispatch(fetchLapsedRenewalsSuccess(res.data.errMsg[0],res.data.errMsg[1][0].count))\r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchLapsedRenewalsFail(error.response.data.errors))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// Fetch renewal details data\r\nexport const fetchRenewalDetailsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_DETAILS_RENEWALS_START\r\n    }\r\n}\r\n\r\nexport const fetchRenewalDetailsSuccess = (RenewalDetails) => {\r\n    return {\r\n        type: actionTypes.FETCH_DETAILS_RENEWALS_SUCCESS,\r\n        RenewalDetails: RenewalDetails\r\n    }\r\n} \r\n\r\n\r\nexport const fetchRenewalDetailsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_DETAILS_RENEWALS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchRenewalDetails = (id) => {\r\n    return dispatch => {\r\n        dispatch(fetchRenewalDetailsStart())\r\n        return axios.get(`getPolicyDetails/610a50ec85eac609e29061e3?proposer_ID_refs=${id}`)\r\n            .then(res => {\r\n                console.log('fetch renewal details',res.data.errMsg[0])\r\n                return dispatch(fetchRenewalDetailsSuccess(res.data.errMsg[0]))\r\n            })\r\n            .catch(error => {\r\n                return dispatch(fetchRenewalDetailsFail(error.response.data.errors))\r\n            })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-common';\r\n\r\n\r\nexport const homeStart = () => {\r\n    return {\r\n        type: actionTypes.HOME_START\r\n    }\r\n}\r\n\r\nexport const homeSuccess = (payload) => {\r\n    return {\r\n        type: actionTypes.HOME_SUCCESS,\r\n        home:payload\r\n    }\r\n} \r\n\r\n\r\nexport const homeFail = (error) => {\r\n    return {\r\n        type: actionTypes.HOME_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const activitiesStart = () => {\r\n    return {\r\n        type: actionTypes.ACTIVITIES_START\r\n    }\r\n}\r\n\r\nexport const activitiesSuccess = (info) => {\r\n    return {\r\n        type: actionTypes.ACTIVITIES_SUCCESS,\r\n        activities:info\r\n    }\r\n} \r\n\r\n\r\nexport const activitiesFail = (error) => {\r\n    return {\r\n        type: actionTypes.ACTIVITIES_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nexport const home = (agent_id) => {\r\n    //    console.log(\"agent id in\",agent_id)\r\n    return dispatch => {\r\n        dispatch(homeStart())\r\n        return axios.get(`user/getleads_team_count/${agent_id}`)\r\n        .then(res=>{\r\n            // console.log(\"home data\",res)\r\n            return dispatch(homeSuccess(res.data.errMsg))\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport const activities = (id) => {\r\n    return dispatch => {\r\n        dispatch(activitiesStart())\r\n        return axios.get(`user/getAppointment/${id}?set_reminder_prority=high,none,low,medium&now_filter=1`)\r\n        .then(res=>{\r\n            console.log(\"activities data\",res)\r\n            return dispatch(activitiesSuccess(res.data.errMsg))\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-common';\r\n\r\n\r\n// Fetch leads data\r\nexport const fetchHistoryStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_HISTORY_START\r\n    }\r\n}\r\n\r\nexport const fetchHistorySuccess = (history) => {\r\n    return {\r\n        type: actionTypes.FETCH_HISTORY_SUCCESS,\r\n        history: history,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchHistoryFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_HISTORY_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchHistory = (leadId,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchHistoryStart())\r\n        return axios.get(`user/leadhistory/${leadId}?user_id=${userId}`)\r\n            .then(res => {\r\n                // console.log(res.data.errMsg[1][0].count)\r\n                if(res.data.errCode===-1){\r\n                   const  response = res.data.errMsg\r\n                    return dispatch(fetchHistorySuccess(response))\r\n                }else{\r\n                    throw res\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                return dispatch(fetchHistoryFail(error))\r\n            })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-common';\r\n\r\nexport const fetchProductStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_PRODUCT_START\r\n    }\r\n}\r\n\r\nexport const fetchProductSuccess = (product) => {\r\n    return {\r\n        type: actionTypes.FETCH_PRODUCT_SUCCESS,\r\n        productCategory: product,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchProductFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_PRODUCT_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchProduct = (channelCode) => {\r\n        console.log(channelCode)\r\n    return dispatch => {\r\n        dispatch(fetchProductStart())\r\n        return axios.get(`admin/getprodCategory?filter=23&channel=${channelCode}`)\r\n            .then(res => {\r\n                let response = res.data.errMsg\r\n                console.log(response)\r\n                    if(res.data.errCode===-1){\r\n                        return dispatch(fetchProductSuccess(response))\r\n                    }else{\r\n                        throw response\r\n                    }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                return dispatch(fetchProductFail(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchPlanNameStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_PLAN_NAME_START\r\n    }\r\n}\r\n\r\nexport const fetchPlanNameSuccess = (product) => {\r\n    return {\r\n        type: actionTypes.FETCH_PLAN_NAME_SUCCESS,\r\n        planName: product,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchPlanNameFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_PLAN_NAME_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchPlanName = (productId) => {\r\n        \r\n    return dispatch => {\r\n        dispatch(fetchPlanNameStart())\r\n        return axios.get(`user/getproduct/?productType=${productId}&roleCode=SM1`)\r\n            .then(res => {\r\n                    console.log(res.data.errMsg)\r\n                    let response = res.data.errMsg\r\n                    if(res.data.errCode===-1){\r\n                        return dispatch(fetchPlanNameSuccess(response))\r\n                    }else{\r\n                        throw response\r\n                    }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                return dispatch(fetchPlanNameFail(error))\r\n            })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-common';\r\n\r\n// Fetch leads data\r\nexport const fetchAgentDetailsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_AGENT_DETAILS_START\r\n    }\r\n}\r\n\r\nexport const fetchAgentDetailsSuccess = (agentDetails) => {\r\n    return {\r\n        type: actionTypes.FETCH_AGENT_DETAILS_SUCCESS,\r\n        agentDetails: agentDetails,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchAgentDetailsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_AGENT_DETAILS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchAgentDetails = (agentId) => {\r\n    return dispatch => {\r\n        dispatch(fetchAgentDetailsStart())\r\n        return axios.get(`user/get-microsite-settings/${agentId}`)\r\n            .then(res => {\r\n                console.log(res.data.data[0])\r\n                const response = res.data.data[0]\r\n                return dispatch(fetchAgentDetailsSuccess(response))\r\n                // if(response.status===200){\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                return dispatch(fetchAgentDetailsFail(error))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// fetch company\r\nexport const fetchCompanyStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_COMPANY_START\r\n    }\r\n}\r\n\r\nexport const fetchCompanySuccess = (aboutCompany) => {\r\n    return {\r\n        type: actionTypes.FETCH_COMPANY_SUCCESS,\r\n        aboutCompany: aboutCompany,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchCompanyFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_COMPANY_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchCompany = (agentId) => {\r\n    return dispatch => {\r\n        dispatch(fetchCompanyStart())\r\n        return axios.get(`user/microsite/get-about-company-details/${agentId}`)\r\n            .then(res => {\r\n                console.log(res)\r\n                const response = res.data.errMsg\r\n                return dispatch(fetchCompanySuccess(response))\r\n                // if(response.status===200){\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                return dispatch(fetchCompanyFail(error))\r\n            })\r\n    }\r\n}\r\n\r\n// fetch blogs\r\nexport const fetchBlogsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_BLOGS_START\r\n    }\r\n}\r\n\r\nexport const fetchBlogsSuccess = (blogs) => {\r\n    return {\r\n        type: actionTypes.FETCH_BLOGS_SUCCESS,\r\n        blogs: blogs,\r\n    }\r\n} \r\n\r\n\r\nexport const fetchBlogsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_BLOGS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchBlogs = (agentId,pageNo) => {\r\n    let skipVal \r\n        if(pageNo===1){\r\n            skipVal = 0\r\n        }else{\r\n            skipVal = (pageNo-1)*3\r\n\r\n        }\r\n    return dispatch => {\r\n        dispatch(fetchBlogsStart())\r\n        return axios.get(`user/microsite/fetch_blogs/${agentId}?skip=${skipVal}&limit=3`)\r\n            .then(res => {\r\n                console.log(res)\r\n                const response = res.data.errMsg\r\n                return dispatch(fetchBlogsSuccess(response))\r\n                // if(response.status===200){\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                return dispatch(fetchBlogsFail(error))\r\n            })\r\n    }\r\n}","import axios from 'axios'; \r\nexport const baseURL = 'https://nodemanipalcigna.iorta.in/secure/sd/user/';\r\n\r\nlet defaultHeaders = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json' ,\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseURL,\r\n    headers: defaultHeaders\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, Avatar, Switch, Divider, Row, Col,Button,Popover } from 'antd'\r\nimport { MoreOutlined,ExclamationCircleOutlined,CalendarOutlined,MailFilled,PhoneFilled} from '@ant-design/icons';\r\nimport '../LeadCards/LeadCard.css';\r\nimport './AdvisorCard.scss'\r\nimport * as actions from '../../store/actions/index';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LeadCard = React.memo((props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    //     const {id,lead_Id,leadStatus,firstName,lastName,created_date,allocatedDate,primaryMobile,allocatedBy,allocatedTo} = props\r\n\r\n    //   const leadComponent = \r\n\r\n\r\n    //   leadStatus === 'newleadentery'\r\n    //                         ? \r\n    //     <p className=\"user-status-text capitalize open\">Open</p>\r\n    //     :\r\n    //   leadStatus === 'converted'\r\n    //   ?\r\n    //   <p className=\"user-status-text capitalize converted\">{leadStatus}</p>\r\n    //   :\r\n    //   leadStatus === 'failed'\r\n    //   ?\r\n    //   <p className=\"user-status-text capitalize failed\">{leadStatus}</p>\r\n    //   :\r\n    //   <p className=\"user-status-text capitalize\">{leadStatus}</p>\r\n\r\n    //     let avatar = firstName.match(/\\b(\\w)/g) + lastName.match(/\\b(\\w)/g)\r\n\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const breakpoint = 620;\r\n\r\n    useEffect(() => {\r\n        const handleWindowResize = () => setWidth(window.innerWidth)\r\n        window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n        // Return a function from the effect that removes the event listener\r\n        return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n    }, [width]);\r\n    const updateHandler = (id) => {\r\n        dispatch(actions.fetchLeadDetails(id))\r\n        history.replace('/leadmasterpage/statuslead')\r\n    }\r\n    const text = <span>Title</span>;\r\n    const content = (\r\n        <Row>\r\n            <Col span={6}>\r\n                <CalendarOutlined  style={{ fontSize: '16px', color: '#08c' }}/>\r\n            </Col>\r\n            <Col span={18}>\r\n                <p>Create an Event</p>\r\n            </Col>\r\n            <Col span={24}>\r\n                <Divider className=\"popover-divider\"/>\r\n            </Col>\r\n            <Col span={6}>\r\n                 <MailFilled />\r\n            </Col>\r\n            <Col span={18}>\r\n                <p>Mail</p>\r\n            </Col>\r\n            <Col span={24}>\r\n                <Divider className=\"popover-divider\"/>\r\n            </Col>\r\n            <Col span={6}>\r\n                <PhoneFilled />\r\n            </Col>\r\n            <Col span={18}>\r\n                <p>Call</p>\r\n            </Col>\r\n        </Row>\r\n      );\r\n    // Card for desktop\r\n    \r\n    let card =\r\n        // <Card\r\n        //     // key={id}\r\n        //     loading={props.loading}\r\n        //     className=\"lead-card-desktop\"\r\n        //     hoverable={true}\r\n        //     style={{ width: 610 }}>\r\n        <Row className=\"advisor-card-desktop\" align=\"top\">\r\n            <Col span={2}>\r\n                <Avatar \r\n                    size={{ xl: 40 }}\r\n                    style={{\r\n                        color: '#ffffff',\r\n                        backgroundColor: '#00ACC1',\r\n                      }}\r\n                >AV</Avatar>\r\n                {/* <Card.Grid hoverable={false} className=\"grid-style\">\r\n                        </Card.Grid> */}\r\n            </Col>\r\n            <Col span={12}>\r\n                <p className=\"paragraph capitalize advisor-name\">Azim Shaikh</p>\r\n                <p className=\"paragraph capitalize app-id-label\">App ID <span className=\"app-id\">AGIN_202111_000420</span></p>\r\n            </Col>\r\n            <Col span={10}>\r\n                <Row justify=\"center\" align=\"middle\">\r\n                    <Col span={6}>\r\n                        <Row justify=\"center\" align=\"middle\">\r\n                            <Col span={4}>\r\n                                <Divider className=\"divider\" type=\"vertical\" />\r\n                            </Col>\r\n                            <Col span={14} offset={6}>\r\n                                <ExclamationCircleOutlined style={{ fontSize: '25px' }} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={7}>\r\n                        <Row justify=\"end\" align=\"middle\">\r\n                            <Col span={4}>\r\n                                <Divider className=\"divider\" type=\"vertical\" />\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <p className=\"paragraph capitalize lead-status\">Failed</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={9}>\r\n                        <Row justify=\"end\" align=\"middle\">\r\n                            <Col span={4}>\r\n                                <Divider className=\"divider\" type=\"vertical\" />\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <div className=\"lead-box\">\r\n                                    <p className=\"paragraph capitalize lead-agent\">AGENT</p>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Divider className=\"divider\" type=\"vertical\" />\r\n                            </Col>\r\n                            <Col span={19} offset={1}>\r\n                            <Popover placement=\"leftTop\"  content={content} trigger=\"click\" style={{width:'135px'}}>\r\n                                <MoreOutlined className=\"more-icon\" style={{ fontSize: '30px', marginLeft: 'auto', fontWeight:'bold' }} />\r\n                            </Popover>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Divider  className=\"middle-divider\"/>\r\n            <Col span={24}>\r\n                <Row justify=\"center\" align=\"middle\">\r\n                    <Col span={18}>\r\n                        <Row gutter={[16, 24]}>\r\n                            <Col span={8} >\r\n                                <p className=\"paragraph adv-detail-label \">Created on</p>\r\n                                <p className=\"paragraph adv-text\">Date</p>\r\n                            </Col>\r\n                            <Col span={8} >\r\n                                <p className=\"paragraph adv-detail-label\">Created on</p>\r\n                                <p className=\"paragraph adv-text\">Date</p>\r\n                            </Col>\r\n                            <Col span={8} >\r\n                                <p className=\"paragraph adv-detail-label\">Created on</p>\r\n                                <p className=\"paragraph adv-text\">Date</p>\r\n                            </Col>\r\n                            <Col span={8} >\r\n                                <p className=\"paragraph adv-detail-label\">Created on</p>\r\n                                <p className=\"paragraph adv-text\">Date</p>\r\n                            </Col>\r\n                            <Col span={8} >\r\n                                <p className=\"paragraph adv-detail-label\">Created on</p>\r\n                                <p className=\"paragraph adv-text\">Date</p>\r\n                            </Col>\r\n                            <Col span={8} >\r\n                                <p className=\"paragraph adv-detail-label\">Created on</p>\r\n                                <p className=\"paragraph adv-text\">Date</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={1}>\r\n                        <Divider className=\"upd-divider\" type=\"vertical\" />\r\n                    </Col>\r\n                    <Col span={5} >\r\n                        <Button className=\"adv-upd-btn\"\r\n                        // onClick={()=>updateHandler(id)}\r\n                        >Update</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    {/* <div className=\"avatar-and-status\">\r\n                <Avatar size={{ xl: 50 }}>AV</Avatar>\r\n                <Card.Grid hoverable={false} className=\"grid-style\">\r\n                    <p className=\"user-name-text capitalize\">Azim Shaikh</p>\r\n                    <p className=\"user-name-text capitalize\">App ID AGIN_202111_000420</p>\r\n                </Card.Grid>\r\n            </div>\r\n            <Divider />\r\n            <div className=\"content\">\r\n                <div className=\"content-header\">\r\n                    <p className=\"user-name-text capitalize\">\r\n                        firstName lastName\r\n                    </p>\r\n                    <span className=\"user-id uppercase\">\r\n                        lead_Id\r\n                    </span>\r\n                </div>\r\n                <div className=\"content-body\">\r\n                    <Card.Grid hoverable={false} className=\"grid-style\">\r\n                        <p className=\"text-type\">Created on</p>\r\n                        <p className=\"text-content\">Date</p>\r\n                    </Card.Grid>\r\n                    <Card.Grid hoverable={false} className=\"grid-style\">\r\n                        <p className=\"text-type\">Created on</p>\r\n                        <p className=\"text-content\">Date</p>\r\n                    </Card.Grid>\r\n                    <Card.Grid hoverable={false} className=\"grid-style\">\r\n                        <p className=\"text-type\">Appointment on</p>\r\n                        <p className=\"text-content\">-</p>\r\n                    </Card.Grid>\r\n                    <Card.Grid hoverable={false} className=\"grid-style\">\r\n                        <p className=\"text-type\">Mobile No.</p>\r\n                        <p className=\"text-content\">Date</p>\r\n                    </Card.Grid>\r\n                    <Card.Grid hoverable={false} className=\"grid-style\">\r\n                        <p className=\"text-type\">Allocated by</p>\r\n                        <p className=\"text-content capitalize\">Date</p>\r\n                    </Card.Grid>\r\n                    <Card.Grid hoverable={false} className=\"grid-style\">\r\n                        <p className=\"text-type\">Allocated to</p>\r\n                        <p className=\"text-content capitalize\">Date</p>\r\n                    </Card.Grid>\r\n                </div>\r\n            </div> */}\r\n\r\n    // </Card>\r\n    //Card for Mobile\r\n    // if(width<breakpoint){\r\n    //     card = \r\n    //     <Card\r\n    //         className=\"lead-card-mobile\"\r\n    //         hoverable>\r\n    //         <Avatar size={{\r\n    //                 xs: 36,\r\n    //                 md: 40,\r\n    //                 xl: 50,\r\n    //                 }}\r\n    //                 style={{backgroundColor:'blue'}}>{avatar}</Avatar>\r\n    //         <div className=\"card-content-text capitalize\">\r\n    //             <p className=\"user-name-text\">{firstName} {lastName}</p>\r\n    //             <p className=\"user-status-text\">{leadStatus}</p>\r\n    //         </div>\r\n    //         <MoreOutlined  style={{fontSize:'25px',marginLeft:'auto',color:'grey'}}/>\r\n    //     </Card>\r\n    // }\r\n    return (\r\n        <div\r\n        // key={id}\r\n        >\r\n            {card}\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nexport default LeadCard\r\n"],"sourceRoot":""}