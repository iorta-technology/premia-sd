{"version":3,"sources":["store/actions/actionTypes.js","dataLibrary.js","helpers.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/leads.js","store/reducers/newLead.js","store/reducers/address.js","store/reducers/auth.js","store/reducers/home.js","store/reducers/kpiDashboard.js","store/reducers/renewals.js","store/reducers/product.js","store/reducers/agentMicroSite.js","store/reducers/history.js","store/reducers/index.js","index.js"],"names":["FETCH_ALL_LEADS_START","FETCH_ALL_LEADS_SUCCESS","FETCH_ALL_LEADS_FAIL","FETCH_DESIGNATION_START","FETCH_DESIGNATION_SUCCESS","FETCH_DESIGNATION_FAIL","FETCH_LEAD_DETAILS_START","FETCH_LEAD_DETAILS_SUCCESS","FETCH_LEAD_DETAILS_FAIL","FETCH_HISTORY_START","FETCH_HISTORY_SUCCESS","FETCH_HISTORY_FAIL","CREATE_LEAD_START","CREATE_LEAD_SUCCESS","CREATE_LEAD_FAIL","EDIT_LEAD_START","EDIT_LEAD_SUCCESS","EDIT_LEAD_FAIL","STORE_FORM_SUCCESS","FETCH_PRODUCT_START","FETCH_PRODUCT_SUCCESS","FETCH_PRODUCT_FAIL","FETCH_PLAN_NAME_START","FETCH_PLAN_NAME_SUCCESS","FETCH_PLAN_NAME_FAIL","FETCH_STATES_START","FETCH_STATES_SUCCESS","FETCH_STATES_FAIL","FETCH_CITIES_START","FETCH_CITIES_SUCCESS","FETCH_CITIES_FAIL","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","AUTH_LOGOUT_START","AUTH_LOGOUT_SUCCESS","FETCH_USER_DETAILS_START","FETCH_USER_DETAILS_SUCCESS","FETCH_USER_DETAILS_FAIL","FETCH_HIERARCHY_START","FETCH_HIERARCHY_SUCCESS","FETCH_HIERARCHY_FAIL","HOME_START","HOME_SUCCESS","HOME_FAIL","ACTIVITIES_START","ACTIVITIES_SUCCESS","ACTIVITIES_FAIL","KPI_DASHBOARD_START","KPI_DASHBOARD_SUCCESS","KPI_DASHBOARD_FAIL","FETCH_ALL_RENEWALS_START","FETCH_ALL_RENEWALS_SUCCESS","FETCH_ALL_RENEWALS_FAIL","FETCH_PAID_RENEWALS_START","FETCH_PAID_RENEWALS_SUCCESS","FETCH_PAID_RENEWALS_FAIL","FETCH_UNPAID_RENEWALS_START","FETCH_UNPAID_RENEWALS_SUCCESS","FETCH_UNPAID_RENEWALS_FAIL","FETCH_LAPSED_RENEWALS_START","FETCH_LAPSED_RENEWALS_SUCCESS","FETCH_LAPSED_RENEWALS_FAIL","FETCH_DETAILS_RENEWALS_START","FETCH_DETAILS_RENEWALS_SUCCESS","FETCH_DETAILS_RENEWALS_FAIL","FETCH_AGENT_DETAILS_START","FETCH_AGENT_DETAILS_SUCCESS","FETCH_AGENT_DETAILS_FAIL","timeList","dispValue","value","timeListText","stateList","leadStatusList","Cnvrted","leadStatusListUpdate","appointmentStatus","_appointDispoList","newAppt","followUp","_notIntrest","availableNot","_fWrongNo","converted","renCallBack","nonContact","contact","callBack","notIntrested","notEligible","appntment","_aptSubDispList","_appt","newApptmnt","metcustomer","notmet","N_I","apptDenies","metFollowupNotIntrested","N_A","phoneNtAvailble","W_N","Wrong_Number","Conv","leadconverted","R_C","ConvinceRenPay","notMetReschedAppt","metFollUpNI","propsalDetails","cardsList","title","_id","route","list","label","data","dataLibrary","_apStatusList","stoageSetter","key","stringify","JSON","window","localStorage","setItem","encryptDecrypt","str","type","camelCaseKeys","obj","_","mapKeys","v","k","camelCase","stoageGetter","temp","map","getItem","parse","checkAgent","levelCode","minValue","dataFormatting","resp","desc","_obj","Date","parseInt","created_date","toLocaleString","userId","doSentenceCase","first_name","replace","console","log","getLabel","item","result","compare_C","strText","_str","toLowerCase","collection","split","modifyStrigs","i","length","charAt","toUpperCase","slice","trim","err","milisecondToTime","milisecond","index","findIndex","e","toString","error","respDetails","respData","makeString","idFilter","id","initial","undefined","_array","_with","getLeadFilter","leadFilter","LeadMaster","React","lazy","StatusLead","PersonalDetails","ContactDetails","ProfessionalDetails","ExistingInsurance","ProposedProduct","ProposalDetails","DocumentsUpload","History","Login","ForgotPassword","ChangePassword","Sidebar","ClubsMaster","Birthday","HomePage","CompletedContest","ActiveContest","ActiveContestDetails","AllContest","MyOverallRanking","Calendar","AgentMicroService","KpiDashboard","Blog","AdvisorPitch","BenefitIllustrator","ForCustomer","ForSelf","RenewalReport","ServiceCorner","Renewals","RenewalAll","RenewalPaid","RenewalUnPaid","RenewalLapsed","RenewalMasterDetails","SalesPendency","MappedBranches","LoanProducts","App","Suspense","fallback","size","className","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","allLeads","allLeads_Loading","fetch_allLeads_Loading","selected_allLeads","fetch_allLeads_Error","fetchDesignationLoading","designations","fetchDesignationError","fetchAllLeadsStart","state","action","fetchAllLeadsSuccess","count","selected_all_leads","fetchAllLeadsFail","fetchDesignationStart","fetchDesignationSuccess","fetchDesignationFail","reducer","actionTypes","createLeadLoading","createLeadError","editLeadLoading","editLeadError","leadDataloading","leadId","address","line1","line2","line3","mailingAddressSecond","mailingaddress","HaveLifeInsurance_details","Insurancedetails","formData","payloadFormData","leadStatus","leadDisposition","leadsubDisposition","appointment_status","appointmentdisPosition","appointmentsubdisPosition","lead_Owner_Id","user_id","lead_Creator_Id","start_date","start_time","remarksfromSource","remarksfromUser","teamMembers","productId","proposalId","leadSource","LeadType","Product","Insurance_Company","firstName","lastName","dob","gender","maritalStatus","childStatus","ChildInfo","primaryMobile","city","email","country","pincode","secondaryMobile","landlineNo","socialSecurityAdharNo","mailingAddressStatus","createLeadStart","createLeadSuccess","createLeadFail","editLeadStart","editLeadSuccess","editLeadFail","fetchLeadDetailsStart","fetchLeadDetailsSuccess","addSecond","leadDetails","healthInsObject","lifeInsObject","fetchLeadDetailsFail","storeForm","states","fetch_States_Loading","fetch_States_Error","cities","fetch_Cities_Loading","fetch_Cities_Error","fetchStateStart","fetchStateSuccess","fetchStateFail","fetchCitiesStart","fetchCitiesSuccess","fetchCitiesFail","login_agent_data","agent_id","login_error","channelCode","user","userDetails","hierarchy","loginStart","loginSuccess","user_name","loginFail","logoutStart","loading","logoutSuccess","removeItem","headers","fetchUserDetailsStart","fetch_UserDetails_Loading","fetchUserDetailsSuccess","hierarchy_id","fetchUserDetailsFail","fetch_UserDetails_Error","fetchHierarchyStart","fetch_Hierarchy_Loading","fetchHierarchySuccess","hierarchyData","levelCodeArray","push","sort","a","b","Math","min","fetchHierarchyFail","fetch_Hierarchy_Error","home_obj","activities","home_Loading","fetch_Home_Loading","home_Error","activities_Loading","fetch_Activities_Loading","activities_Error","fetchHomeStart","fetchHomeSuccess","home","fetchHomeFail","fetchActivitiesStart","fetchActivitiesSuccess","activities_obj","fetchActivitiesFail","kpi_data","fetch_Kpidashboard_Loading","kpiDashboard_Error","fetchKpiDashboardStart","fetchKpiDashboardSuccess","fetchKpiDashboardFail","allRenewals","paidRenewals","unPaidRenewals","lapsedRenewals","details","paidRenewals_Loading","fetch_paidRenewals_Loading","unPaidRenewals_Loading","fetch_unPaidRenewals_Loading","allRenewals_Loading","fetch_allRenewals_Loading","selected_allRenewals","fetch_allRenewals_Error","fetch_paidRenewals_Error","fetch_unPaidRenewals_Error","fetchAllRenewalsStart","fetchAllRenewalsSuccess","fetchAllRenewalsFail","fetchPaidRenewalsStart","fetchPaidRenewalsSuccess","fetchPaidRenewalsFail","fetchUnPaidRenewalsStart","fetchUnPaidRenewalsSuccess","fetchUnPaidRenewalsFail","fetchRenewalDetailsStart","fetchRenewalDetailsSuccess","RenewalDetails","fetchRenewalDetailsFail","productCategory","fetchProductLoading","fetchProductError","planName","fetchPlanLoading","fetchPlanError","fetchProductStart","fetchProductSuccess","fetchProductFail","fetchPlanNameStart","fetchPlanNameSuccess","planNameOptions","productName","fetchPlanNameFail","last_name","testimonials","achievements","fetchAgentDetailsLoading","fetchAgentDetailsError","fetchAgentDetailsStart","fetchAgentDetailsSuccess","agentDetails","micrositeId","Testimonials","fetchAgentDetailsFail","history","fetchHistoryLoading","fetchHistoryError","proposalData","leadData","appointmentData","fetchHistoryStart","fetchHistorySuccess","historyDetailsArr","proposalArr","leadArr","appointmentArr","historydetail","AppointmetData","leadleadDisposition","toLocaleDateString","allocated","Details2","Details3","Array","isArray","Status","Details1","AppointmentStatus","proposal_Id","AdvisorName","requestType","categoryofIssue","typeofIssue","fetchHistoryFail","rootReducer","combineReducers","leads","leadsReducer","newLead","createLeadReducer","addressReducer","login","loginReducer","homeReducer","activitiesReducer","kpiDashboard","kpiDashboardReducer","renewals","renewalReducer","historyReducer","product","productReducer","agent","agentReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootreducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGAAA,60EACO,IAAMA,EAAyB,wBACzBC,EAA2B,0BAC3BC,EAAwB,uBAExBC,EAA2B,0BAC3BC,EAA6B,4BAC7BC,EAA0B,yBAsB1BC,EAA2B,2BAC3BC,EAA6B,6BAC7BC,EAA0B,0BAE1BC,EAAsB,sBACtBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAiB,iBAEjBC,EAAqB,qBAIrBC,EAAsB,sBACtBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAoB,oBAKpBC,EAAe,cACfC,EAAiB,gBACjBC,EAAc,aAGdC,EAAoB,oBACpBC,EAAsB,sBAGtBC,EAA2B,2BAC3BC,EAA6B,6BAC7BC,EAA0B,0BAE1BC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBAMvBC,EAAc,aACdC,EAAgB,eAChBC,EAAa,YAEbC,EAAoB,mBACpBC,EAAsB,qBACtBC,EAAmB,kBAGnBC,EAAsB,sBACtBC,EAAyB,wBACzBC,EAAsB,qBAGtBC,GAA4B,2BAC5BC,GAA8B,6BAC9BC,GAA2B,0BAE3BC,GAA6B,4BAC7BC,GAA+B,8BAC/BC,GAA4B,2BAE5BC,GAA+B,8BAC/BC,GAAiC,gCACjCC,GAA8B,6BAE9BC,GAA+B,8BAC/BC,GAAiC,gCACjCC,GAA8B,6BAG9BC,GAAgC,+BAChCC,GAAkC,iCAClCC,GAA+B,8BAM/BC,GAA6B,4BAC7BC,GAA+B,8BAC/BC,GAA4B,4B,0aClI1B,GACXC,SAAU,CAAC,CACPC,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,aAEXC,aAAc,CACV,CACIF,UAAW,WACXC,MAAO,YACT,CACED,UAAW,WACXC,MAAO,YACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WAEX,CACAD,UAAW,UACXC,MAAO,WACR,CACCD,UAAW,UACXC,MAAO,WACR,CACCD,UAAW,UACXC,MAAO,WACR,CACCD,UAAW,UACXC,MAAO,WACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAA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CA,uDAGJC,YAAa,CACT,wCACA,iCACA,wCACA,gBACA,wCAOJC,eAAgB,CACZC,UAAW,CACP,CACIC,MAAO,uBACPC,IAAK,KACLC,MAAO,kBACPC,KAAM,CACF,CACIC,MAAO,OACPC,KAAM,IACP,CACCD,MAAO,MACPC,KAAM,IACP,CACCD,MAAO,SACPC,KAAM,IACP,CACCD,MAAO,eACPC,KAAM,IACP,CACCD,MAAO,aACPC,KAAM,IACP,CACCD,MAAO,WACPC,KAAM,MAIlB,CACIL,MAAO,mBACPC,IAAK,KACLC,MAAO,mCACPC,KAAM,CACF,CACIC,MAAO,OACPC,KAAM,IACP,CACCD,MAAO,MACPC,KAAM,IACP,CACCD,MAAO,SACPC,KAAM,IACP,CACCD,MAAO,eACPC,KAAM,IACP,CACCD,MAAO,aACPC,KAAM,IACP,CACCD,MAAO,WACPC,KAAM,MAIlB,CACIL,MAAO,4BACPC,IAAK,KACLC,MAAO,kCACPC,KAAM,CACF,CACIC,MAAO,MACPC,KAAM,IACP,CACCD,MAAO,SACPC,KAAM,IACP,CACCD,MAAO,eACPC,KAAM,IACP,CACCD,MAAO,aACPC,KAAM,IACP,CACCD,MAAO,WACPC,KAAM,MAKlB,CACIL,MAAO,eACPC,IAAK,KACLC,MAAO,kBACPC,KAAM,CACF,CACIC,MAAO,YACPC,KAAM,IACP,CACCD,MAAO,qBACPC,KAAM,IACP,CACCD,MAAO,cACPC,KAAM,IACP,CACCD,MAAO,sBACPC,KAAM,IACP,CACCD,MAAO,cACPC,KAAM,MAIlB,CACIL,MAAO,kBACPC,IAAK,KACLC,MAAO,kBACPC,KAAM,CACF,CACIC,MAAO,eACPC,KAAM,IACP,CACCD,MAAO,sBACPC,KAAM,IACP,CACCD,MAAO,qBACPC,KAAM,IACP,CACCD,MAAO,mBACPC,KAAM,MAIlB,CACIL,MAAO,gBACPC,IAAK,KACLC,MAAO,kBACPC,KAAM,CAEF,CACIC,MAAO,OACPC,KAAM,IACP,CACCD,MAAO,OACPC,KAAM,MAIlB,CACIL,MAAO,kBACPC,IAAK,KACLC,MAAO,kBACPC,KAAM,CACF,CACI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","file":"static/js/main.258e449d.chunk.js","sourcesContent":["// Lead Master Azim\r\nexport const FETCH_ALL_LEADS_START =  'FETCH_ALL_LEADS_START'\r\nexport const FETCH_ALL_LEADS_SUCCESS =  'FETCH_ALL_LEADS_SUCCESS'\r\nexport const FETCH_ALL_LEADS_FAIL =  'FETCH_ALL_LEADS_FAIL'\r\n\r\nexport const FETCH_DESIGNATION_START =  'FETCH_DESIGNATION_START'\r\nexport const FETCH_DESIGNATION_SUCCESS =  'FETCH_DESIGNATION_SUCCESS'\r\nexport const FETCH_DESIGNATION_FAIL =  'FETCH_DESIGNATION_FAIL'\r\n\r\n// export const FETCH_TODAY_LEADS_START =  'FETCH_TODAY_LEADS_START'\r\n// export const FETCH_TODAY_LEADS_SUCCESS =  'FETCH_TODAY_LEADS_SUCCESS'\r\n// export const FETCH_TODAY_LEADS_FAIL =  'FETCH_TODAY_LEADS_FAIL'\r\n\r\n// export const FETCH_OPEN_LEADS_START =  'FETCH_OPEN_LEADS_START'\r\n// export const FETCH_OPEN_LEADS_SUCCESS =  'FETCH_OPEN_LEADS_SUCCESS'\r\n// export const FETCH_OPEN_LEADS_FAIL =  'FETCH_OPEN_LEADS_FAIL'\r\n\r\n// export const FETCH_CONVERTED_LEADS_START =  'FETCH_CONVERTED_LEADS_START'\r\n// export const FETCH_CONVERTED_LEADS_SUCCESS =  'FETCH_CONVERTED_LEADS_SUCCESS'\r\n// export const FETCH_CONVERTED_LEADS_FAIL =  'FETCH_CONVERTED_LEADS_FAIL'\r\n\r\n// export const FETCH_FAILED_LEADS_START =  'FETCH_FAILED_LEADS_START'\r\n// export const FETCH_FAILED_LEADS_SUCCESS =  'FETCH_FAILED_LEADS_SUCCESS'\r\n// export const FETCH_FAILED_LEADS_FAIL =  'FETCH_FAILED_LEADS_FAIL'\r\n\r\nexport const FETCH_LEAD_CATEGORY_START = 'FETCH_LEAD_CATEGORY_START'\r\nexport const FETCH_LEAD_CATEGORY_SUCCESS = 'FETCH_LEAD_CATEGORY_SUCCESS'\r\nexport const FETCH_LEAD_CATEGORY_FAIL = 'FETCH_LEAD_CATEGORY_FAIL'\r\n\r\nexport const FETCH_LEAD_DETAILS_START = 'FETCH_LEAD_DETAILS_START'\r\nexport const FETCH_LEAD_DETAILS_SUCCESS = 'FETCH_LEAD_DETAILS_SUCCESS'\r\nexport const FETCH_LEAD_DETAILS_FAIL = 'FETCH_LEAD_DETAILS_FAIL'\r\n\r\nexport const FETCH_HISTORY_START = 'FETCH_HISTORY_START'\r\nexport const FETCH_HISTORY_SUCCESS = 'FETCH_HISTORY_SUCCESS'\r\nexport const FETCH_HISTORY_FAIL = 'FETCH_HISTORY_FAIL'\r\n\r\nexport const CREATE_LEAD_START = 'CREATE_LEAD_START'\r\nexport const CREATE_LEAD_SUCCESS = 'CREATE_LEAD_SUCCESS'\r\nexport const CREATE_LEAD_FAIL = 'CREATE_LEAD_FAIL'\r\n\r\nexport const EDIT_LEAD_START = 'EDIT_LEAD_START'\r\nexport const EDIT_LEAD_SUCCESS = 'EDIT_LEAD_SUCCESS'\r\nexport const EDIT_LEAD_FAIL = 'EDIT_LEAD_FAIL'\r\n\r\nexport const STORE_FORM_SUCCESS = 'STORE_FORM_SUCCESS'\r\n\r\n\r\n\r\nexport const FETCH_PRODUCT_START = 'FETCH_PRODUCT_START'\r\nexport const FETCH_PRODUCT_SUCCESS = 'FETCH_PRODUCT_SUCCESS'\r\nexport const FETCH_PRODUCT_FAIL = 'FETCH_PRODUCT_FAIL'\r\n\r\nexport const FETCH_PLAN_NAME_START = 'FETCH_PLAN_NAME_START'\r\nexport const FETCH_PLAN_NAME_SUCCESS = 'FETCH_PLAN_NAME_SUCCESS'\r\nexport const FETCH_PLAN_NAME_FAIL = 'FETCH_PLAN_NAME_FAIL'\r\n// Addresses\r\nexport const FETCH_STATES_START = 'FETCH_STATES_START'\r\nexport const FETCH_STATES_SUCCESS = 'FETCH_STATES_SUCCESS'\r\nexport const FETCH_STATES_FAIL = 'FETCH_STATES_FAIL'\r\n\r\nexport const FETCH_CITIES_START = 'FETCH_CITIES_START'\r\nexport const FETCH_CITIES_SUCCESS = 'FETCH_CITIES_SUCCESS'\r\nexport const FETCH_CITIES_FAIL = 'FETCH_CITIES_FAIL'\r\n\r\n\r\n\r\n// Login Shiva \r\nexport const LOGIN_START =  'LOGIN_START'\r\nexport const LOGIN_SUCCESS =  'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL =  'LOGIN_FAIL'\r\n\r\n\r\nexport const AUTH_LOGOUT_START = 'AUTH_LOGOUT_START';\r\nexport const AUTH_LOGOUT_SUCCESS = 'AUTH_LOGOUT_SUCCESS';\r\nexport const AUTH_LOGOUT_FAIL = 'AUTH_LOGOUT_FAIL';\r\n\r\nexport const FETCH_USER_DETAILS_START = 'FETCH_USER_DETAILS_START'\r\nexport const FETCH_USER_DETAILS_SUCCESS = 'FETCH_USER_DETAILS_SUCCESS'\r\nexport const FETCH_USER_DETAILS_FAIL = 'FETCH_USER_DETAILS_FAIL'\r\n\r\nexport const FETCH_HIERARCHY_START = 'FETCH_HIERARCHY_START'\r\nexport const FETCH_HIERARCHY_SUCCESS = 'FETCH_HIERARCHY_SUCCESS'\r\nexport const FETCH_HIERARCHY_FAIL = 'FETCH_HIERARCHY_FAIL'\r\n\r\nexport const FORGOT_PASSWORD_START =  'FORGOT_PASSWORD_START'\r\nexport const FORGOT_PASSWORD_SUCCESS =  'FORGOT_PASSWORD_SUCCESS'\r\nexport const FORGOT_PASSWORD_FAIL =  'FORGOT_PASSWORD_FAIL'\r\n\r\nexport const HOME_START =  'HOME_START'\r\nexport const HOME_SUCCESS =  'HOME_SUCCESS'\r\nexport const HOME_FAIL =  'HOME_FAIL'\r\n\r\nexport const ACTIVITIES_START =  'ACTIVITIES_START'\r\nexport const ACTIVITIES_SUCCESS =  'ACTIVITIES_SUCCESS'\r\nexport const ACTIVITIES_FAIL =  'ACTIVITIES_FAIL'\r\n\r\n//KPI DASHBOARD\r\nexport const KPI_DASHBOARD_START = 'KPI_DASHBOARD_START'\r\nexport const KPI_DASHBOARD_SUCCESS =  'KPI_DASHBOARD_SUCCESS'\r\nexport const KPI_DASHBOARD_FAIL =  'KPI_DASHBOARD_FAIL'\r\n\r\n//all renewals\r\nexport const FETCH_ALL_RENEWALS_START =  'FETCH_ALL_RENEWALS_START'\r\nexport const FETCH_ALL_RENEWALS_SUCCESS =  'FETCH_ALL_RENEWALS_SUCCESS'\r\nexport const FETCH_ALL_RENEWALS_FAIL =  'FETCH_ALL_RENEWALS_FAIL'\r\n//paid renewals\r\nexport const FETCH_PAID_RENEWALS_START =  'FETCH_PAID_RENEWALS_START'\r\nexport const FETCH_PAID_RENEWALS_SUCCESS =  'FETCH_PAID_RENEWALS_SUCCESS'\r\nexport const FETCH_PAID_RENEWALS_FAIL =  'FETCH_PAID_RENEWALS_FAIL'\r\n//unpaid renewals\r\nexport const FETCH_UNPAID_RENEWALS_START =  'FETCH_UNPAID_RENEWALS_START'\r\nexport const FETCH_UNPAID_RENEWALS_SUCCESS =  'FETCH_UNPAID_RENEWALS_SUCCESS'\r\nexport const FETCH_UNPAID_RENEWALS_FAIL =  'FETCH_UNPAID_RENEWALS_FAIL'\r\n//lapsed renewals\r\nexport const FETCH_LAPSED_RENEWALS_START =  'FETCH_LAPSED_RENEWALS_START'\r\nexport const FETCH_LAPSED_RENEWALS_SUCCESS =  'FETCH_LAPSED_RENEWALS_SUCCESS'\r\nexport const FETCH_LAPSED_RENEWALS_FAIL =  'FETCH_LAPSED_RENEWALS_FAIL'\r\n\r\n// renewal details\r\nexport const FETCH_DETAILS_RENEWALS_START =  'FETCH_DETAILS_RENEWALS_START'\r\nexport const FETCH_DETAILS_RENEWALS_SUCCESS =  'FETCH_DETAILS_RENEWALS_SUCCESS'\r\nexport const FETCH_DETAILS_RENEWALS_FAIL =  'FETCH_DETAILS_RENEWALS_FAIL'\r\n\r\n\r\n\r\n\r\n// Agent Mirco Site \r\nexport const FETCH_AGENT_DETAILS_START =  'FETCH_AGENT_DETAILS_START'\r\nexport const FETCH_AGENT_DETAILS_SUCCESS =  'FETCH_AGENT_DETAILS_SUCCESS'\r\nexport const FETCH_AGENT_DETAILS_FAIL =  'FETCH_AGENT_DETAILS_FAIL'","export default {\r\n    timeList: [{\r\n        dispValue: \"8:00 AM\",\r\n        value: \"28800000\"\r\n    }, {\r\n        dispValue: \"8:30 AM\",\r\n        value: \"30600000\"\r\n    }, {\r\n        dispValue: \"9:00 AM\",\r\n        value: \"32400000\"\r\n    }, {\r\n        dispValue: \"9:30 AM\",\r\n        value: \"34200000\"\r\n    }, {\r\n        dispValue: \"10:00 AM\",\r\n        value: \"36000000\"\r\n    }, {\r\n        dispValue: \"10:30 AM\",\r\n        value: \"37800000\"\r\n    }, {\r\n        dispValue: \"11:00 AM\",\r\n        value: \"39600000\"\r\n    }, {\r\n        dispValue: \"11:30 AM\",\r\n        value: \"41400000\"\r\n    }, {\r\n        dispValue: \"12:00 PM\",\r\n        value: \"43200000\"\r\n    }, {\r\n        dispValue: \"12:30 PM\",\r\n        value: \"45000000\"\r\n    }, {\r\n        dispValue: \"1:00 PM\",\r\n        value: \"46800000\"\r\n    }, {\r\n        dispValue: \"1:30 PM\",\r\n        value: \"48600000\"\r\n    }, {\r\n        dispValue: \"2:00 PM\",\r\n        value: \"50400000\"\r\n    }, {\r\n        dispValue: \"2:30 PM\",\r\n        value: \"52200000\"\r\n    }, {\r\n        dispValue: \"3:00 PM\",\r\n        value: \"54000000\"\r\n    }, {\r\n        dispValue: \"3:30 PM\",\r\n        value: \"55800000\"\r\n    }, {\r\n        dispValue: \"4:00 PM\",\r\n        value: \"57600000\"\r\n    }, {\r\n        dispValue: \"4:30 PM\",\r\n        value: \"59400000\"\r\n    }, {\r\n        dispValue: \"5:00 PM\",\r\n        value: \"61200000\"\r\n    }, {\r\n        dispValue: \"5:30 PM\",\r\n        value: \"63000000\"\r\n    }, {\r\n        dispValue: \"6:00 PM\",\r\n        value: \"64800000\"\r\n    }, {\r\n        dispValue: \"6:30 PM\",\r\n        value: \"66600000\"\r\n    }, {\r\n        dispValue: \"7:00 PM\",\r\n        value: \"68400000\"\r\n    }, {\r\n        dispValue: \"7:30 PM\",\r\n        value: \"70200000\"\r\n    }, {\r\n        dispValue: \"8:00 PM\",\r\n        value: \"72000000\"\r\n    }, {\r\n        dispValue: \"8:30 PM\",\r\n        value: \"73800000\"\r\n    }, {\r\n        dispValue: \"9:00 PM\",\r\n        value: \"75600000\"\r\n    }, {\r\n        dispValue: \"9:30 PM\",\r\n        value: \"77400000\"\r\n    }],\r\n    timeListText: [\r\n        {\r\n            dispValue: \"12:00 AM\",\r\n            value: \"12:00 AM\"\r\n        },{\r\n            dispValue: \"12:30 AM\",\r\n            value: \"12:30 AM\"\r\n        },{\r\n            dispValue: \"1:00 AM\",\r\n            value: \"1:00 AM\"\r\n        },{\r\n            dispValue: \"1:30 AM\",\r\n            value: \"1:30 AM\"\r\n        },{\r\n            dispValue: \"2:00 AM\",\r\n            value: \"2:00 AM\"\r\n        },{\r\n            dispValue: \"2:30 AM\",\r\n            value: \"2:30 AM\"\r\n        },{\r\n            dispValue: \"3:00 AM\",\r\n            value: \"3:00 AM\"\r\n        },{\r\n            dispValue: \"3:30 AM\",\r\n            value: \"3:30 AM\"\r\n        },{\r\n            dispValue: \"4:00 AM\",\r\n            value: \"4:00 AM\"\r\n        },{\r\n            dispValue: \"4:30 AM\",\r\n            value: \"4:30 AM\"\r\n        },{\r\n            dispValue: \"5:00 AM\",\r\n            value: \"5:00 AM\"\r\n        },{\r\n            dispValue: \"5:30 AM\",\r\n            value: \"5:30 AM\"\r\n        },{\r\n            dispValue: \"5:30 AM\",\r\n            value: \"5:30 AM\"\r\n        },{\r\n            dispValue: \"6:00 AM\",\r\n            value: \"6:00 AM\"\r\n        },{\r\n            dispValue: \"6:30 AM\",\r\n            value: \"6:30 AM\"\r\n        },{\r\n            dispValue: \"7:00 AM\",\r\n            value: \"7:00 AM\"\r\n        },{\r\n            dispValue: \"7:30 AM\",\r\n            value: \"7:30 AM\"\r\n        },\r\n        {\r\n        dispValue: \"8:00 AM\",\r\n        value: \"8:00 AM\"\r\n    }, {\r\n        dispValue: \"8:30 AM\",\r\n        value: \"8:30 AM\"\r\n    }, {\r\n        dispValue: \"9:00 AM\",\r\n        value: \"9:00 AM\"\r\n    }, {\r\n        dispValue: \"9:30 AM\",\r\n        value: \"9:30 AM\"\r\n    }, {\r\n        dispValue: \"10:00 AM\",\r\n        value: \"10:00 AM\"\r\n    }, {\r\n        dispValue: \"10:30 AM\",\r\n        value: \"10:30 AM\"\r\n    }, {\r\n        dispValue: \"11:00 AM\",\r\n        value: \"11:00 AM\"\r\n    }, {\r\n        dispValue: \"11:30 AM\",\r\n        value: \"11:30 AM\"\r\n    }, {\r\n        dispValue: \"12:00 PM\",\r\n        value: \"12:00 PM\"\r\n    }, {\r\n        dispValue: \"12:30 PM\",\r\n        value: \"12:30 PM\"\r\n    }, {\r\n        dispValue: \"1:00 PM\",\r\n        value: \"1:00 PM\"\r\n    }, {\r\n        dispValue: \"1:30 PM\",\r\n        value: \"1:30 PM\"\r\n    }, {\r\n        dispValue: \"2:00 PM\",\r\n        value: \"2:00 PM\"\r\n    }, {\r\n        dispValue: \"2:30 PM\",\r\n        value: \"2:30 PM\"\r\n    }, {\r\n        dispValue: \"3:00 PM\",\r\n        value: \"3:00 PM\"\r\n    }, {\r\n        dispValue: \"3:30 PM\",\r\n        value: \"3:30 PM\"\r\n    }, {\r\n        dispValue: \"4:00 PM\",\r\n        value: \"4:00 PM\"\r\n    }, {\r\n        dispValue: \"4:30 PM\",\r\n        value: \"4:30 PM\"\r\n    }, {\r\n        dispValue: \"5:00 PM\",\r\n        value: \"5:00 PM\"\r\n    }, {\r\n        dispValue: \"5:30 PM\",\r\n        value: \"5:30 PM\"\r\n    }, {\r\n        dispValue: \"6:00 PM\",\r\n        value: \"6:00 PM\"\r\n    }, {\r\n        dispValue: \"6:30 PM\",\r\n        value: \"6:30 PM\"\r\n    }, {\r\n        dispValue: \"7:00 PM\",\r\n        value: \"7:00 PM\"\r\n    }, {\r\n        dispValue: \"7:30 PM\",\r\n        value: \"7:30 PM\"\r\n    }, {\r\n        dispValue: \"8:00 PM\",\r\n        value: \"8:00 PM\"\r\n    }, {\r\n        dispValue: \"8:30 PM\",\r\n        value: \"8:30 PM\"\r\n    }, {\r\n        dispValue: \"9:00 PM\",\r\n        value: \"9:00 PM\"\r\n    },{\r\n        dispValue: \"9:30 PM\",\r\n        value: \"9:30 PM\"\r\n    },{\r\n        dispValue: \"10:00 PM\",\r\n        value: \"10:00 PM\"\r\n    },{\r\n        dispValue: \"10:30 PM\",\r\n        value: \"10:30 PM\"\r\n    },{\r\n        dispValue: \"11:00 PM\",\r\n        value: \"11:00 PM\"\r\n    },{\r\n        dispValue: \"11:30 PM\",\r\n        value: \"11:30 PM\"\r\n    }],\r\n    stateList: [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\",\r\n        \"Jammu & Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\",\r\n        \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\",\r\n        \"West Bengal\", \"Andaman and Nicobar Islands\", \"Chandigarh\", \"Dadra and Nagar Haveli\", \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"\r\n    ],\r\n\r\n    leadStatusList: [{\r\n        value: \"newleadentery\",\r\n        dispValue: \"New Lead Entry\"\r\n    }, {\r\n        value: \"nocontact\",\r\n        dispValue: \"No Contact\"\r\n    }, {\r\n        value: \"contact\",\r\n        dispValue: \"Contact\"\r\n    }],\r\n\r\n    Cnvrted: [{\r\n        value: \"converted\",\r\n        dispValue: \"Converted\"\r\n    }],\r\n\r\n    /***\r\n     * This is for support \r\n     * When freh lead is created then user choose contact and callback then lead user can't be able to convert it fresh lead;\r\n     */\r\n    leadStatusListUpdate: [{\r\n        value: \"nocontact\",\r\n        dispValue: \"No Contact\"\r\n    }, {\r\n        value: \"contact\",\r\n        dispValue: \"Contact\"\r\n    }, ],\r\n\r\n\r\n    appointmentStatus: [{\r\n        value: \"newappointment\",\r\n        dispValue: \"New Appointment\"\r\n    }, {\r\n        value: \"followup\",\r\n        dispValue: \"Follow Up\"\r\n    }, {\r\n        value: \"notintrested\",\r\n        dispValue: \"Not Interested\"\r\n    }, {\r\n        value: \"notavailable\",\r\n        dispValue: \"Not Available\"\r\n    }, {\r\n        value: \"wrngnumber\",\r\n        dispValue: \"Wrong Number\"\r\n    }, {\r\n        value: \"convertd\",\r\n        dispValue: \"Converted\"\r\n    }, {\r\n        value: \"renewalcollected\",\r\n        dispValue: \"Renewal Collected\"\r\n    }],\r\n\r\n    /**\r\n     * @author Khan Usama\r\n     * Date 15/10/2018\r\n     * @description Here all number of arrays based on appointment disposition, dispositions based on \r\n     * appointment status \"appointmentStatus\"\r\n     * \r\n     * example: when I choose followup on appointment status then appointment dispositions shows the list \r\n     * related to followup\r\n     * \r\n     * Note:  Appointment Disposition fields is volatile or a dynamic. values are changed according to \r\n     * requirement, the important thing is all disposition array contains {text, value} it is must.\r\n     */\r\n    _appointDispoList: {\r\n\r\n        newAppt: [{ value: \"newApptmnt\", dispValue: \"New Appointment\" }],\r\n        // When Appointent and follow up\r\n        followUp: [{\r\n            value: 'metcustomer',\r\n            dispValue: 'Met Customer, in follow up for closure'\r\n        }, {\r\n            value: 'notmet',\r\n            dispValue: 'Not Met - Reschedule Appt'\r\n        }],\r\n\r\n        // When After appointment then not intrested\r\n        _notIntrest: [{\r\n            value: 'apptDenies',\r\n            dispValue: 'Client denies giving appointment'\r\n        }, {\r\n            value: 'metFollowupNotIntrested',\r\n            dispValue: 'Met, followed up, then not interested'\r\n        }],\r\n\r\n        // when Appointment and not available\r\n        availableNot: [{ value: 'phoneNtAvailble', dispValue: 'Phone not available always' }],\r\n\r\n        _fWrongNo: [{ value: 'Wrong_Number', dispValue: 'Wrong Number' }],\r\n        converted: [{ value: \"leadconverted\", dispValue: \"Convinced for a new policy\" }],\r\n        renCallBack: [{ value: \"ConvinceRenPay\", dispValue: \"Convinced for renewal payment\" }]\r\n    },\r\n\r\n    // Appointment Dispositons are ends here\r\n\r\n    nonContact: [{\r\n        value: \"notreachable\",\r\n        dispValue: \"Not reachable\"\r\n    }, {\r\n        value: \"ringingbusy\",\r\n        dispValue: \"Ringing Busy\"\r\n    }, {\r\n        value: \"wrongnumber\",\r\n        dispValue: \"Wrong number\"\r\n    }, {\r\n        value: \"invalid\",\r\n        dispValue: \"Invalid Number\"\r\n    }, {\r\n        value: \"switchoff\",\r\n        dispValue: \"Switched off\"\r\n    }],\r\n\r\n    contact: [{\r\n        value: \"appointment\",\r\n        dispValue: \"Appointment\"\r\n    }, {\r\n        value: \"callback\",\r\n        dispValue: \"Callback\"\r\n    }, {\r\n        value: \"shorthangup\",\r\n        dispValue: \"Short hang up\"\r\n    }, {\r\n        value: \"notinterested\",\r\n        dispValue: \"Not Interested\"\r\n    }, {\r\n        value: \"nonserviceloc\",\r\n        dispValue: \"Non Servicable location\"\r\n    }, {\r\n        value: \"noteligible\",\r\n        dispValue: \"Not Eligible\"\r\n    }],\r\n\r\n\r\n    callBack: [\r\n        \"Asked to call back later\",\r\n        \"Decision maker unavailable\",\r\n        \"ECS is active asked to call on due date\",\r\n    ],\r\n\r\n    notIntrested: [\r\n        \"Not interested to Meet\",\r\n        \"Did not Enquire\",\r\n        \"Too Expensive\",\r\n        \"Not interested to continue Existing Policy\",\r\n    ],\r\n    notEligible: [\r\n        \"NE - Income\",\r\n        \"NE - Age\"\r\n    ],\r\n\r\n    appntment: [\r\n        \"Client has given appointment\"\r\n    ],\r\n\r\n    // latest\r\n\r\n    _aptSubDispList: {\r\n        _appt: {\r\n            newApptmnt: ['Untouched / Not updated Appointment']\r\n        },\r\n        followUp: {\r\n            metcustomer: [\"Met Customer, in follow up for closure\"],\r\n            notmet: ['Customer agreed to meet at another time', 'Not Met - Reschedule Appt as phone keeps on ringing']\r\n        },\r\n        N_I: {\r\n            apptDenies: [\"Client denies giving appointment\"],\r\n            metFollowupNotIntrested: [\"Met, followed up, then not interested\", \"Bought policy from competition\", \"Wants to check options and buy online\", \"Lack of funds\", \"Interested in other investment tools\"]\r\n        },\r\n        N_A: {\r\n            phoneNtAvailble: [\"Not reachable / no answer / switched off always\"]\r\n        },\r\n        W_N: {\r\n            Wrong_Number: ['Wrong Number']\r\n        },\r\n        Conv: {\r\n            leadconverted: ['Successfully closed appt, Convinced for a new policy']\r\n        },\r\n        R_C: {\r\n            ConvinceRenPay: ['Successfully closed appt, Convinced for renewal payment']\r\n        }\r\n    },\r\n\r\n    notMetReschedAppt: [\r\n        \"Customer agreed to meet at another time\",\r\n        \"Not Met - Reschedule Appt as phone keeps on ringing\",\r\n    ],\r\n\r\n    metFollUpNI: [\r\n        \"Met, followed up, then not interested\",\r\n        \"Bought policy from competition\",\r\n        \"Wants to check options and buy online\",\r\n        \"Lack of funds\",\r\n        \"Interested in other investment tools\",\r\n    ],\r\n\r\n\r\n    // Proposal details in lead\r\n    // date 21/11/2018\r\n\r\n    propsalDetails: {\r\n        cardsList: [\r\n            {\r\n                title: 'Life Assured Details',\r\n                _id: 'C1',\r\n                route: '/master/testapp',\r\n                list: [\r\n                    {\r\n                        label: 'Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'DOB',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Gender',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Employee No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Mobile No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Email ID',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Proposer Details',\r\n                _id: 'C2',\r\n                route: '/master/testpro/proposalpersonal',\r\n                list: [\r\n                    {\r\n                        label: 'Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'DOB',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Gender',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Employee No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Mobile No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Email ID',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Appointee/Nominee Details',\r\n                _id: 'C3',\r\n                route: '/master/testpro/proposalnominee',\r\n                list: [\r\n                    {\r\n                        label: 'DOB',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Gender',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Employee No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Mobile No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Email ID',\r\n                        data: ''\r\n                    }\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'Plan Details',\r\n                _id: 'C4',\r\n                route: '/master/testapp',\r\n                list: [\r\n                    {\r\n                        label: 'Plan Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Plan Code Category',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Policy Term',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Premium Paying Term',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Sum Assured',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            }, \r\n            {\r\n                title: 'Premium Details',\r\n                _id: 'C5',\r\n                route: '/master/testapp',\r\n                list: [\r\n                    {\r\n                        label: 'Premium Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Installment Premium',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Annualized Premium',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'ECS/Direct/Debit',\r\n                        data: ''\r\n                    }, \r\n                ]\r\n            }, \r\n            {\r\n                title: 'Other Details',\r\n                _id: 'C6',\r\n                route: '/master/testapp',\r\n                list: [\r\n                   \r\n                    {\r\n                        label: 'Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Code',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            }, \r\n            {\r\n                title: 'Payment Details',\r\n                _id: 'C7',\r\n                route: '/master/testapp',\r\n                list: [\r\n                    {\r\n                        label:'Installment Premium',\r\n                        data: ''\r\n                    },\r\n                    {\r\n                        label: 'Payment Mode',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Recorded Amount',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Bank Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Branch Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Mobile No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Email ID',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}","import _ from 'lodash';\r\nimport dataLibrary from './dataLibrary'\r\n\r\nlet nonContact = dataLibrary.nonContact;\r\nlet contact = dataLibrary.contact;\r\nlet _apStatusList = dataLibrary.appointmentStatus;\r\nlet _appointDispoList = dataLibrary._appointDispoList;\r\n\r\n\r\nexport const stoageSetter = (key, value) =>{\r\n    let stringify = JSON.stringify(value)\r\n    window.localStorage.setItem(key, encryptDecrypt(stringify, 'encrypt'))\r\n    return value;\r\n}\r\n\r\nexport const encryptDecrypt = (str, type) => {\r\n    return (type === \"encrypt\") ? str : str\r\n}\r\n\r\nexport const camelCaseKeys = (obj) =>{\r\n    return _.mapKeys(obj, (v, k) => _.camelCase(k))\r\n}\r\n\r\nexport const stoageRemover = (key) => {\r\n    window.localStorage.removeItem(key);\r\n}\r\n\r\nexport const stoageGetter = (key) => {\r\n    let value= null, temp =null;\r\n    if(typeof key === \"object\")\r\n    {\r\n        value = {};\r\n        _.map(key, function(k){\r\n            temp = window.localStorage.getItem(k);\r\n            temp = (temp) ? JSON.parse(encryptDecrypt(temp, 'decrypt')) : temp\r\n            value[k] = temp\r\n        })    \r\n    }\r\n    else if (typeof key === \"string\")\r\n    {\r\n        value = null;\r\n        if(key)\r\n        {\r\n            value = window.localStorage.getItem(key);\r\n            value = (value) ? JSON.parse(encryptDecrypt(value, 'decrypt')) : value\r\n    \r\n        }\r\n    }\r\n    return value\r\n}\r\n\r\nexport const checkAgent=(levelCode,minValue)=>{\r\n      return   levelCode === minValue ? false : true\r\n}\r\n\r\nexport const dataFormatting =(resp, title, desc)=> {\r\n    // console.log(\"desc object check\",desc);\r\n\r\n    let _obj = {};\r\n    _obj['date'] = new Date(parseInt(resp.created_date)).toLocaleString();\r\n    // _obj['owner'] = resp.userId.first_name\r\n    _obj['owner'] = resp.userId !== null ? doSentenceCase(resp.userId.first_name) : \"\";\r\n    // _obj['owner']       = resp.Owner;\r\n    _obj['desc'] = desc.replace('|undefined|', '');\r\n    _obj['highlight'] = true;\r\n    _obj['title'] = title;\r\n\r\n    console.log(_obj)\r\n    return _obj;\r\n}\r\n\r\nexport function getLabel(item) {\r\n    let result = compare_C(item, contact, 'value', 'dispValue');  \r\n\r\n    console.log('Here the Result of Dipsositions : ', result);\r\n\r\n    // Comparision purpos\r\n    return (\r\n        result === \"\" ? \r\n        (compare_C(item, nonContact, 'value', 'dispValue') === \"\" ? \r\n        (compare_C(item, _apStatusList, 'value', 'dispValue') === \"\" ? (compare_C(item, _appointDispoList, 'value', 'dispValue') === \"\" ? \"\" : compare_C(item, _appointDispoList, 'value', 'dispValue')) : compare_C(item, _apStatusList, 'value', 'dispValue')): compare_C(item, nonContact, 'value', 'dispValue')) \r\n        : result\r\n    );\r\n\r\n}\r\nexport function doSentenceCase(strText) {\r\n    try {\r\n        var _str = strText.toLowerCase();\r\n        var collection = _str.split(\" \");\r\n        var modifyStrigs = [];\r\n        _str = '';\r\n        for (var i = 0; i < collection.length; i++) {\r\n            modifyStrigs[i] = collection[i].charAt(0).toUpperCase() + collection[i].slice(1);\r\n            _str = _str + modifyStrigs[i] + ' ';\r\n\r\n        }\r\n        return _str.trim();\r\n    } catch (err) {}\r\n}\r\n\r\nexport function milisecondToTime(milisecond) {\r\n    try {\r\n        console.log(\"MILESECOND :::::\", milisecond);\r\n        let index = dataLibrary.timeList.findIndex(e => e.value === milisecond.toString());\r\n\r\n        console.log(\"current Index : \", index);\r\n\r\n\r\n        if (index === -1) {\r\n            return \"\";\r\n        } else {\r\n            console.log(\"Result:::\", dataLibrary.timeList[index].dispValue);\r\n            return dataLibrary.timeList[index].dispValue;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport function respDetails(respData) {\r\n    console.log(\"Response Details object\",respData)\r\n    try {\r\n        if (typeof(respData) == \"string\") {\r\n            respData = respData.split(\"|\");\r\n            let makeString = \"\";\r\n            for (let i = 0; i < respData.length; i++) {\r\n                let value = respData[i].trim();\r\n                if (value !== \"\") {\r\n                    makeString = makeString + value + \"|\";\r\n                } else {\r\n                    makeString = ''\r\n                }\r\n            }\r\n            return makeString;\r\n        } else {\r\n            return \"\"\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n}\r\nexport function idFilter(id, initial = null) {\r\n    try {\r\n        if (id !== '') {\r\n            if (initial === null || initial === undefined || initial === \"\") {\r\n                initial = 'L';\r\n            }\r\n            if (typeof(id) !== undefined) {\r\n                id = initial + id.slice(16, 25).toUpperCase();\r\n\r\n            }\r\n        }\r\n        console.log(id)\r\n        return id;\r\n    } catch (err) {}\r\n}\r\n\r\nvar compare_C = function(item, _array, _with, key) {\r\n    // return new Promise((resolve, reject) => {\r\n    //     for(let i = 0; i < _array.length; i++) {\r\n    //         item == _array[i][_with] ? resolve(_array[i][_with]) : reject(false)\r\n    //     }\r\n    // });\r\n\r\n    let result = \"\";\r\n    for(let i = 0; i < _array.length; i++) {\r\n        if(item === _array[i][_with]) {\r\n            result = _array[i][key];\r\n            break;\r\n        } else {result = \"\";}\r\n    }\r\n    return result;\r\n}\r\nexport const milToDateString =(milisec)=>{\r\n    const date = new Date(milisec).toLocaleDateString('in')\r\n    return date\r\n}\r\n\r\nexport const getLeadFilter=(leadFilter)=>{\r\n    const leadFilterObj = {\r\n        all_lead:'all',\r\n        fortoday:'fortoday',\r\n        openlead:'open',\r\n        convertedleads:'converted',\r\n        pendingproposal:'failed'\r\n    }\r\n    switch(leadFilter){\r\n        case \"all_lead\":return 'all';\r\n        case \"fortoday\":return 'fortoday';\r\n        case \"openlead\":return 'open';\r\n        case \"convertedleads\":return 'converted';\r\n        case \"pendingproposal\":return 'failed';\r\n\r\n        default:  return 'all';\r\n\r\n    }\r\n    // console.log(leadFilterObj.leadFilter)\r\n    // return leadFilterObj.leadFilter\r\n}","import React from 'react'\r\nimport './App.css';\r\nimport {BrowserRouter as Router,Switch,Route,Redirect} from 'react-router-dom'\r\nimport {Spin} from 'antd';\r\n\r\nconst LeadMaster = React.lazy(()=> import('./containers/LeadMaster/index'))\r\nconst StatusLead = React.lazy(()=> import('./components/StatusLead/StatusLead'))\r\nconst PersonalDetails = React.lazy(()=> import('./components/LeadDetails/PersonalDetails/PersonalDetails'))\r\nconst ContactDetails = React.lazy(()=> import('./components/LeadDetails/ContactDetails/ContactDetails'))\r\nconst ProfessionalDetails = React.lazy(()=> import('./components/LeadDetails/ProfessionalDetails/ProfessionalDeatils'))\r\nconst ExistingInsurance = React.lazy(()=> import('./components/LeadDetails/ExistingInsurance'))\r\nconst ProposedProduct = React.lazy(()=> import('./components/LeadDetails/ProposedProduct'))\r\nconst ProposalDetails = React.lazy(()=> import('./components/ProposalDetails/ProposalDetails'))\r\nconst DocumentsUpload = React.lazy(()=> import('./components/DocumentsUpload/DocumentsUpload'))\r\nconst History = React.lazy(()=> import('./components/History/History'))\r\nconst Login = React.lazy(()=> import('./components/Login/Login'))\r\nconst ForgotPassword = React.lazy(()=> import('./components/ForgotPassword/ForgotPassword'))\r\nconst ChangePassword = React.lazy(()=> import('./components/ChangePassword/ChangePassword'))\r\nconst Sidebar = React.lazy(()=> import('./components/SideBar/SideBar'))\r\nconst ClubsMaster = React.lazy(()=> import('./components/ClubMaster/ClubsMaster'))\r\nconst Birthday = React.lazy(()=> import('./components/Birthday/Birthday'))\r\nconst HomePage = React.lazy(()=> import('./components/Home/HomePage'))\r\nconst CompletedContest = React.lazy(()=> import('./components/Contests/CompletedContest'))\r\nconst ActiveContest = React.lazy(()=> import('./components/Contests/ActiveContest'))\r\nconst ActiveContestDetails = React.lazy(()=> import('./components/Contests/ActiveContestDetails'))\r\nconst AllContestDetails = React.lazy(()=> import('./components/Contests/AllContestDetails'))\r\nconst AllContest = React.lazy(()=> import('./components/Contests/AllContest'))\r\nconst CompletedContestDetails = React.lazy(()=> import('./components/Contests/CompletedContestDetails'))\r\nconst MyOverallRanking = React.lazy(()=> import('./components/Contests/MyOverallRanking'))\r\nconst AllContestDetails1 = React.lazy(()=> import('./components/Contests/AllContestDetails'))\r\nconst ActiveContestDetails1 = React.lazy(()=> import('./components/Contests/ActiveContestDetails'))\r\nconst CompletedContest1 = React.lazy(()=> import('./components/Contests/CompletedContest'))\r\nconst Calendar = React.lazy(()=> import('./components/Contests/CalendarEvent'))\r\nconst AgentMicroService = React.lazy(()=> import('./components/AgentMicroSite/AgentMicroSite'))\r\nconst KpiDashboard = React.lazy(()=> import('./components/KpiDashboard/KpiDashboard'))\r\nconst Blog = React.lazy(()=> import('./components/AgentMicroSite/Blog'))\r\nconst AdvisorPitch = React.lazy(()=> import('./components/AdvisorPitch/AdvisorPitch'))\r\nconst BenefitIllustrator = React.lazy(()=> import('./components/BenefitIllustrator/BenefitIllustrator'))\r\nconst ForCustomer = React.lazy(()=> import('./components/ForCustomer/ForCustomer'))\r\nconst ForSelf = React.lazy(()=> import('./components/ForSelf/ForSelf'))\r\nconst RenewalReport = React.lazy(()=> import('./components/RenewalReport/RenewalReport'))\r\n// const SalesPitch = React.lazy(()=> import('./components/SalesPitch/SalesPitch'))\r\nconst ServiceCorner = React.lazy(()=> import('./components/ServiceCorner/ServiceCorner'))\r\nconst Renewals = React.lazy(()=> import('./containers/RenewalMaster/index'))\r\nconst RenewalAll = React.lazy(()=> import('./components/RenewalCollections/AllRenewals'))\r\nconst RenewalPaid = React.lazy(()=> import('./components/RenewalCollections/PaidRenewals'))\r\nconst RenewalUnPaid = React.lazy(()=> import('./components/RenewalCollections/UnPaidRenewals'))\r\nconst RenewalLapsed = React.lazy(()=> import('./components/RenewalCollections/LapsedRenewals'))\r\nconst RenewalMasterDetails = React.lazy(()=> import('./components/RenewalCollections/RenewalDetails'))\r\nconst SalesPendency = React.lazy(()=> import('./components/SalesPendency/SalesPendency'))\r\n// const ExistingPartner = React.lazy(()=> import('./components/Partners/ExistingPartner'))\r\nconst MappedBranches = React.lazy(()=> import('./components/MappedBranches/MappedBranches'))\r\nconst LoanProducts = React.lazy(()=> import('./components/Products/LoanProducts'))\r\n\r\nfunction App() {\r\n  return (\r\n  <React.Suspense fallback={<Spin size=\"large\" className=\"loader\"/>}>\r\n    \r\n      <Router>\r\n        <div className=\"box-size\">\r\n          <Switch>\r\n              {/* <Route exact path=\"/\">\r\n                  <Redirect to=\"/\" />\r\n              </Route> */}\r\n              <Route path=\"/login\"  component={Login}></Route>\r\n              <Route path=\"/forgotpassword\" component={ForgotPassword}></Route>\r\n              <Route path=\"/changepassword\" component={ChangePassword}></Route>\r\n              <Route path=\"/blog\" component={Blog}></Route>\r\n              <Route path=\"/leadMaster/:leadType\" component={LeadMaster}></Route>\r\n              <Route path=\"/leadmasterpage/statuslead\" component={StatusLead}></Route>\r\n              <Route path=\"/leadmasterpage/leaddetails/personallead\" component={PersonalDetails}></Route>\r\n              <Route path=\"/leadmasterpage/leaddetails/contactlead\" component={ContactDetails}></Route>\r\n              <Route path=\"/leadmasterpage/leaddetails/professionallead\" component={ProfessionalDetails}></Route>\r\n              <Route path=\"/leadmasterpage/leaddetails/existingLead\" component={ExistingInsurance}></Route>\r\n              <Route path=\"/leadmasterpage/leaddetails/productLead\" component={ProposedProduct}></Route>\r\n              <Route path=\"/leadmasterpage/proposal\" component={ProposalDetails}></Route>\r\n              <Route path=\"/leadmasterpage/leadmasterdoc/leaddoc\" component={DocumentsUpload}></Route>\r\n              <Route path=\"/leadmasterpage/leadhistorymaster/leadhistory\" component={History}></Route>\r\n\r\n\r\n\r\n\r\n              {/* Make this route at the end only. */}\r\n              <Route  path=\"/\" component={AgentMicroService}></Route>\r\n              <div>\r\n              <Sidebar />\r\n              <Route path=\"/clubsMaster\" component={ClubsMaster}></Route>\r\n              <Route path=\"/birthday\" component={Birthday}></Route>\r\n              <Route path=\"/home\"  component={HomePage}></Route>\r\n              <Route path=\"/rewardscorner/contests/completed\"  component={CompletedContest}></Route>\r\n              <Route path=\"/rewardscorner/contests/allcontest\"  component={AllContest}/>\r\n              <Route path=\"/rewardscorner/contests/myoverallranking\"  component={MyOverallRanking}/>\r\n              <Route path=\"/rewardscorner/contests/activecontest\"  component={ActiveContest}/>\r\n              <Route path=\"/rewardscorner/contests/activecontestdetails\"  component={ActiveContestDetails}/>\r\n              <Route path=\"/calendar\" component={Calendar}/>\r\n              <Route path=\"/kpi-dashboard\" component={KpiDashboard}/>\r\n              <Route path=\"/advisorpitch\" component={AdvisorPitch}></Route>\r\n              <Route path=\"/benefitillustrator\" component={BenefitIllustrator}></Route>\r\n              <Route path=\"/forcustomer\" component={ForCustomer}></Route>\r\n              <Route path=\"/forself\" component={ForSelf}></Route>\r\n              <Route path=\"/renewalreport\" component={RenewalReport}></Route>\r\n              {/* <Route path=\"/salespitch\" component={SalesPitch}></Route> */}\r\n              <Route path=\"/servicecorner\" component={ServiceCorner}></Route>\r\n              <Route path=\"/renewalMaster/allRenewals\" component={Renewals}/>\r\n              <Route path=\"/renewalMaster/all\" component={RenewalAll}/>\r\n              <Route path=\"/renewalMaster/paidRenewals\" component={RenewalPaid}/>\r\n              <Route path=\"/renewalMaster/unpaidRenewals\" component={RenewalUnPaid}/>\r\n              <Route path=\"/renewalMaster/lapsedRenewals\" component={RenewalLapsed}/>\r\n              <Route path=\"/renewalMaster/Details\" component={RenewalMasterDetails}/>\r\n              <Route path=\"/salespendency\" component={SalesPendency}></Route>\r\n              {/* <Route path=\"/existingpartner\" component={ExistingPartner}/> */}\r\n              <Route path=\"/mappedbranches\" component={MappedBranches}></Route>\r\n              <Route path=\"/products/loanproducts\" component={LoanProducts}/>\r\n              </div>\r\n              \r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  </React.Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    // leads properties\r\n    allLeads:[],\r\n    allLeads_Loading : false,\r\n    fetch_allLeads_Loading : false,\r\n    selected_allLeads : null,\r\n    fetch_allLeads_Error : \"\",\r\n\r\n    // lead form meta data\r\n    fetchDesignationLoading:false,\r\n    designations:[],\r\n    fetchDesignationError:'',\r\n\r\n}\r\n// lead reducer\r\nconst fetchAllLeadsStart = (state, action) => {\r\n    return updateObject(state, { fetch_allLeads_Loading: true })\r\n}\r\n\r\nconst fetchAllLeadsSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_allLeads_Loading: false, allLeads: action.allLeads, count:action.count, selected_all_leads: action.selected_allLeads })\r\n}\r\nconst fetchAllLeadsFail = (state, action) => {\r\n    return updateObject(state, { \r\n        fetch_allLeads_Loading: false, \r\n        fetch_allLeads_Error: action.error,\r\n        allLeads:[]\r\n    });\r\n}\r\n\r\nconst fetchDesignationStart = (state, action) => {\r\n    return updateObject(state, { fetchDesignationLoading: true })\r\n}\r\n\r\nconst fetchDesignationSuccess = (state, action) => {\r\n    return updateObject(state, { fetchDesignationLoading: false, designations: action.designations })\r\n}\r\nconst fetchDesignationFail = (state, action) => {\r\n    return updateObject(state, { fetchDesignationLoading: false, fetchDesignationError: action.error });\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // lead\r\n        case actionTypes.FETCH_ALL_LEADS_START: return fetchAllLeadsStart(state, action)\r\n        case actionTypes.FETCH_ALL_LEADS_SUCCESS: return fetchAllLeadsSuccess(state, action)\r\n        case actionTypes.FETCH_ALL_LEADS_FAIL: return fetchAllLeadsFail(state, action)\r\n\r\n        case actionTypes.FETCH_DESIGNATION_START: return fetchDesignationStart(state, action)\r\n        case actionTypes.FETCH_DESIGNATION_SUCCESS: return fetchDesignationSuccess(state, action)\r\n        case actionTypes.FETCH_DESIGNATION_FAIL: return fetchDesignationFail(state, action)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    createLeadLoading:false,\r\n    createLeadError:'',\r\n    editLeadLoading:false,\r\n    editLeadError:'',\r\n    leadDataloading:false,\r\n    leadId:'',\r\n    userId:'',\r\n    address:{\r\n        line1:'',\r\n        line2:'',\r\n        line3:'',\r\n    },\r\n    mailingAddressSecond:{\r\n        mailingaddress: {\r\n            line1: '',\r\n            line2: '',\r\n            line3: '',\r\n        },\r\n    },\r\n    HaveLifeInsurance_details:[],\r\n    Insurancedetails:[],\r\n    formData:{},\r\n     payloadFormData :{\r\n        // statusLeadData: {\r\n            leadStatus: '',\r\n            leadDisposition: '',\r\n            leadsubDisposition: '',\r\n            appointment_status: '',\r\n            appointmentdisPosition: '',\r\n            appointmentsubdisPosition: '',\r\n            lead_Owner_Id: '',\r\n            user_id: '',\r\n            lead_Creator_Id: '',\r\n            start_date: '',\r\n            start_time:  '',\r\n            remarksfromSource: '',\r\n            remarksfromUser: '',\r\n            teamMembers: '',\r\n            productId: '',\r\n            proposalId: '',\r\n            leadSource: '',\r\n            LeadType:'',\r\n            Product:'',\r\n            Insurance_Company:'',\r\n        // },\r\n        // personalLeadData: {\r\n            firstName:'',\r\n            lastName:'',\r\n            dob: '',\r\n            gender: '',\r\n            maritalStatus: '',\r\n            childStatus: '',\r\n            ChildInfo: '',\r\n        // },\r\n        // contactLeadData: {\r\n            primaryMobile:'', \r\n            state: '',\r\n            city: '',\r\n            email: '',\r\n            address: {\r\n                line1: '',\r\n                line2: '',\r\n                line3: '',\r\n            },\r\n            country: '',\r\n            pincode: '',\r\n            secondaryMobile: '',\r\n            landlineNo: '',\r\n            socialSecurityAdharNo: '',\r\n            mailingAddressStatus: '',\r\n            mailingAddressSecond: {\r\n                mailingaddress: {\r\n                    line1: '',\r\n                    line2: '',\r\n                    line3: '',\r\n                },\r\n                state: '',\r\n                city:'', \r\n                country: '',\r\n                pincode: '',\r\n            }\r\n        // }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst createLeadStart = (state, action) => {\r\n    return updateObject(state, { createLeadLoading: true,leadDataloading:false })\r\n}\r\n\r\nconst createLeadSuccess = (state, action) => {\r\n    \r\n    return updateObject(state, { \r\n            leadDataloading:true,\r\n            createLeadLoading: false, \r\n            formData: action.formData,\r\n            leadId:action.formData._id,\r\n            userId:action.formData.userId\r\n         })\r\n}\r\nconst createLeadFail = (state, action) => {\r\n    return updateObject(state, { createLeadLoading: false, createLeadError: action.error,leadDataloading:false });\r\n}\r\n\r\nconst editLeadStart = (state, action) => {\r\n    return updateObject(state, { \r\n        editLeadLoading:true\r\n    })\r\n}\r\n\r\nconst editLeadSuccess = (state, action) => {\r\n    return updateObject(state, { \r\n            editLeadLoading:false,\r\n            createLeadLoading: false, \r\n            formData: action.formData,\r\n            leadId:action.formData[0]._id,\r\n            userId:action.formData[0].userId\r\n         })\r\n}\r\nconst editLeadFail = (state, action) => {\r\n    return updateObject(state, { \r\n        editLeadError: action.error,\r\n        leadDataloading:false \r\n    });\r\n}\r\n\r\nconst fetchLeadDetailsStart = (state, action) => {\r\n    return updateObject(state, { createLeadLoading: true,leadDataloading:true })\r\n}\r\n\r\nconst fetchLeadDetailsSuccess = (state, action) => {\r\n    const addSecond = {...state.mailingAddressSecond,...action.mailingAddressSecond}\r\n    // const Insurancedetails = [...state.Insurancedetails,...action.Insurancedetails]\r\n    // const Insurancedetails = action.leadDetails.Insurancedetails\r\n\r\n    // let address1 \r\n    // let address2\r\n    // console.log(mailingAddressStatus)\r\n    // if(action.leadDetails.mailingAddressStatus==='Yes'){\r\n    //      address1 = action.leadDetails.mailingAddressSecond\r\n    //     //  addObj1 = JSON.parse(address1)\r\n    //      address2 = address1\r\n            \r\n   \r\n    //     }else{\r\n    //          address1 = action.leadDetails.mailingAddress\r\n    //         //  addObj1 = JSON.parse(address1)\r\n    //          address2 = action.leadDetails.mailingAddressSecond\r\n    //         //  addObj2 = JSON.parse(address2)\r\n    // }\r\n    // const {mailingaddress:{line1}={line1:'hello'}} = action.leadDetails.mailingAddress\r\n        const  {Insurancedetails} = action.leadDetails\r\n        const  healthInsObject = JSON.parse(Insurancedetails)\r\n\r\n        const  {HaveLifeInsurance_details} = action.leadDetails\r\n        const  lifeInsObject = JSON.parse(HaveLifeInsurance_details)\r\n    return updateObject(state, { \r\n        leadDataloading:false,\r\n        createLeadLoading: false, \r\n        formData: action.leadDetails,\r\n        payloadFormData: action.leadDetails,\r\n        // mailingAddress:address1,\r\n        // mailingAddressSecond:address2,\r\n        leadId:action.leadDetails._id,\r\n        userId:action.leadDetails.userId._id,\r\n        Insurancedetails:healthInsObject,\r\n        HaveLifeInsurance_details:lifeInsObject,\r\n        address:action.leadDetails.address[0],\r\n        mailingAddressSecond:addSecond,\r\n    })\r\n}\r\nconst fetchLeadDetailsFail = (state, action) => {\r\n    return updateObject(state, { createLeadLoading: false, createLeadError: action.error,leadDataloading:false  });\r\n}\r\n\r\n\r\nconst storeForm = (state, action) => {\r\n    return updateObject(state, { createLeadLoading: false, formData: action.formData })\r\n}   \r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // lead\r\n        case actionTypes.CREATE_LEAD_START: return createLeadStart(state, action)\r\n        case actionTypes.CREATE_LEAD_SUCCESS: return createLeadSuccess(state, action)\r\n        case actionTypes.CREATE_LEAD_FAIL: return createLeadFail(state, action)\r\n\r\n        case actionTypes.EDIT_LEAD_START: return editLeadStart(state, action)\r\n        case actionTypes.EDIT_LEAD_SUCCESS: return editLeadSuccess(state, action)\r\n        case actionTypes.EDIT_LEAD_FAIL: return editLeadFail(state, action)\r\n\r\n        case actionTypes.FETCH_LEAD_DETAILS_START: return fetchLeadDetailsStart(state, action)\r\n        case actionTypes.FETCH_LEAD_DETAILS_SUCCESS: return fetchLeadDetailsSuccess(state, action)\r\n        case actionTypes.FETCH_LEAD_DETAILS_FAIL: return fetchLeadDetailsFail(state, action)\r\n\r\n        case actionTypes.STORE_FORM_SUCCESS: return storeForm(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    \r\n    // states \r\n    states:{},\r\n    fetch_States_Loading:false,\r\n    fetch_States_Error:\"\",\r\n\r\n    //cities props\r\n    cities:{},\r\n    fetch_Cities_Loading:false,\r\n    fetch_Cities_Error:\"\"\r\n}\r\n// states reducer\r\nconst fetchStateStart = (state, action) => {\r\n    return updateObject(state, { fetch_States_Loading: true })\r\n}\r\n\r\nconst fetchStateSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_States_Loading: false, states: action.states})\r\n}\r\nconst fetchStateFail = (state, action) => {\r\n    return updateObject(state, { fetch_States_Loading: false, fetch_States_Error: action.error });\r\n}\r\n\r\n//cities reducer\r\nconst fetchCitiesStart = (state, action) => {\r\n    return updateObject(state, { fetch_Cities_Loading: true })\r\n}\r\n\r\nconst fetchCitiesSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_Cities_Loading: false, cities: action.cities[0].cities})\r\n}\r\nconst fetchCitiesFail = (state, action) => {\r\n    return updateObject(state, { fetch_Cities_Loading: false, fetch_Cities_Error: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      \r\n        //state\r\n        case actionTypes.FETCH_STATES_START: return fetchStateStart(state, action)\r\n        case actionTypes.FETCH_STATES_SUCCESS: return fetchStateSuccess(state, action)\r\n        case actionTypes.FETCH_STATES_FAIL: return fetchStateFail(state, action)\r\n\r\n        case actionTypes.FETCH_CITIES_START: return fetchCitiesStart(state, action)\r\n        case actionTypes.FETCH_CITIES_SUCCESS: return fetchCitiesSuccess(state, action)\r\n        case actionTypes.FETCH_CITIES_FAIL: return fetchCitiesFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\nimport { stoageGetter, stoageSetter, camelCaseKeys} from '../../helpers';\r\n\r\nconst initialState = {\r\n    login_agent_data:null,\r\n    agent_id:\"\",\r\n    userId:'',\r\n    login_error:null,\r\n    channelCode:'',\r\n    user:null,\r\n\r\n    userDetails:{},\r\n    levelCode:'',\r\n    hierarchy:{},\r\n    minValue:'',\r\n    checkAgent:false\r\n}\r\n\r\nlet user = stoageGetter('user') \r\nif(user){\r\n    initialState.user = user\r\n}\r\n\r\nconst loginStart = (state, action) => {\r\n    return updateObject(state, { fetch_allLeads_Loading: true })\r\n}\r\n\r\nconst loginSuccess = (state, action) => {\r\n    // console.log(\"id\",action.login_agent_data._id)\r\n    let user= camelCaseKeys({...action.login_agent_data})\r\n    // localStorage.setItem('user',user)\r\n     stoageSetter('user', user);\r\n     \r\n    return updateObject(state,{ \r\n            fetch_allLeads_Loading: false, \r\n            // login_agent_data: action.login_agent_data,\r\n            user:user,\r\n            user_name: action.login_agent_data.first_name,\r\n            agent_id: action.login_agent_data.agent_id,\r\n            userId: action.login_agent_data._id,\r\n            // channelCode:action.login_agent_data.channelCode\r\n         })\r\n}\r\nconst loginFail = (state, action) => {\r\n    return updateObject(state, { \r\n            fetch_allLeads_Loading: false, \r\n            login_error: action.error \r\n        });\r\n}\r\n\r\nconst logoutStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst logoutSuccess = (state, action) => {\r\n    stoageSetter('user', null);\r\n    stoageSetter('headers', {});\r\n    window.localStorage.removeItem('user')\r\n    window.localStorage.removeItem('headers')\r\n    return updateObject(state, {user: null, headers: {}, loading: false});\r\n};\r\n\r\n// const logoutFail = (state, action) => {\r\n//     stoageSetter('user', null);\r\n//     stoageSetter('headers', {});\r\n//     window.localStorage.removeItem('user')\r\n//     window.localStorage.removeItem('headers')\r\n//     return updateObject(state, {user: null, headers: {} ,loading: false, error: action.error});\r\n// };\r\n\r\n// Post login Reducers- Get User details\r\nconst fetchUserDetailsStart = (state, action) => {\r\n    return updateObject(state, { fetch_UserDetails_Loading: true })\r\n}\r\n\r\nconst fetchUserDetailsSuccess = (state, action) => {\r\n    const userDetails = action.userDetails\r\n    return updateObject(state, { \r\n            fetch_UserDetails_Loading: false, \r\n            userDetails: userDetails,\r\n            levelCode:userDetails.hierarchy_id.levelCode,\r\n            channelCode:userDetails.channelCode._id\r\n        })\r\n}\r\nconst fetchUserDetailsFail = (state, action) => {\r\n    return updateObject(state, { \r\n            fetch_UserDetails_Loading: false, \r\n            fetch_UserDetails_Error: action.error \r\n        });\r\n}\r\n\r\n// Get Hierarchy\r\nconst fetchHierarchyStart = (state, action) => {\r\n    return updateObject(state, { fetch_Hierarchy_Loading: true })\r\n}\r\n\r\nconst fetchHierarchySuccess = (state, action) => {\r\n    const hierarchyData = action.hierarchy\r\n    let levelCodeArray = []\r\n    for (let i = 0; i < hierarchyData.length; i++) {\r\n        let levelCode = hierarchyData[i].levelCode\r\n        levelCodeArray.push(levelCode)\r\n    }\r\n    levelCodeArray.sort((a, b) => a - b)\r\n    let minValue = Math.min(...levelCodeArray)\r\n    return updateObject(state, { \r\n            fetch_Hierarchy_Loading: false, \r\n            hierarchy: hierarchyData, \r\n            minValue:minValue\r\n        })\r\n}\r\nconst fetchHierarchyFail = (state, action) => {\r\n    return updateObject(state, { \r\n            fetch_Hierarchy_Loading: false, \r\n            fetch_Hierarchy_Error: action.error \r\n        });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case actionTypes.LOGIN_START: return loginStart(state, action)\r\n        case actionTypes.LOGIN_SUCCESS: return loginSuccess(state, action)\r\n        case actionTypes.LOGIN_FAIL: return loginFail(state, action)\r\n\r\n        case actionTypes.AUTH_LOGOUT_START: return logoutStart(state, action);\r\n        case actionTypes.AUTH_LOGOUT_SUCCESS: return logoutSuccess(state, action);\r\n\r\n        case actionTypes.FETCH_USER_DETAILS_START: return fetchUserDetailsStart(state, action)\r\n        case actionTypes.FETCH_USER_DETAILS_SUCCESS: return fetchUserDetailsSuccess(state, action)\r\n        case actionTypes.FETCH_USER_DETAILS_FAIL: return fetchUserDetailsFail(state, action)\r\n\r\n        case actionTypes.FETCH_HIERARCHY_START: return fetchHierarchyStart(state, action)\r\n        case actionTypes.FETCH_HIERARCHY_SUCCESS: return fetchHierarchySuccess(state, action)\r\n        case actionTypes.FETCH_HIERARCHY_FAIL: return fetchHierarchyFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    home_obj: null,\r\n    activities:[],\r\n    home_Loading : false,\r\n    fetch_Home_Loading : false,\r\n    home_Error : \"\",\r\n    activities_Loading : false,\r\n    fetch_Activities_Loading : false,\r\n    activities_Error : \"\",\r\n\r\n}\r\n\r\nconst fetchHomeStart = (state, action) => {\r\n    return updateObject(state, { fetch_Home_Loading: true })\r\n}\r\n\r\nconst fetchHomeSuccess = (state, action) => {\r\n    console.log(\"actions of home\",action)\r\n    return updateObject(state, { fetch_Home_Loading: false, home_obj: action.home, count:action.count})\r\n}\r\nconst fetchHomeFail = (state, action) => {\r\n    return updateObject(state, { fetch_Home_Loading: false, home_Error: action.error });\r\n}\r\n\r\n\r\nconst fetchActivitiesStart = (state, action) => {\r\n    return updateObject(state, { fetch_Activities_Loading: true })\r\n}\r\n\r\nconst fetchActivitiesSuccess = (state, action) => {\r\n    console.log(\"actions of activities\",action)\r\n    return updateObject(state, { fetch_Activities_Loading: false, activities_obj: action.activities})\r\n}\r\nconst fetchActivitiesFail = (state, action) => {\r\n    return updateObject(state, { fetch_Activities_Loading: false, activities_Error: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case actionTypes.HOME_START: return fetchHomeStart(state, action)\r\n        case actionTypes.HOME_SUCCESS: return fetchHomeSuccess(state, action)\r\n        case actionTypes.LOGIN_FAIL: return fetchHomeFail(state, action)\r\n\r\n        case actionTypes.ACTIVITIES_START: return fetchActivitiesStart(state, action)\r\n        case actionTypes.ACTIVITIES_SUCCESS: return fetchActivitiesSuccess(state, action)\r\n        case actionTypes.ACTIVITIES_FAIL: return fetchActivitiesFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    kpi_data:[],\r\n    fetch_Kpidashboard_Loading : false,\r\n    kpiDashboard_Error : \"\",\r\n\r\n}\r\n\r\n\r\nconst fetchKpiDashboardStart = (state, action) => {\r\n    return updateObject(state, { fetch_Kpidashboard_Loading: true })\r\n}\r\n\r\nconst fetchKpiDashboardSuccess = (state, action) => {\r\n    console.log(\"actions of kpidashboard\",action)\r\n    return updateObject(state, { fetch_Kpidashboard_Loading: false, kpi_data: action.kpi_data})\r\n}\r\nconst fetchKpiDashboardFail = (state, action) => {\r\n    return updateObject(state, { fetch_Kpidashboard_Loading: false, kpiDashboard_Error: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionTypes.KPI_DASHBOARD_START: return fetchKpiDashboardStart(state, action)\r\n        case actionTypes.KPI_DASHBOARD_SUCCESS: return fetchKpiDashboardSuccess(state, action)\r\n        case actionTypes.KPI_DASHBOARD_FAIL: return fetchKpiDashboardFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    // renewal properties\r\n    allRenewals:[],\r\n    paidRenewals:[],\r\n    unPaidRenewals:[],\r\n    lapsedRenewals:[],\r\n    details: null,\r\n    paidRenewals_Loading : false,\r\n    fetch_paidRenewals_Loading : false,\r\n    unPaidRenewals_Loading : false,\r\n    fetch_unPaidRenewals_Loading : false,\r\n    allRenewals_Loading : false,\r\n    fetch_allRenewals_Loading : false,\r\n    selected_allRenewals : null,\r\n    fetch_allRenewals_Error : \"\",\r\n    fetch_paidRenewals_Error : \"\",\r\n    fetch_unPaidRenewals_Error : \"\",\r\n}\r\n// renewals reducer\r\nconst fetchAllRenewalsStart = (state, action) => {\r\n    return updateObject(state, { fetch_allRenewals_Loading: true })\r\n}\r\n\r\nconst fetchAllRenewalsSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_allRenewals_Loading: false, allRenewals: action.allRenewals, count:action.count })\r\n}\r\nconst fetchAllRenewalsFail = (state, action) => {\r\n    return updateObject(state, { fetch_allRenewals_Loading: false, fetch_allRenewals_Error: action.error });\r\n}\r\n\r\nconst fetchPaidRenewalsStart = (state, action) => {\r\n    return updateObject(state, { fetch_paidRenewals_Loading: true })\r\n}\r\n\r\nconst fetchPaidRenewalsSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_paidRenewals_Loading: false, paidRenewals: action.paidRenewals, count:action.count })\r\n}\r\nconst fetchPaidRenewalsFail = (state, action) => {\r\n    return updateObject(state, { fetch_paidRenewals_Loading: false, fetch_paidRenewals_Error: action.error });\r\n}\r\n\r\nconst fetchUnPaidRenewalsStart = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: true })\r\n}\r\n\r\nconst fetchUnPaidRenewalsSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: false, unPaidRenewals: action.unPaidRenewals, count:action.count })\r\n}\r\nconst fetchUnPaidRenewalsFail = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: false, fetch_unPaidRenewals_Error: action.error });\r\n}\r\n\r\nconst fetchRenewalDetailsStart = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: true })\r\n}\r\n\r\nconst fetchRenewalDetailsSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: false, details: action.RenewalDetails })\r\n}\r\nconst fetchRenewalDetailsFail = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: false, fetch_unPaidRenewals_Error: action.error });\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // renewals\r\n        case actionTypes.FETCH_ALL_RENEWALS_START: return fetchAllRenewalsStart(state, action)\r\n        case actionTypes.FETCH_ALL_RENEWALS_SUCCESS: return fetchAllRenewalsSuccess(state, action)\r\n        case actionTypes.FETCH_ALL_RENEWALS_FAIL: return fetchAllRenewalsFail(state, action)\r\n\r\n        case actionTypes.FETCH_PAID_RENEWALS_START: return fetchPaidRenewalsStart(state, action)\r\n        case actionTypes.FETCH_PAID_RENEWALS_SUCCESS: return fetchPaidRenewalsSuccess(state, action)\r\n        case actionTypes.FETCH_PAID_RENEWALS_FAIL: return fetchPaidRenewalsFail(state, action)\r\n\r\n        case actionTypes.FETCH_UNPAID_RENEWALS_START: return fetchUnPaidRenewalsStart(state, action)\r\n        case actionTypes.FETCH_UNPAID_RENEWALS_SUCCESS: return fetchUnPaidRenewalsSuccess(state, action)\r\n        case actionTypes.FETCH_UNPAID_RENEWALS_FAIL: return fetchUnPaidRenewalsFail(state, action)\r\n\r\n        case actionTypes.FETCH_DETAILS_RENEWALS_START: return fetchRenewalDetailsStart(state, action)\r\n        case actionTypes.FETCH_DETAILS_RENEWALS_SUCCESS: return fetchRenewalDetailsSuccess(state, action)\r\n        case actionTypes.FETCH_DETAILS_RENEWALS_FAIL: return fetchRenewalDetailsFail(state, action)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\nimport _ from \"lodash\";\r\n\r\n\r\nconst initialState = {\r\n    \r\n    // states \r\n    productCategory:[],\r\n    fetchProductLoading:false,\r\n    fetchProductError:\"\",\r\n\r\n    planName:[],\r\n    fetchPlanLoading:false,\r\n    fetchPlanError:\"\",\r\n}\r\n\r\nconst fetchProductStart = (state, action) => {\r\n    return updateObject(state, { fetchProductLoading: true })\r\n}\r\n\r\nconst fetchProductSuccess = (state, action) => {\r\n    console.log(action)\r\n    return updateObject(state, { fetchProductLoading: false, productCategory: action.productCategory})\r\n}\r\nconst fetchProductFail = (state, action) => {\r\n    return updateObject(state, { fetchProductLoading: false, fetchProductError: action.error });\r\n}\r\n\r\nconst fetchPlanNameStart = (state, action) => {\r\n    return updateObject(state, { fetchPlanLoading: true })\r\n}\r\n\r\nconst fetchPlanNameSuccess = (state, action) => {\r\n    const planNames = action.planName\r\n    let planNameOptions = planNames.map(planName => {\r\n                            const {productName,_id,\r\n                                // channelCode:{channelCode}\r\n                            }= planName\r\n                            const label = productName\r\n                            const value = productName\r\n                            // const chCode = channelCode\r\n                            const newProductCategories = { \r\n                                // chCode,\r\n                                _id,\r\n                                label, value }\r\n                            return newProductCategories\r\n                        })\r\n    return updateObject(state, { \r\n        fetchPlanLoading: false, \r\n        planName: planNameOptions\r\n    })\r\n}\r\nconst fetchPlanNameFail = (state, action) => {\r\n    return updateObject(state, { fetchPlanLoading: false, fetchPlanError: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      \r\n        case actionTypes.FETCH_PRODUCT_START: return fetchProductStart(state, action)\r\n        case actionTypes.FETCH_PRODUCT_SUCCESS: return fetchProductSuccess(state, action)\r\n        case actionTypes.FETCH_PRODUCT_FAIL: return fetchProductFail(state, action)\r\n\r\n        case actionTypes.FETCH_PLAN_NAME_START: return fetchPlanNameStart(state, action)\r\n        case actionTypes.FETCH_PLAN_NAME_SUCCESS: return fetchPlanNameSuccess(state, action)\r\n        case actionTypes.FETCH_PLAN_NAME_FAIL: return fetchPlanNameFail(state, action)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    \r\n    // states \r\n    first_name:'',\r\n    last_name:'',\r\n    testimonials:[],\r\n    achievements:{},\r\n    fetchAgentDetailsLoading:false,\r\n    fetchAgentDetailsError:\"\",\r\n\r\n}\r\n// states reducer\r\nconst fetchAgentDetailsStart = (state, action) => {\r\n    return updateObject(state, { fetchAgentDetailsLoading: true })\r\n}\r\n\r\nconst fetchAgentDetailsSuccess = (state, action) => {\r\n    const { first_name, last_name,micrositeId:{achievements,Testimonials} } = action.agentDetails\r\n    // console.log(achievements,Testimonials)\r\n    // const {}\r\n\r\n    return updateObject(state, { \r\n        fetchAgentDetailsLoading: false, \r\n        agentDetails: action.agentDetails,\r\n        first_name:first_name,\r\n        last_name:last_name,\r\n        achievements:achievements,\r\n        testimonials:Testimonials\r\n    })\r\n}\r\nconst fetchAgentDetailsFail = (state, action) => {\r\n    return updateObject(state, { fetchAgentDetailsLoading: false, fetchAgentDetailsError: action.error });\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n      \r\n        //state\r\n        case actionTypes.FETCH_AGENT_DETAILS_START: return fetchAgentDetailsStart(state, action)\r\n        case actionTypes.FETCH_AGENT_DETAILS_SUCCESS: return fetchAgentDetailsSuccess(state, action)\r\n        case actionTypes.FETCH_AGENT_DETAILS_FAIL: return fetchAgentDetailsFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\nimport { dataFormatting, getLabel, doSentenceCase, idFilter, respDetails, milisecondToTime } from '../../helpers'\r\nimport _ from 'lodash'\r\nimport { ApiOutlined } from '@ant-design/icons';\r\nconst initialState = {\r\n    history: [],\r\n    fetchHistoryLoading: false,\r\n    fetchHistoryError: '',\r\n    proposalData: [],\r\n    leadData: [],\r\n    appointmentData:[]\r\n\r\n}\r\nconst fetchHistoryStart = (state, action) => {\r\n    return updateObject(state, { fetchHistoryLoading: true })\r\n}\r\n\r\nconst fetchHistorySuccess = (state, action) => {\r\n    const historyDetailsArr = action.history\r\n    console.log(historyDetailsArr)\r\n    let proposalArr = []\r\n    let leadArr = []\r\n    let appointmentArr = []\r\n    let issuanceArr = []\r\n    let desc = null\r\n    const newArr = historyDetailsArr.map((historydetail) => {\r\n        // console.log(historydetail)\r\n        if (historydetail.AppointmetData !== undefined ) {\r\n            // console.log(historydetail)\r\n            if (historydetail.leadleadDisposition === 'callback') {\r\n                desc = 'Callback date ' + new Date(parseInt(historydetail.AppointmetData.start_date)).toLocaleDateString() + '  Callback time ' + milisecondToTime(historydetail.AppointmetData.start_time)\r\n                if (historydetail.allocated === false) {\r\n                    console.log('callback false')\r\n                    leadArr.push(dataFormatting(historydetail, 'Updated - ' + getLabel(historydetail.leadDisposition), desc + ' ' + respDetails(historydetail.Details2) + ' ' + respDetails(historydetail.Details3)));\r\n                } else {\r\n                    console.log('callback true')\r\n\r\n                    leadArr.push(dataFormatting(historydetail, 'Lead Allocated', desc + ' ' + respDetails(historydetail.Details2) + ' ' + respDetails(historydetail.Details3)));\r\n                }\r\n            } \r\n            else if (historydetail.leadDisposition === \"appointment\") {\r\n                // Appointment  10/28/2018\r\n                if (Array.isArray(historydetail.AppointmetData)) {\r\n                    console.log('apointment false')\r\n\r\n                    // moment(historydetail.AppointmetData[0].start_time).format('LT');\r\n                    desc = 'Appointment date ' + new Date(parseInt(historydetail.AppointmetData[0].start_date)).toLocaleDateString() + '  Appointment time ' + milisecondToTime(historydetail.AppointmetData[0].start_time)\r\n                } else {\r\n                    console.log('apointment true')\r\n\r\n                    // moment(historydetail.AppointmetData.start_time).format('LT');\r\n                    desc = 'Appointment date ' + new Date(parseInt(historydetail.AppointmetData.start_date)).toLocaleDateString() + '  Appointment time ' + milisecondToTime(historydetail.AppointmetData.start_time)\r\n                }\r\n                appointmentArr.push(historydetail.allocated === false ?\r\n                    dataFormatting(historydetail, 'New Appointment Created', desc + ' ' + respDetails(historydetail.Details2) + ' ' + respDetails(historydetail.Details3)) :\r\n                    dataFormatting(historydetail, 'Appointment Allocated', desc + ' ' + respDetails(historydetail.Details2) + ' ' + respDetails(historydetail.Details3)))\r\n            }\r\n\r\n        } else {\r\n\r\n            if (historydetail.Status === 'newleadentery') {\r\n                desc = doSentenceCase(historydetail.Details1) + ' ' + historydetail.Details2.split('|')[0]\r\n                historydetail.allocated === true ? \r\n                leadArr.push(dataFormatting(historydetail, 'Lead Allocated', desc)) \r\n                : leadArr.push(dataFormatting(historydetail, 'New Lead Created', desc))\r\n                \r\n            }\r\n            else if (historydetail.AppointmentStatus !== \"\") {\r\n                console.log('lead update')\r\n                desc = doSentenceCase(historydetail.Details1) + '  ' +  respDetails(historydetail.Details2);\r\n                historydetail.allocated === false ? \r\n                // console.log('hello')\r\n                appointmentArr.push(dataFormatting(historydetail, 'Updated - ' + getLabel(historydetail.AppointmentStatus), desc)) \r\n                : appointmentArr.push(dataFormatting(historydetail, 'Lead Allocated', desc))\r\n            } \r\n            else if (historydetail.Status === 'Proposalstarted') {\r\n                /**\r\n                 * When proposal is generated then that code is executed\r\n                 */\r\n                desc = (historydetail.Status === 'Proposalstarted' ? 'Proposal Started' : historydetail.Status) + ' | ' + idFilter(historydetail.proposal_Id.productId, 'P');\r\n                proposalArr.push(dataFormatting(historydetail, 'New BI Created', desc));\r\n\r\n            } else if (historydetail.Status === 'login') {\r\n                if (typeof (historydetail.Details1) === \"object\") {\r\n\r\n                    let _obj = {};\r\n                    _obj['date'] = new Date(parseInt(historydetail.created_date)).toLocaleString();\r\n                    _obj['owner'] = historydetail.Details1.AdvisorName;\r\n                    _obj['desc'] = 'Type of Life: ' + historydetail.Details2[0].requestType + ' | Category of issue :' + historydetail.Details2[0].categoryofIssue + ' | Type of issue: ' + historydetail.Details2[0].typeofIssue;\r\n                    _obj['highlight'] = true;\r\n                    _obj['title'] = 'Requirement Raised';\r\n\r\n                    proposalArr.push(_obj);\r\n\r\n                } else {\r\n\r\n                    // desc = self.doSentenceCase(historydetail.Details1)+' | '+this.respDetails(historydetail.Details2);\r\n                    // self.historyList[2].data.push(self.dataFormatting(historydetail, 'Document Uploaded', desc)); \r\n\r\n                    desc = historydetail.Details1 + ' | ' + (historydetail.Status === 'login' ? 'Login' : historydetail.Status) + ' | ' + idFilter(historydetail.proposal_Id.productId, 'P');\r\n                    proposalArr.push(dataFormatting(historydetail, 'Document Uploaded', desc));\r\n                }\r\n            } else if (historydetail.Status === 'issued') {\r\n                desc = historydetail.Details1 + ' | ' + (historydetail.Status === 'issued' ? 'Issued' : historydetail.Status) + ' | ' + idFilter(historydetail.proposal_Id.productId, 'P');\r\n                proposalArr.push(dataFormatting(historydetail, 'Policy Issued', desc));\r\n\r\n            } else if (historydetail.Status === 'rejected') {\r\n                desc = historydetail.Details1 + ' | ' + (historydetail.Status === 'rejected' ? 'Rejected' : historydetail.Status) + ' | ' + idFilter(historydetail.proposal_Id.productId, 'P');\r\n                proposalArr.push(dataFormatting(historydetail, 'Policy Rejected', desc));\r\n            } else {\r\n                /**\r\n                 * No contact section code eexecuted from here\r\n                 */\r\n                desc = doSentenceCase(historydetail.Details1) + ' ' + respDetails(historydetail.Details2)\r\n\r\n                if (historydetail.allocated === false) {\r\n                    leadArr.push(dataFormatting(historydetail, 'Updated - ' + getLabel(historydetail.leadDisposition), desc))\r\n                } else {\r\n                    leadArr.push(dataFormatting(historydetail, 'Lead Allocated', desc))\r\n                }\r\n            }\r\n        }\r\n\r\n    })\r\n// console.log(historyDetailsArr)\r\n// console.log('proposal arr',proposalArr)\r\n// console.log('lead arr',leadArr)\r\n// console.log('lead Arr',appointmentArr)\r\n// console.log('issuance Arr',issuanceArr)\r\nreturn updateObject(state, {\r\n    fetchHistoryLoading: false,\r\n    history: action.history,\r\n    leadData: leadArr,\r\n    appointmentData:appointmentArr,\r\n    proposalData: proposalArr,\r\n})\r\n}\r\nconst fetchHistoryFail = (state, action) => {\r\n    return updateObject(state, { fetchHistoryLoading: false, fetchHistoryError: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        //state\r\n        case actionTypes.FETCH_HISTORY_START: return fetchHistoryStart(state, action)\r\n        case actionTypes.FETCH_HISTORY_SUCCESS: return fetchHistorySuccess(state, action)\r\n        case actionTypes.FETCH_HISTORY_FAIL: return fetchHistoryFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport leadsReducer from './leads';\r\nimport createLeadReducer from './newLead'\r\nimport addressReducer from './address'\r\nimport loginReducer from './auth';\r\nimport homeReducer from './home';\r\nimport activitiesReducer from './home';\r\nimport kpiDashboardReducer from './kpiDashboard'\r\nimport renewalReducer from './renewals'\r\nimport productReducer from './product'\r\nimport agentReducer from './agentMicroSite'\r\n// import activitiesReducer from './home'\r\nimport historyReducer from './history'\r\n// import pendencyReducer from './penc'\r\nconst rootReducer = combineReducers({\r\n    leads:leadsReducer,\r\n    newLead:createLeadReducer,\r\n    address:addressReducer,\r\n    login:loginReducer,\r\n    home: homeReducer,\r\n    activities: activitiesReducer,\r\n    kpiDashboard: kpiDashboardReducer,\r\n    renewals: renewalReducer,\r\n    history:historyReducer,\r\n    product:productReducer,\r\n    agent:agentReducer,\r\n    // pendencies:pendencyReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport rootreducer from './store/reducers/index';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware,compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__  || compose;\r\n\r\nconst store = createStore(rootreducer,composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(\r\n  <Provider store={store} id=\"root\">\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>\r\n  ,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}