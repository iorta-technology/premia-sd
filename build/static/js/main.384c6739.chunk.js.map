{"version":3,"sources":["store/actions/actionTypes.js","dataLibrary.js","helpers.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/leads.js","store/reducers/newLead.js","store/reducers/address.js","store/reducers/auth.js","store/reducers/home.js","store/reducers/kpiDashboard.js","store/reducers/renewals.js","store/reducers/product.js","store/reducers/agentMicroSite.js","store/reducers/history.js","store/reducers/index.js","index.js"],"names":["FETCH_ALL_LEADS_START","FETCH_ALL_LEADS_SUCCESS","FETCH_ALL_LEADS_FAIL","FETCH_TEAM_MEMBER_START","FETCH_TEAM_MEMBER_SUCCESS","FETCH_TEAM_MEMBER_FAIL","FETCH_DESIGNATION_START","FETCH_DESIGNATION_SUCCESS","FETCH_DESIGNATION_FAIL","FETCH_LEAD_DETAILS_START","FETCH_LEAD_DETAILS_SUCCESS","FETCH_LEAD_DETAILS_FAIL","FETCH_HISTORY_START","FETCH_HISTORY_SUCCESS","FETCH_HISTORY_FAIL","CREATE_LEAD_START","CREATE_LEAD_SUCCESS","CREATE_LEAD_FAIL","EDIT_LEAD_START","EDIT_LEAD_SUCCESS","EDIT_LEAD_FAIL","STORE_FORM_SUCCESS","FETCH_PRODUCT_START","FETCH_PRODUCT_SUCCESS","FETCH_PRODUCT_FAIL","FETCH_PLAN_NAME_START","FETCH_PLAN_NAME_SUCCESS","FETCH_PLAN_NAME_FAIL","FETCH_STATES_START","FETCH_STATES_SUCCESS","FETCH_STATES_FAIL","FETCH_CITIES_START","FETCH_CITIES_SUCCESS","FETCH_CITIES_FAIL","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","AUTH_LOGOUT_START","AUTH_LOGOUT_SUCCESS","FETCH_USER_DETAILS_START","FETCH_USER_DETAILS_SUCCESS","FETCH_USER_DETAILS_FAIL","FETCH_HIERARCHY_START","FETCH_HIERARCHY_SUCCESS","FETCH_HIERARCHY_FAIL","HOME_START","HOME_SUCCESS","HOME_FAIL","ACTIVITIES_START","ACTIVITIES_SUCCESS","ACTIVITIES_FAIL","KPI_DASHBOARD_START","KPI_DASHBOARD_SUCCESS","KPI_DASHBOARD_FAIL","FETCH_ALL_RENEWALS_START","FETCH_ALL_RENEWALS_SUCCESS","FETCH_ALL_RENEWALS_FAIL","FETCH_PAID_RENEWALS_START","FETCH_PAID_RENEWALS_SUCCESS","FETCH_PAID_RENEWALS_FAIL","FETCH_UNPAID_RENEWALS_START","FETCH_UNPAID_RENEWALS_SUCCESS","FETCH_UNPAID_RENEWALS_FAIL","FETCH_LAPSED_RENEWALS_START","FETCH_LAPSED_RENEWALS_SUCCESS","FETCH_LAPSED_RENEWALS_FAIL","FETCH_DETAILS_RENEWALS_START","FETCH_DETAILS_RENEWALS_SUCCESS","FETCH_DETAILS_RENEWALS_FAIL","FETCH_AGENT_DETAILS_START","FETCH_AGENT_DETAILS_SUCCESS","FETCH_AGENT_DETAILS_FAIL","timeList","dispValue","value","timeListText","stateList","leadStatusList","Cnvrted","leadStatusListUpdate","appointmentStatus","_appointDispoList","newAppt","followUp","_notIntrest","availableNot","_fWrongNo","converted","renCallBack","nonContact","contact","callBack","notIntrested","notEligible","appntment","_aptSubDispList","_appt","newApptmnt","metcustomer","notmet","N_I","apptDenies","metFollowupNotIntrested","N_A","phoneNtAvailble","W_N","Wrong_Number","Conv","leadconverted","R_C","ConvinceRenPay","notMetReschedAppt","metFollUpNI","propsalDetails","cardsList","title","_id","route","list","label","data","dataLibrary","_apStatusList","stoageSetter","key","stringify","JSON","window","localStorage","setItem","encryptDecrypt","str","type","camelCaseKeys","obj","_","mapKeys","v","k","camelCase","stoageGetter","temp","map","getItem","parse","checkAgent","levelCode","minValue","dataFormatting","resp","desc","_obj","Date","parseInt","created_date","toLocaleString","userId","doSentenceCase","first_name","replace","console","log","getLabel","item","result","compare_C","strText","_str","toLowerCase","collection","split","modifyStrigs","i","length","charAt","toUpperCase","slice","trim","err","milisecondToTime","milisecond","index","findIndex","e","toString","error","respDetails","respData","makeString","idFilter","id","initial","undefined","_array","_with","getLeadFilter","leadFilter","LeadMaster","React","lazy","AdvisorList","StatusLead","PersonalDetails","ContactDetails","ProfessionalDetails","ExistingInsurance","ProposedProduct","ProposalDetails","DocumentsUpload","History","Login","ForgotPassword","ChangePassword","Sidebar","ClubsMaster","Birthday","HomePage","CompletedContest","ActiveContest","ActiveContestDetails","AllContest","MyOverallRanking","Calendar","AgentMicroService","KpiDashboard","Blog","AdvisorPitch","BenefitIllustrator","ForCustomer","ForSelf","RenewalReport","ServiceCorner","Renewals","RenewalAll","RenewalPaid","RenewalUnPaid","RenewalLapsed","RenewalMasterDetails","SalesPendency","ExistingPartner","ExistingPartnerDetails","MappedBranches","LoanProducts","ProposalFulfilment","PrePaymentReview","PaymentOptions","ProposalHistory","ProofAddress","NotFound","App","Suspense","fallback","size","className","exact","path","to","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","allLeads","allLeads_Loading","fetch_allLeads_Loading","selected_allLeads","fetch_allLeads_Error","fetchTeamMemberLoading","designations","fetchTeamMemberError","teamMember","fetchAllLeadsStart","state","action","fetchAllLeadsSuccess","count","selected_all_leads","fetchAllLeadsFail","fetchTeamMemberStart","fetchTeamMemberSuccess","fetchTeamMemberFail","reducer","actionTypes","logindata","createLeadLoading","createLeadError","editLeadLoading","editLeadError","leadDataloading","successMsg","leadId","user_Id","fetchLeadId","address","line1","line2","line3","mailingAddressSecond","mailingaddress","HaveLifeInsurance_details","Insurancedetails","childParsedData","payloadFormData","appointmentData","start_date","start_time","formData","leadStatus","leadDisposition","leadsubDisposition","appointment_status","appointmentdisPosition","appointmentsubdisPosition","lead_Owner_Id","user_id","lead_Creator_Id","remarksfromSource","remarksfromUser","teamMembers","productId","proposalId","leadSource","LeadType","Product","Insurance_Company","firstName","lastName","dob","gender","maritalStatus","childStatus","ChildInfo","primaryMobile","city","email","country","pincode","secondaryMobile","landlineNo","socialSecurityAdharNo","mailingAddressStatus","HaveLifeInsurance","ExistHealthInsur","ExistInsur","education","professionType","incomeGroup","errorMessage","createLeadStart","createLeadSuccess","payload","succMsg","createLeadFail","editLeadStart","editLeadSuccess","appointmentDetails","editLeadFail","fetchLeadDetailsStart","fetchLeadDetailsSuccess","addSecond","leadDetails","fetchLeadDetailsFail","storeForm","states","fetch_States_Loading","fetch_States_Error","cities","fetch_Cities_Loading","fetch_Cities_Error","fetchStateStart","fetchStateSuccess","fetchStateFail","fetchCitiesStart","fetchCitiesSuccess","fetchCitiesFail","login_agent_data","agent_id","login_error","channelCode","user","userDetails","hierarchy","loginStart","loginSuccess","user_name","loginFail","logoutStart","loading","logoutSuccess","removeItem","headers","fetchUserDetailsStart","fetch_UserDetails_Loading","fetchUserDetailsSuccess","hierarchy_id","fetchUserDetailsFail","fetch_UserDetails_Error","fetchHierarchyStart","fetch_Hierarchy_Loading","fetchHierarchySuccess","hierarchyData","levelCodeArray","push","sort","a","b","Math","min","fetchHierarchyFail","fetch_Hierarchy_Error","home_obj","activities","home_Loading","fetch_Home_Loading","home_Error","activities_Loading","fetch_Activities_Loading","activities_Error","fetchHomeStart","fetchHomeSuccess","home","fetchHomeFail","fetchActivitiesStart","fetchActivitiesSuccess","activities_obj","fetchActivitiesFail","kpi_data","fetch_Kpidashboard_Loading","kpiDashboard_Error","fetchKpiDashboardStart","fetchKpiDashboardSuccess","fetchKpiDashboardFail","allRenewals","paidRenewals","unPaidRenewals","lapsedRenewals","details","paidRenewals_Loading","fetch_paidRenewals_Loading","unPaidRenewals_Loading","fetch_unPaidRenewals_Loading","allRenewals_Loading","fetch_allRenewals_Loading","selected_allRenewals","fetch_allRenewals_Error","fetch_paidRenewals_Error","fetch_unPaidRenewals_Error","fetchAllRenewalsStart","fetchAllRenewalsSuccess","fetchAllRenewalsFail","fetchPaidRenewalsStart","fetchPaidRenewalsSuccess","fetchPaidRenewalsFail","fetchUnPaidRenewalsStart","fetchUnPaidRenewalsSuccess","fetchUnPaidRenewalsFail","fetchRenewalDetailsStart","fetchRenewalDetailsSuccess","RenewalDetails","fetchRenewalDetailsFail","productCategory","fetchProductLoading","fetchProductError","planName","fetchPlanLoading","fetchPlanError","fetchProductStart","fetchProductSuccess","fetchProductFail","fetchPlanNameStart","fetchPlanNameSuccess","planNameOptions","productName","fetchPlanNameFail","last_name","testimonials","achievements","fetchAgentDetailsLoading","fetchAgentDetailsError","profileImage","socialLinks","products","fetchAgentDetailsStart","fetchAgentDetailsSuccess","agentDetails","badges","microsite_settings","connectWithMe","fetchAgentDetailsFail","history","fetchHistoryLoading","fetchHistoryError","proposalData","leadData","fetchHistoryStart","fetchHistorySuccess","historyDetailsArr","proposalArr","leadArr","appointmentArr","historydetail","AppointmetData","leadleadDisposition","toLocaleDateString","allocated","Details2","Details3","Array","isArray","Status","Details1","AppointmentStatus","proposal_Id","AdvisorName","requestType","categoryofIssue","typeofIssue","fetchHistoryFail","rootReducer","combineReducers","leads","leadsReducer","newLead","createLeadReducer","addressReducer","login","loginReducer","homeReducer","activitiesReducer","kpiDashboard","kpiDashboardReducer","renewals","renewalReducer","historyReducer","product","productReducer","agent","agentReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootreducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGAAA,y7EACO,IAAMA,EAAyB,wBACzBC,EAA2B,0BAC3BC,EAAwB,uBAExBC,EAA2B,0BAC3BC,EAA6B,4BAC7BC,EAA0B,yBAE1BC,EAA2B,0BAC3BC,EAA6B,4BAC7BC,EAA0B,yBAsB1BC,EAA2B,2BAC3BC,EAA6B,6BAC7BC,EAA0B,0BAE1BC,EAAsB,sBACtBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAiB,iBAEjBC,EAAqB,qBAIrBC,EAAsB,sBACtBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAoB,oBAKpBC,EAAe,cACfC,EAAiB,gBACjBC,EAAc,aAGdC,EAAoB,oBACpBC,EAAsB,sBAGtBC,EAA2B,2BAC3BC,EAA6B,6BAC7BC,EAA0B,0BAE1BC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBAMvBC,EAAc,aACdC,EAAgB,eAChBC,EAAa,YAEbC,EAAoB,mBACpBC,EAAsB,qBACtBC,EAAmB,kBAGnBC,GAAsB,sBACtBC,GAAyB,wBACzBC,GAAsB,qBAGtBC,GAA4B,2BAC5BC,GAA8B,6BAC9BC,GAA2B,0BAE3BC,GAA6B,4BAC7BC,GAA+B,8BAC/BC,GAA4B,2BAE5BC,GAA+B,8BAC/BC,GAAiC,gCACjCC,GAA8B,6BAE9BC,GAA+B,8BAC/BC,GAAiC,gCACjCC,GAA8B,6BAG9BC,GAAgC,+BAChCC,GAAkC,iCAClCC,GAA+B,8BAM/BC,GAA6B,4BAC7BC,GAA+B,8BAC/BC,GAA4B,4B,0aCtI1B,GACXC,SAAU,CAAC,CACPC,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,YACR,CACCD,UAAW,UACXC,MAAO,aAEXC,aAAc,CACV,CACIF,UAAW,WACXC,MAAO,YACT,CACED,UAAW,WACXC,MAAO,YACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WACT,CACED,UAAW,UACXC,MAAO,WAEX,CACAD,UAAW,UACXC,MAAO,WACR,CACCD,UAAW,UACXC,MAAO,WACR,CACCD,UAAW,UACXC,MAAO,WACR,CACCD,UAAW,UACXC,MAAO,WACR,CACCD,UAAW,WACXC,MAAO,YACR,CACCD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K,CACDC,eAAgB,CAAC,6DAIzBC,kBAAmB,CACf,0CACA,uDAGJC,YAAa,CACT,wCACA,iCACA,wCACA,gBACA,wCAOJC,eAAgB,CACZC,UAAW,CACP,CACIC,MAAO,uBACPC,IAAK,KACLC,MAAO,kBACPC,KAAM,CACF,CACIC,MAAO,OACPC,KAAM,IACP,CACCD,MAAO,MACPC,KAAM,IACP,CACCD,MAAO,SACPC,KAAM,IACP,CACCD,MAAO,eACPC,KAAM,IACP,CACCD,MAAO,aACPC,KAAM,IACP,CACCD,MAAO,WACPC,KAAM,MAIlB,CACIL,MAAO,mBACPC,IAAK,KACLC,MAAO,mCACPC,KAAM,CACF,CACIC,MAAO,OACPC,KAAM,IACP,CACCD,MAAO,MACPC,KAAM,IACP,CACCD,MAAO,SACPC,KAAM,IACP,CACCD,MAAO,eACPC,KAAM,IACP,CACCD,MAAO,aACPC,KAAM,IACP,CACCD,MAAO,WACPC,KAAM,MAIlB,CACIL,MAAO,4BACPC,IAAK,KACLC,MAAO,kCACPC,KAAM,CACF,CACIC,MAAO,MACPC,KAAM,IACP,CACCD,MAAO,SACPC,KAAM,IACP,CACCD,MAAO,eACPC,KAAM,IACP,CACCD,MAAO,aACPC,KAAM,IACP,CACCD,MAAO,WACPC,KAAM,MAKlB,CACIL,MAAO,eACPC,IAAK,KACLC,MAAO,kBACPC,KAAM,CACF,CACIC,MAAO,YACPC,KAAM,IACP,CACCD,MAAO,qBACPC,KAAM,IACP,CACCD,MAAO,cACPC,KAAM,IACP,CACCD,MAAO,sBACPC,KAAM,IACP,CACCD,MAAO,cACPC,KAAM,MAIlB,CACIL,MAAO,kBACPC,IAAK,KACLC,MAAO,kBACPC,KAAM,CACF,CACIC,MAAO,eACPC,KAAM,IACP,CACCD,MAAO,sBACPC,KAAM,IACP,CACCD,MAAO,qBACPC,KAAM,IACP,CACCD,MAAO,mBACPC,KAAM,MAIlB,CACIL,MAAO,gBACPC,IAAK,KACLC,MAAO,kBACPC,KAAM,CAEF,CACIC,MAAO,OACPC,KAAM,IACP,CACCD,MAAO,OACPC,KAAM,MAIlB,CACIL,MAAO,kB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","file":"static/js/main.384c6739.chunk.js","sourcesContent":["// Lead Master Azim\r\nexport const FETCH_ALL_LEADS_START =  'FETCH_ALL_LEADS_START'\r\nexport const FETCH_ALL_LEADS_SUCCESS =  'FETCH_ALL_LEADS_SUCCESS'\r\nexport const FETCH_ALL_LEADS_FAIL =  'FETCH_ALL_LEADS_FAIL'\r\n\r\nexport const FETCH_TEAM_MEMBER_START =  'FETCH_TEAM_MEMBER_START'\r\nexport const FETCH_TEAM_MEMBER_SUCCESS =  'FETCH_TEAM_MEMBER_SUCCESS'\r\nexport const FETCH_TEAM_MEMBER_FAIL =  'FETCH_TEAM_MEMBER_FAIL'\r\n\r\nexport const FETCH_DESIGNATION_START =  'FETCH_DESIGNATION_START'\r\nexport const FETCH_DESIGNATION_SUCCESS =  'FETCH_DESIGNATION_SUCCESS'\r\nexport const FETCH_DESIGNATION_FAIL =  'FETCH_DESIGNATION_FAIL'\r\n\r\n// export const FETCH_TODAY_LEADS_START =  'FETCH_TODAY_LEADS_START'\r\n// export const FETCH_TODAY_LEADS_SUCCESS =  'FETCH_TODAY_LEADS_SUCCESS'\r\n// export const FETCH_TODAY_LEADS_FAIL =  'FETCH_TODAY_LEADS_FAIL'\r\n\r\n// export const FETCH_OPEN_LEADS_START =  'FETCH_OPEN_LEADS_START'\r\n// export const FETCH_OPEN_LEADS_SUCCESS =  'FETCH_OPEN_LEADS_SUCCESS'\r\n// export const FETCH_OPEN_LEADS_FAIL =  'FETCH_OPEN_LEADS_FAIL'\r\n\r\n// export const FETCH_CONVERTED_LEADS_START =  'FETCH_CONVERTED_LEADS_START'\r\n// export const FETCH_CONVERTED_LEADS_SUCCESS =  'FETCH_CONVERTED_LEADS_SUCCESS'\r\n// export const FETCH_CONVERTED_LEADS_FAIL =  'FETCH_CONVERTED_LEADS_FAIL'\r\n\r\n// export const FETCH_FAILED_LEADS_START =  'FETCH_FAILED_LEADS_START'\r\n// export const FETCH_FAILED_LEADS_SUCCESS =  'FETCH_FAILED_LEADS_SUCCESS'\r\n// export const FETCH_FAILED_LEADS_FAIL =  'FETCH_FAILED_LEADS_FAIL'\r\n\r\nexport const FETCH_LEAD_CATEGORY_START = 'FETCH_LEAD_CATEGORY_START'\r\nexport const FETCH_LEAD_CATEGORY_SUCCESS = 'FETCH_LEAD_CATEGORY_SUCCESS'\r\nexport const FETCH_LEAD_CATEGORY_FAIL = 'FETCH_LEAD_CATEGORY_FAIL'\r\n\r\nexport const FETCH_LEAD_DETAILS_START = 'FETCH_LEAD_DETAILS_START'\r\nexport const FETCH_LEAD_DETAILS_SUCCESS = 'FETCH_LEAD_DETAILS_SUCCESS'\r\nexport const FETCH_LEAD_DETAILS_FAIL = 'FETCH_LEAD_DETAILS_FAIL'\r\n\r\nexport const FETCH_HISTORY_START = 'FETCH_HISTORY_START'\r\nexport const FETCH_HISTORY_SUCCESS = 'FETCH_HISTORY_SUCCESS'\r\nexport const FETCH_HISTORY_FAIL = 'FETCH_HISTORY_FAIL'\r\n\r\nexport const CREATE_LEAD_START = 'CREATE_LEAD_START'\r\nexport const CREATE_LEAD_SUCCESS = 'CREATE_LEAD_SUCCESS'\r\nexport const CREATE_LEAD_FAIL = 'CREATE_LEAD_FAIL'\r\n\r\nexport const EDIT_LEAD_START = 'EDIT_LEAD_START'\r\nexport const EDIT_LEAD_SUCCESS = 'EDIT_LEAD_SUCCESS'\r\nexport const EDIT_LEAD_FAIL = 'EDIT_LEAD_FAIL'\r\n\r\nexport const STORE_FORM_SUCCESS = 'STORE_FORM_SUCCESS'\r\n\r\n\r\n\r\nexport const FETCH_PRODUCT_START = 'FETCH_PRODUCT_START'\r\nexport const FETCH_PRODUCT_SUCCESS = 'FETCH_PRODUCT_SUCCESS'\r\nexport const FETCH_PRODUCT_FAIL = 'FETCH_PRODUCT_FAIL'\r\n\r\nexport const FETCH_PLAN_NAME_START = 'FETCH_PLAN_NAME_START'\r\nexport const FETCH_PLAN_NAME_SUCCESS = 'FETCH_PLAN_NAME_SUCCESS'\r\nexport const FETCH_PLAN_NAME_FAIL = 'FETCH_PLAN_NAME_FAIL'\r\n// Addresses\r\nexport const FETCH_STATES_START = 'FETCH_STATES_START'\r\nexport const FETCH_STATES_SUCCESS = 'FETCH_STATES_SUCCESS'\r\nexport const FETCH_STATES_FAIL = 'FETCH_STATES_FAIL'\r\n\r\nexport const FETCH_CITIES_START = 'FETCH_CITIES_START'\r\nexport const FETCH_CITIES_SUCCESS = 'FETCH_CITIES_SUCCESS'\r\nexport const FETCH_CITIES_FAIL = 'FETCH_CITIES_FAIL'\r\n\r\n\r\n\r\n// Login Shiva \r\nexport const LOGIN_START =  'LOGIN_START'\r\nexport const LOGIN_SUCCESS =  'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL =  'LOGIN_FAIL'\r\n\r\n\r\nexport const AUTH_LOGOUT_START = 'AUTH_LOGOUT_START';\r\nexport const AUTH_LOGOUT_SUCCESS = 'AUTH_LOGOUT_SUCCESS';\r\nexport const AUTH_LOGOUT_FAIL = 'AUTH_LOGOUT_FAIL';\r\n\r\nexport const FETCH_USER_DETAILS_START = 'FETCH_USER_DETAILS_START'\r\nexport const FETCH_USER_DETAILS_SUCCESS = 'FETCH_USER_DETAILS_SUCCESS'\r\nexport const FETCH_USER_DETAILS_FAIL = 'FETCH_USER_DETAILS_FAIL'\r\n\r\nexport const FETCH_HIERARCHY_START = 'FETCH_HIERARCHY_START'\r\nexport const FETCH_HIERARCHY_SUCCESS = 'FETCH_HIERARCHY_SUCCESS'\r\nexport const FETCH_HIERARCHY_FAIL = 'FETCH_HIERARCHY_FAIL'\r\n\r\nexport const FORGOT_PASSWORD_START =  'FORGOT_PASSWORD_START'\r\nexport const FORGOT_PASSWORD_SUCCESS =  'FORGOT_PASSWORD_SUCCESS'\r\nexport const FORGOT_PASSWORD_FAIL =  'FORGOT_PASSWORD_FAIL'\r\n\r\nexport const HOME_START =  'HOME_START'\r\nexport const HOME_SUCCESS =  'HOME_SUCCESS'\r\nexport const HOME_FAIL =  'HOME_FAIL'\r\n\r\nexport const ACTIVITIES_START =  'ACTIVITIES_START'\r\nexport const ACTIVITIES_SUCCESS =  'ACTIVITIES_SUCCESS'\r\nexport const ACTIVITIES_FAIL =  'ACTIVITIES_FAIL'\r\n\r\n//KPI DASHBOARD\r\nexport const KPI_DASHBOARD_START = 'KPI_DASHBOARD_START'\r\nexport const KPI_DASHBOARD_SUCCESS =  'KPI_DASHBOARD_SUCCESS'\r\nexport const KPI_DASHBOARD_FAIL =  'KPI_DASHBOARD_FAIL'\r\n\r\n//all renewals\r\nexport const FETCH_ALL_RENEWALS_START =  'FETCH_ALL_RENEWALS_START'\r\nexport const FETCH_ALL_RENEWALS_SUCCESS =  'FETCH_ALL_RENEWALS_SUCCESS'\r\nexport const FETCH_ALL_RENEWALS_FAIL =  'FETCH_ALL_RENEWALS_FAIL'\r\n//paid renewals\r\nexport const FETCH_PAID_RENEWALS_START =  'FETCH_PAID_RENEWALS_START'\r\nexport const FETCH_PAID_RENEWALS_SUCCESS =  'FETCH_PAID_RENEWALS_SUCCESS'\r\nexport const FETCH_PAID_RENEWALS_FAIL =  'FETCH_PAID_RENEWALS_FAIL'\r\n//unpaid renewals\r\nexport const FETCH_UNPAID_RENEWALS_START =  'FETCH_UNPAID_RENEWALS_START'\r\nexport const FETCH_UNPAID_RENEWALS_SUCCESS =  'FETCH_UNPAID_RENEWALS_SUCCESS'\r\nexport const FETCH_UNPAID_RENEWALS_FAIL =  'FETCH_UNPAID_RENEWALS_FAIL'\r\n//lapsed renewals\r\nexport const FETCH_LAPSED_RENEWALS_START =  'FETCH_LAPSED_RENEWALS_START'\r\nexport const FETCH_LAPSED_RENEWALS_SUCCESS =  'FETCH_LAPSED_RENEWALS_SUCCESS'\r\nexport const FETCH_LAPSED_RENEWALS_FAIL =  'FETCH_LAPSED_RENEWALS_FAIL'\r\n\r\n// renewal details\r\nexport const FETCH_DETAILS_RENEWALS_START =  'FETCH_DETAILS_RENEWALS_START'\r\nexport const FETCH_DETAILS_RENEWALS_SUCCESS =  'FETCH_DETAILS_RENEWALS_SUCCESS'\r\nexport const FETCH_DETAILS_RENEWALS_FAIL =  'FETCH_DETAILS_RENEWALS_FAIL'\r\n\r\n\r\n\r\n\r\n// Agent Mirco Site \r\nexport const FETCH_AGENT_DETAILS_START =  'FETCH_AGENT_DETAILS_START'\r\nexport const FETCH_AGENT_DETAILS_SUCCESS =  'FETCH_AGENT_DETAILS_SUCCESS'\r\nexport const FETCH_AGENT_DETAILS_FAIL =  'FETCH_AGENT_DETAILS_FAIL'","export default {\r\n    timeList: [{\r\n        dispValue: \"8:00 AM\",\r\n        value: \"28800000\"\r\n    }, {\r\n        dispValue: \"8:30 AM\",\r\n        value: \"30600000\"\r\n    }, {\r\n        dispValue: \"9:00 AM\",\r\n        value: \"32400000\"\r\n    }, {\r\n        dispValue: \"9:30 AM\",\r\n        value: \"34200000\"\r\n    }, {\r\n        dispValue: \"10:00 AM\",\r\n        value: \"36000000\"\r\n    }, {\r\n        dispValue: \"10:30 AM\",\r\n        value: \"37800000\"\r\n    }, {\r\n        dispValue: \"11:00 AM\",\r\n        value: \"39600000\"\r\n    }, {\r\n        dispValue: \"11:30 AM\",\r\n        value: \"41400000\"\r\n    }, {\r\n        dispValue: \"12:00 PM\",\r\n        value: \"43200000\"\r\n    }, {\r\n        dispValue: \"12:30 PM\",\r\n        value: \"45000000\"\r\n    }, {\r\n        dispValue: \"1:00 PM\",\r\n        value: \"46800000\"\r\n    }, {\r\n        dispValue: \"1:30 PM\",\r\n        value: \"48600000\"\r\n    }, {\r\n        dispValue: \"2:00 PM\",\r\n        value: \"50400000\"\r\n    }, {\r\n        dispValue: \"2:30 PM\",\r\n        value: \"52200000\"\r\n    }, {\r\n        dispValue: \"3:00 PM\",\r\n        value: \"54000000\"\r\n    }, {\r\n        dispValue: \"3:30 PM\",\r\n        value: \"55800000\"\r\n    }, {\r\n        dispValue: \"4:00 PM\",\r\n        value: \"57600000\"\r\n    }, {\r\n        dispValue: \"4:30 PM\",\r\n        value: \"59400000\"\r\n    }, {\r\n        dispValue: \"5:00 PM\",\r\n        value: \"61200000\"\r\n    }, {\r\n        dispValue: \"5:30 PM\",\r\n        value: \"63000000\"\r\n    }, {\r\n        dispValue: \"6:00 PM\",\r\n        value: \"64800000\"\r\n    }, {\r\n        dispValue: \"6:30 PM\",\r\n        value: \"66600000\"\r\n    }, {\r\n        dispValue: \"7:00 PM\",\r\n        value: \"68400000\"\r\n    }, {\r\n        dispValue: \"7:30 PM\",\r\n        value: \"70200000\"\r\n    }, {\r\n        dispValue: \"8:00 PM\",\r\n        value: \"72000000\"\r\n    }, {\r\n        dispValue: \"8:30 PM\",\r\n        value: \"73800000\"\r\n    }, {\r\n        dispValue: \"9:00 PM\",\r\n        value: \"75600000\"\r\n    }, {\r\n        dispValue: \"9:30 PM\",\r\n        value: \"77400000\"\r\n    }],\r\n    timeListText: [\r\n        {\r\n            dispValue: \"12:00 AM\",\r\n            value: \"12:00 AM\"\r\n        },{\r\n            dispValue: \"12:30 AM\",\r\n            value: \"12:30 AM\"\r\n        },{\r\n            dispValue: \"1:00 AM\",\r\n            value: \"1:00 AM\"\r\n        },{\r\n            dispValue: \"1:30 AM\",\r\n            value: \"1:30 AM\"\r\n        },{\r\n            dispValue: \"2:00 AM\",\r\n            value: \"2:00 AM\"\r\n        },{\r\n            dispValue: \"2:30 AM\",\r\n            value: \"2:30 AM\"\r\n        },{\r\n            dispValue: \"3:00 AM\",\r\n            value: \"3:00 AM\"\r\n        },{\r\n            dispValue: \"3:30 AM\",\r\n            value: \"3:30 AM\"\r\n        },{\r\n            dispValue: \"4:00 AM\",\r\n            value: \"4:00 AM\"\r\n        },{\r\n            dispValue: \"4:30 AM\",\r\n            value: \"4:30 AM\"\r\n        },{\r\n            dispValue: \"5:00 AM\",\r\n            value: \"5:00 AM\"\r\n        },{\r\n            dispValue: \"5:30 AM\",\r\n            value: \"5:30 AM\"\r\n        },{\r\n            dispValue: \"5:30 AM\",\r\n            value: \"5:30 AM\"\r\n        },{\r\n            dispValue: \"6:00 AM\",\r\n            value: \"6:00 AM\"\r\n        },{\r\n            dispValue: \"6:30 AM\",\r\n            value: \"6:30 AM\"\r\n        },{\r\n            dispValue: \"7:00 AM\",\r\n            value: \"7:00 AM\"\r\n        },{\r\n            dispValue: \"7:30 AM\",\r\n            value: \"7:30 AM\"\r\n        },\r\n        {\r\n        dispValue: \"8:00 AM\",\r\n        value: \"8:00 AM\"\r\n    }, {\r\n        dispValue: \"8:30 AM\",\r\n        value: \"8:30 AM\"\r\n    }, {\r\n        dispValue: \"9:00 AM\",\r\n        value: \"9:00 AM\"\r\n    }, {\r\n        dispValue: \"9:30 AM\",\r\n        value: \"9:30 AM\"\r\n    }, {\r\n        dispValue: \"10:00 AM\",\r\n        value: \"10:00 AM\"\r\n    }, {\r\n        dispValue: \"10:30 AM\",\r\n        value: \"10:30 AM\"\r\n    }, {\r\n        dispValue: \"11:00 AM\",\r\n        value: \"11:00 AM\"\r\n    }, {\r\n        dispValue: \"11:30 AM\",\r\n        value: \"11:30 AM\"\r\n    }, {\r\n        dispValue: \"12:00 PM\",\r\n        value: \"12:00 PM\"\r\n    }, {\r\n        dispValue: \"12:30 PM\",\r\n        value: \"12:30 PM\"\r\n    }, {\r\n        dispValue: \"1:00 PM\",\r\n        value: \"1:00 PM\"\r\n    }, {\r\n        dispValue: \"1:30 PM\",\r\n        value: \"1:30 PM\"\r\n    }, {\r\n        dispValue: \"2:00 PM\",\r\n        value: \"2:00 PM\"\r\n    }, {\r\n        dispValue: \"2:30 PM\",\r\n        value: \"2:30 PM\"\r\n    }, {\r\n        dispValue: \"3:00 PM\",\r\n        value: \"3:00 PM\"\r\n    }, {\r\n        dispValue: \"3:30 PM\",\r\n        value: \"3:30 PM\"\r\n    }, {\r\n        dispValue: \"4:00 PM\",\r\n        value: \"4:00 PM\"\r\n    }, {\r\n        dispValue: \"4:30 PM\",\r\n        value: \"4:30 PM\"\r\n    }, {\r\n        dispValue: \"5:00 PM\",\r\n        value: \"5:00 PM\"\r\n    }, {\r\n        dispValue: \"5:30 PM\",\r\n        value: \"5:30 PM\"\r\n    }, {\r\n        dispValue: \"6:00 PM\",\r\n        value: \"6:00 PM\"\r\n    }, {\r\n        dispValue: \"6:30 PM\",\r\n        value: \"6:30 PM\"\r\n    }, {\r\n        dispValue: \"7:00 PM\",\r\n        value: \"7:00 PM\"\r\n    }, {\r\n        dispValue: \"7:30 PM\",\r\n        value: \"7:30 PM\"\r\n    }, {\r\n        dispValue: \"8:00 PM\",\r\n        value: \"8:00 PM\"\r\n    }, {\r\n        dispValue: \"8:30 PM\",\r\n        value: \"8:30 PM\"\r\n    }, {\r\n        dispValue: \"9:00 PM\",\r\n        value: \"9:00 PM\"\r\n    },{\r\n        dispValue: \"9:30 PM\",\r\n        value: \"9:30 PM\"\r\n    },{\r\n        dispValue: \"10:00 PM\",\r\n        value: \"10:00 PM\"\r\n    },{\r\n        dispValue: \"10:30 PM\",\r\n        value: \"10:30 PM\"\r\n    },{\r\n        dispValue: \"11:00 PM\",\r\n        value: \"11:00 PM\"\r\n    },{\r\n        dispValue: \"11:30 PM\",\r\n        value: \"11:30 PM\"\r\n    }],\r\n    stateList: [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\",\r\n        \"Jammu & Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\",\r\n        \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\",\r\n        \"West Bengal\", \"Andaman and Nicobar Islands\", \"Chandigarh\", \"Dadra and Nagar Haveli\", \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"\r\n    ],\r\n\r\n    leadStatusList: [{\r\n        value: \"newleadentery\",\r\n        dispValue: \"New Lead Entry\"\r\n    }, {\r\n        value: \"nocontact\",\r\n        dispValue: \"No Contact\"\r\n    }, {\r\n        value: \"contact\",\r\n        dispValue: \"Contact\"\r\n    }],\r\n\r\n    Cnvrted: [{\r\n        value: \"converted\",\r\n        dispValue: \"Converted\"\r\n    }],\r\n\r\n    /***\r\n     * This is for support \r\n     * When freh lead is created then user choose contact and callback then lead user can't be able to convert it fresh lead;\r\n     */\r\n    leadStatusListUpdate: [{\r\n        value: \"nocontact\",\r\n        dispValue: \"No Contact\"\r\n    }, {\r\n        value: \"contact\",\r\n        dispValue: \"Contact\"\r\n    }, ],\r\n\r\n\r\n    appointmentStatus: [{\r\n        value: \"newappointment\",\r\n        dispValue: \"New Appointment\"\r\n    }, {\r\n        value: \"followup\",\r\n        dispValue: \"Follow Up\"\r\n    }, {\r\n        value: \"notintrested\",\r\n        dispValue: \"Not Interested\"\r\n    }, {\r\n        value: \"notavailable\",\r\n        dispValue: \"Not Available\"\r\n    }, {\r\n        value: \"wrngnumber\",\r\n        dispValue: \"Wrong Number\"\r\n    }, {\r\n        value: \"convertd\",\r\n        dispValue: \"Converted\"\r\n    }, {\r\n        value: \"renewalcollected\",\r\n        dispValue: \"Renewal Collected\"\r\n    }],\r\n\r\n    /**\r\n     * @author Khan Usama\r\n     * Date 15/10/2018\r\n     * @description Here all number of arrays based on appointment disposition, dispositions based on \r\n     * appointment status \"appointmentStatus\"\r\n     * \r\n     * example: when I choose followup on appointment status then appointment dispositions shows the list \r\n     * related to followup\r\n     * \r\n     * Note:  Appointment Disposition fields is volatile or a dynamic. values are changed according to \r\n     * requirement, the important thing is all disposition array contains {text, value} it is must.\r\n     */\r\n    _appointDispoList: {\r\n\r\n        newAppt: [{ value: \"newApptmnt\", dispValue: \"New Appointment\" }],\r\n        // When Appointent and follow up\r\n        followUp: [{\r\n            value: 'metcustomer',\r\n            dispValue: 'Met Customer, in follow up for closure'\r\n        }, {\r\n            value: 'notmet',\r\n            dispValue: 'Not Met - Reschedule Appt'\r\n        }],\r\n\r\n        // When After appointment then not intrested\r\n        _notIntrest: [{\r\n            value: 'apptDenies',\r\n            dispValue: 'Client denies giving appointment'\r\n        }, {\r\n            value: 'metFollowupNotIntrested',\r\n            dispValue: 'Met, followed up, then not interested'\r\n        }],\r\n\r\n        // when Appointment and not available\r\n        availableNot: [{ value: 'phoneNtAvailble', dispValue: 'Phone not available always' }],\r\n\r\n        _fWrongNo: [{ value: 'Wrong_Number', dispValue: 'Wrong Number' }],\r\n        converted: [{ value: \"leadconverted\", dispValue: \"Convinced for a new policy\" }],\r\n        renCallBack: [{ value: \"ConvinceRenPay\", dispValue: \"Convinced for renewal payment\" }]\r\n    },\r\n\r\n    // Appointment Dispositons are ends here\r\n\r\n    nonContact: [{\r\n        value: \"notreachable\",\r\n        dispValue: \"Not reachable\"\r\n    }, {\r\n        value: \"ringingbusy\",\r\n        dispValue: \"Ringing Busy\"\r\n    }, {\r\n        value: \"wrongnumber\",\r\n        dispValue: \"Wrong number\"\r\n    }, {\r\n        value: \"invalid\",\r\n        dispValue: \"Invalid Number\"\r\n    }, {\r\n        value: \"switchoff\",\r\n        dispValue: \"Switched off\"\r\n    }],\r\n\r\n    contact: [{\r\n        value: \"appointment\",\r\n        dispValue: \"Appointment\"\r\n    }, {\r\n        value: \"callback\",\r\n        dispValue: \"Callback\"\r\n    }, {\r\n        value: \"shorthangup\",\r\n        dispValue: \"Short hang up\"\r\n    }, {\r\n        value: \"notinterested\",\r\n        dispValue: \"Not Interested\"\r\n    }, {\r\n        value: \"nonserviceloc\",\r\n        dispValue: \"Non Servicable location\"\r\n    }, {\r\n        value: \"noteligible\",\r\n        dispValue: \"Not Eligible\"\r\n    }],\r\n\r\n\r\n    callBack: [\r\n        \"Asked to call back later\",\r\n        \"Decision maker unavailable\",\r\n        \"ECS is active asked to call on due date\",\r\n    ],\r\n\r\n    notIntrested: [\r\n        \"Not interested to Meet\",\r\n        \"Did not Enquire\",\r\n        \"Too Expensive\",\r\n        \"Not interested to continue Existing Policy\",\r\n    ],\r\n    notEligible: [\r\n        \"NE - Income\",\r\n        \"NE - Age\"\r\n    ],\r\n\r\n    appntment: [\r\n        \"Client has given appointment\"\r\n    ],\r\n\r\n    // latest\r\n\r\n    _aptSubDispList: {\r\n        _appt: {\r\n            newApptmnt: ['Untouched / Not updated Appointment']\r\n        },\r\n        followUp: {\r\n            metcustomer: [\"Met Customer, in follow up for closure\"],\r\n            notmet: ['Customer agreed to meet at another time', 'Not Met - Reschedule Appt as phone keeps on ringing']\r\n        },\r\n        N_I: {\r\n            apptDenies: [\"Client denies giving appointment\"],\r\n            metFollowupNotIntrested: [\"Met, followed up, then not interested\", \"Bought policy from competition\", \"Wants to check options and buy online\", \"Lack of funds\", \"Interested in other investment tools\"]\r\n        },\r\n        N_A: {\r\n            phoneNtAvailble: [\"Not reachable / no answer / switched off always\"]\r\n        },\r\n        W_N: {\r\n            Wrong_Number: ['Wrong Number']\r\n        },\r\n        Conv: {\r\n            leadconverted: ['Successfully closed appt, Convinced for a new policy']\r\n        },\r\n        R_C: {\r\n            ConvinceRenPay: ['Successfully closed appt, Convinced for renewal payment']\r\n        }\r\n    },\r\n\r\n    notMetReschedAppt: [\r\n        \"Customer agreed to meet at another time\",\r\n        \"Not Met - Reschedule Appt as phone keeps on ringing\",\r\n    ],\r\n\r\n    metFollUpNI: [\r\n        \"Met, followed up, then not interested\",\r\n        \"Bought policy from competition\",\r\n        \"Wants to check options and buy online\",\r\n        \"Lack of funds\",\r\n        \"Interested in other investment tools\",\r\n    ],\r\n\r\n\r\n    // Proposal details in lead\r\n    // date 21/11/2018\r\n\r\n    propsalDetails: {\r\n        cardsList: [\r\n            {\r\n                title: 'Life Assured Details',\r\n                _id: 'C1',\r\n                route: '/master/testapp',\r\n                list: [\r\n                    {\r\n                        label: 'Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'DOB',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Gender',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Employee No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Mobile No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Email ID',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Proposer Details',\r\n                _id: 'C2',\r\n                route: '/master/testpro/proposalpersonal',\r\n                list: [\r\n                    {\r\n                        label: 'Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'DOB',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Gender',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Employee No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Mobile No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Email ID',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Appointee/Nominee Details',\r\n                _id: 'C3',\r\n                route: '/master/testpro/proposalnominee',\r\n                list: [\r\n                    {\r\n                        label: 'DOB',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Gender',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Employee No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Mobile No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Email ID',\r\n                        data: ''\r\n                    }\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'Plan Details',\r\n                _id: 'C4',\r\n                route: '/master/testapp',\r\n                list: [\r\n                    {\r\n                        label: 'Plan Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Plan Code Category',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Policy Term',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Premium Paying Term',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Sum Assured',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            }, \r\n            {\r\n                title: 'Premium Details',\r\n                _id: 'C5',\r\n                route: '/master/testapp',\r\n                list: [\r\n                    {\r\n                        label: 'Premium Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Installment Premium',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Annualized Premium',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'ECS/Direct/Debit',\r\n                        data: ''\r\n                    }, \r\n                ]\r\n            }, \r\n            {\r\n                title: 'Other Details',\r\n                _id: 'C6',\r\n                route: '/master/testapp',\r\n                list: [\r\n                   \r\n                    {\r\n                        label: 'Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Code',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            }, \r\n            {\r\n                title: 'Payment Details',\r\n                _id: 'C7',\r\n                route: '/master/testapp',\r\n                list: [\r\n                    {\r\n                        label:'Installment Premium',\r\n                        data: ''\r\n                    },\r\n                    {\r\n                        label: 'Payment Mode',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Recorded Amount',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Bank Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Branch Name',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Mobile No.',\r\n                        data: ''\r\n                    }, {\r\n                        label: 'Email ID',\r\n                        data: ''\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}","import _ from 'lodash';\r\nimport dataLibrary from './dataLibrary';\r\nimport moment from 'moment'\r\nimport { type } from 'jquery';\r\nlet nonContact = dataLibrary.nonContact;\r\nlet contact = dataLibrary.contact;\r\nlet _apStatusList = dataLibrary.appointmentStatus;\r\nlet _appointDispoList = dataLibrary._appointDispoList;\r\n\r\n\r\nexport const stoageSetter = (key, value) =>{\r\n    let stringify = JSON.stringify(value)\r\n    window.localStorage.setItem(key, encryptDecrypt(stringify, 'encrypt'))\r\n    return value;\r\n}\r\n\r\nexport const encryptDecrypt = (str, type) => {\r\n    return (type === \"encrypt\") ? str : str\r\n}\r\n\r\nexport const camelCaseKeys = (obj) =>{\r\n    return _.mapKeys(obj, (v, k) => _.camelCase(k))\r\n}\r\n\r\nexport const stoageRemover = (key) => {\r\n    window.localStorage.removeItem(key);\r\n}\r\n\r\nexport const stoageGetter = (key) => {\r\n    let value= null, temp =null;\r\n    if(typeof key === \"object\")\r\n    {\r\n        value = {};\r\n        _.map(key, function(k){\r\n            if(window.localStorage === null){\r\n                value[k]=null\r\n            }else{\r\n\r\n                temp = window.localStorage.getItem(k);\r\n                temp = (temp) ? JSON.parse(encryptDecrypt(temp, 'decrypt')) : temp\r\n                value[k] = temp\r\n            }\r\n        })    \r\n    }\r\n    else if (typeof key === \"string\")\r\n    {\r\n        value = null;\r\n        if(key)\r\n        {\r\n            value = window.localStorage.getItem(key);\r\n            value = (value) ? JSON.parse(encryptDecrypt(value, 'decrypt')) : value\r\n    \r\n        }\r\n    }\r\n    return value\r\n}\r\n\r\nexport const checkAgent=(levelCode,minValue)=>{\r\n      return   levelCode === minValue ? false : true\r\n}\r\n\r\nexport const dataFormatting =(resp, title, desc)=> {\r\n    // console.log(\"desc object check\",desc);\r\n\r\n    let _obj = {};\r\n    _obj['date'] = new Date(parseInt(resp.created_date)).toLocaleString();\r\n    // _obj['owner'] = resp.userId.first_name\r\n    _obj['owner'] = resp.userId !== null ? doSentenceCase(resp.userId.first_name) : \"\";\r\n    // _obj['owner']       = resp.Owner;\r\n    _obj['desc'] = desc.replace('|undefined|', '');\r\n    _obj['highlight'] = true;\r\n    _obj['title'] = title;\r\n\r\n    console.log(_obj)\r\n    return _obj;\r\n}\r\n\r\nexport function getLabel(item) {\r\n    let result = compare_C(item, contact, 'value', 'dispValue');  \r\n\r\n    console.log('Here the Result of Dipsositions : ', result);\r\n\r\n    // Comparision purpos\r\n    return (\r\n        result === \"\" ? \r\n        (compare_C(item, nonContact, 'value', 'dispValue') === \"\" ? \r\n        (compare_C(item, _apStatusList, 'value', 'dispValue') === \"\" ? (compare_C(item, _appointDispoList, 'value', 'dispValue') === \"\" ? \"\" : compare_C(item, _appointDispoList, 'value', 'dispValue')) : compare_C(item, _apStatusList, 'value', 'dispValue')): compare_C(item, nonContact, 'value', 'dispValue')) \r\n        : result\r\n    );\r\n\r\n}\r\nexport function doSentenceCase(strText) {\r\n    try {\r\n        var _str = strText.toLowerCase();\r\n        var collection = _str.split(\" \");\r\n        var modifyStrigs = [];\r\n        _str = '';\r\n        for (var i = 0; i < collection.length; i++) {\r\n            modifyStrigs[i] = collection[i].charAt(0).toUpperCase() + collection[i].slice(1);\r\n            _str = _str + modifyStrigs[i] + ' ';\r\n\r\n        }\r\n        return _str.trim();\r\n    } catch (err) {}\r\n}\r\n\r\nexport function milisecondToTime(milisecond) {\r\n    try {\r\n        console.log(\"MILESECOND :::::\", milisecond);\r\n        let index = dataLibrary.timeList.findIndex(e => e.value === milisecond.toString());\r\n\r\n        console.log(\"current Index : \", index);\r\n\r\n\r\n        if (index === -1) {\r\n            return \"\";\r\n        } else {\r\n            console.log(\"Result:::\", dataLibrary.timeList[index].dispValue);\r\n            return dataLibrary.timeList[index].dispValue;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport function respDetails(respData) {\r\n    console.log(\"Response Details object\",respData)\r\n    try {\r\n        if (typeof(respData) == \"string\") {\r\n            respData = respData.split(\"|\");\r\n            let makeString = \"\";\r\n            for (let i = 0; i < respData.length; i++) {\r\n                let value = respData[i].trim();\r\n                if (value !== \"\") {\r\n                    makeString = makeString + value + \"|\";\r\n                } else {\r\n                    makeString = ''\r\n                }\r\n            }\r\n            return makeString;\r\n        } else {\r\n            return \"\"\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n}\r\nexport function idFilter(id, initial = null) {\r\n    try {\r\n        if (id !== '') {\r\n            if (initial === null || initial === undefined || initial === \"\") {\r\n                initial = 'L';\r\n            }\r\n            if (typeof(id) !== undefined) {\r\n                id = initial + id.slice(16, 25).toUpperCase();\r\n\r\n            }\r\n        }\r\n        console.log(id)\r\n        return id;\r\n    } catch (err) {}\r\n}\r\n\r\nvar compare_C = function(item, _array, _with, key) {\r\n    // return new Promise((resolve, reject) => {\r\n    //     for(let i = 0; i < _array.length; i++) {\r\n    //         item == _array[i][_with] ? resolve(_array[i][_with]) : reject(false)\r\n    //     }\r\n    // });\r\n\r\n    let result = \"\";\r\n    for(let i = 0; i < _array.length; i++) {\r\n        if(item === _array[i][_with]) {\r\n            result = _array[i][key];\r\n            break;\r\n        } else {result = \"\";}\r\n    }\r\n    return result;\r\n}\r\nexport const milToDateString =(milisec)=>{\r\n    const date = new Date(milisec).toLocaleDateString('in')\r\n    return date\r\n}\r\n\r\nexport const getLeadFilter=(leadFilter)=>{\r\n    const leadFilterObj = {\r\n        all_lead:'all',\r\n        fortoday:'fortoday',\r\n        openlead:'open',\r\n        convertedleads:'converted',\r\n        pendingproposal:'failed'\r\n    }\r\n    switch(leadFilter){\r\n        case \"all_lead\":return 'all';\r\n        case \"fortoday\":return 'fortoday';\r\n        case \"openlead\":return 'open';\r\n        case \"convertedleads\":return 'converted';\r\n        case \"pendingproposal\":return 'failed';\r\n\r\n        default:  return 'all';\r\n\r\n    }\r\n    // console.log(leadFilterObj.leadFilter)\r\n    // return leadFilterObj.leadFilter\r\n}\r\n\r\nexport const msToDateString= (msDate)=>{\r\n    console.log('mstodate',moment(msDate).format('YYYY/MM/DD'))\r\n    // return moment(msDate).format('YYYY/MM/DD')\r\n    // console.log(typeof(new Date(msDate).toLocaleDateString('in')))\r\n    // return (moment(msDate).format(\"YYYY MM DD\"))\r\n    // return (new Date(msDate).toLocaleDateString('in'))\r\n}\r\n","import React from 'react'\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Spin } from 'antd';\r\nimport {stoageGetter} from './helpers'\r\n\r\nconst LeadMaster = React.lazy(()=> import('./containers/LeadMaster/index'))\r\nconst AdvisorList = React.lazy(()=> import('./components/AdvisorOnboarding/AdvisorCard'))\r\nconst StatusLead = React.lazy(()=> import('./components/StatusLead/StatusLead'))\r\nconst PersonalDetails = React.lazy(()=> import('./components/LeadDetails/PersonalDetails/PersonalDetails'))\r\nconst ContactDetails = React.lazy(()=> import('./components/LeadDetails/ContactDetails/ContactDetails'))\r\nconst ProfessionalDetails = React.lazy(()=> import('./components/LeadDetails/ProfessionalDetails/ProfessionalDeatils'))\r\nconst ExistingInsurance = React.lazy(()=> import('./components/LeadDetails/ExistingInsurance'))\r\nconst ProposedProduct = React.lazy(()=> import('./components/LeadDetails/ProposedProduct'))\r\nconst ProposalDetails = React.lazy(()=> import('./components/ProposalDetails/ProposalDetails'))\r\nconst DocumentsUpload = React.lazy(()=> import('./components/DocumentsUpload/DocumentsUpload'))\r\nconst History = React.lazy(()=> import('./components/History/History'))\r\nconst Login = React.lazy(()=> import('./components/Login/Login'))\r\nconst ForgotPassword = React.lazy(()=> import('./components/ForgotPassword/ForgotPassword'))\r\nconst ChangePassword = React.lazy(()=> import('./components/ChangePassword/ChangePassword'))\r\nconst Sidebar = React.lazy(()=> import('./components/SideBar/SideBar'))\r\nconst ClubsMaster = React.lazy(()=> import('./components/ClubMaster/ClubsMaster'))\r\nconst Birthday = React.lazy(()=> import('./components/Birthday/Birthday'))\r\nconst HomePage = React.lazy(()=> import('./components/Home/HomePage'))\r\nconst CompletedContest = React.lazy(()=> import('./components/Contests/CompletedContest'))\r\nconst ActiveContest = React.lazy(()=> import('./components/Contests/ActiveContest'))\r\nconst ActiveContestDetails = React.lazy(()=> import('./components/Contests/ActiveContestDetails'))\r\nconst AllContestDetails = React.lazy(()=> import('./components/Contests/AllContestDetails'))\r\nconst AllContest = React.lazy(()=> import('./components/Contests/AllContest'))\r\nconst CompletedContestDetails = React.lazy(()=> import('./components/Contests/CompletedContestDetails'))\r\nconst MyOverallRanking = React.lazy(()=> import('./components/Contests/MyOverallRanking'))\r\nconst AllContestDetails1 = React.lazy(()=> import('./components/Contests/AllContestDetails'))\r\nconst ActiveContestDetails1 = React.lazy(()=> import('./components/Contests/ActiveContestDetails'))\r\nconst CompletedContest1 = React.lazy(()=> import('./components/Contests/CompletedContest'))\r\nconst Calendar = React.lazy(()=> import('./components/Contests/CalendarEvent'))\r\nconst AgentMicroService = React.lazy(()=> import('./components/AgentMicroSite/AgentMicroSite'))\r\nconst KpiDashboard = React.lazy(()=> import('./components/KpiDashboard/KpiDashboard'))\r\nconst Blog = React.lazy(()=> import('./components/AgentMicroSite/Blog'))\r\nconst AdvisorPitch = React.lazy(()=> import('./components/AdvisorPitch/AdvisorPitch'))\r\nconst BenefitIllustrator = React.lazy(()=> import('./components/BenefitIllustrator/BenefitIllustrator'))\r\nconst ForCustomer = React.lazy(()=> import('./components/ForCustomer/ForCustomer'))\r\nconst ForSelf = React.lazy(()=> import('./components/ForSelf/ForSelf'))\r\nconst RenewalReport = React.lazy(()=> import('./components/RenewalReport/RenewalReport'))\r\nconst SalesPitch = React.lazy(()=> import('./components/SalesPitch/SalesPitch'))\r\nconst ServiceCorner = React.lazy(()=> import('./components/ServiceCorner/ServiceCorner'))\r\nconst Renewals = React.lazy(()=> import('./containers/RenewalMaster/index'))\r\nconst RenewalAll = React.lazy(()=> import('./components/RenewalCollections/AllRenewals'))\r\nconst RenewalPaid = React.lazy(()=> import('./components/RenewalCollections/PaidRenewals'))\r\nconst RenewalUnPaid = React.lazy(()=> import('./components/RenewalCollections/UnPaidRenewals'))\r\nconst RenewalLapsed = React.lazy(()=> import('./components/RenewalCollections/LapsedRenewals'))\r\nconst RenewalMasterDetails = React.lazy(()=> import('./components/RenewalCollections/RenewalDetails'))\r\nconst SalesPendency = React.lazy(()=> import('./components/SalesPendency/SalesPendency'))\r\nconst ExistingPartner = React.lazy(()=> import('./components/Partners/ExistingPartner'))\r\nconst ExistingPartnerDetails=React.lazy(()=> import('./components/Partners/ExistingPartnerDetails'))\r\nconst MappedBranches = React.lazy(()=> import('./components/MappedBranches/MappedBranches'))\r\nconst LoanProducts = React.lazy(()=> import('./components/Products/LoanProducts'))\r\nconst ProposalFulfilment = React.lazy(() => import('./components/ProposalFulfilment/ProposalFulfilment'))\r\nconst PrePaymentReview = React.lazy(() => import('./components/PrePaymentReview/PrePaymentReview'))\r\nconst PaymentOptions = React.lazy(() => import('./components/PaymentOptions/PaymentOptions'))\r\nconst ProposalHistory = React.lazy(() => import('./components/ProposalHistory/ProposalHistory'))\r\nconst ProofAddress = React.lazy(() => import('./components/UploadDocuments/AddressProof'))\r\nconst AdvisorProfile = React.lazy(() => import('./components/AdvisorProfile/AdvisorProfile'))\r\nconst NotFound = React.lazy(()=> import('./components/ComponentNotFound/ComponentNotFound'))\r\nconst NoRecord=React.lazy(()=> import('./components/Partners/NoRecord'))\r\nconst ShopGuardRoute = ({ component: Component, ...props }) => (\r\n  <Route\r\n    {...props}\r\n    render={routeProps => {\r\n      const logindata = stoageGetter('user')\r\n      \r\n      // Do all your conditional tests here\r\n      return logindata === null ? (\r\n        <Redirect to=\"/himanshu\" />\r\n        ) : (\r\n          <Component {...routeProps} />\r\n        );\r\n    }}\r\n  />\r\n);\r\n\r\nfunction App() {\r\n  // const logindata = stoageGetter('user')\r\n  // if(!logindata){\r\n  //   console.log(true)\r\n\r\n  //   return (\r\n  //     <Router>\r\n  //       <Switch>\r\n  //         <Route exact path=\"/\">\r\n  //                 <Redirect to=\"/himanshu\" />\r\n  //         </Route>\r\n  //       </Switch>\r\n  //     </Router>\r\n  //   )\r\n  // }\r\n  return (\r\n    <React.Suspense fallback={<Spin size=\"large\" className=\"loader\" />}>\r\n\r\n      <Router>\r\n        <div className=\"box-size\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/profile\" />\r\n            </Route>\r\n            <Route exact path=\"/login\" component={Login}></Route>\r\n            <Route exact path=\"/forgotpassword\" component={ForgotPassword}></Route>\r\n            <Route exact path=\"/changepassword\" component={ChangePassword}></Route>\r\n            <Route exact path=\"/profile\" component={AgentMicroService}></Route>\r\n            <Route exact path=\"/blog\" component={Blog}></Route>\r\n            <div>\r\n              {/* Make this route at the end only. */}\r\n              <Route exact  path=\"/agentMicrosite\" component={AgentMicroService}></Route>\r\n              {/* <div> */}\r\n              <Sidebar />\r\n              <Route exact path=\"/advisorOnboarding/:type\" component={AdvisorList}></Route>\r\n              <Route exact path=\"/leadMaster/:leadType\" component={LeadMaster}></Route>\r\n              <Route exact path=\"/leadmasterpage/statuslead\" component={StatusLead}></Route>\r\n              <Route exact path=\"/leadmasterpage/leaddetails/personallead\" component={PersonalDetails}></Route>\r\n              <Route exact path=\"/leadmasterpage/leaddetails/contactlead\" component={ContactDetails}></Route>\r\n              <Route exact path=\"/leadmasterpage/leaddetails/professionallead\" component={ProfessionalDetails}></Route>\r\n              <Route exact path=\"/leadmasterpage/leaddetails/existingLead\" component={ExistingInsurance}></Route>\r\n              <Route path=\"/leadmasterpage/leaddetails/productLead\" component={ProposedProduct}></Route>\r\n              <Route exact path=\"/leadmasterpage/proposal\" component={ProposalDetails}></Route>\r\n              <Route exact path=\"/leadmasterpage/leadmasterdoc/leaddoc\" component={DocumentsUpload}></Route>\r\n              <Route exact path=\"/leadmasterpage/leadhistorymaster/leadhistory\" component={History}></Route>\r\n              <Route exact path=\"/clubsMaster\" component={ClubsMaster}></Route>\r\n              <Route exact path=\"/birthday\" component={Birthday}></Route>\r\n              <Route exact path=\"/home\" component={HomePage}></Route>\r\n              <Route exact path=\"/rewardscorner/contests/completed\" component={CompletedContest}></Route>\r\n              <Route exact path=\"/rewardscorner/contests/allcontest\" component={AllContest} />\r\n              <Route exact path=\"/rewardscorner/contests/myoverallranking\" component={MyOverallRanking} />\r\n              <Route exact path=\"/rewardscorner/contests/activecontest\" component={ActiveContest} />\r\n              <Route exact path=\"/rewardscorner/contests/activecontestdetails\" component={ActiveContestDetails} />\r\n              <Route exact path=\"/calendar\" component={Calendar} />\r\n              <Route exact path=\"/kpi-dashboard\" component={KpiDashboard} />\r\n              <Route exact path=\"/advisorpitch\" component={AdvisorPitch}></Route>\r\n              <Route exact path=\"/benefitillustrator\" component={BenefitIllustrator}></Route>\r\n              <Route exact path=\"/proposalfulfilment\" component={ProposalFulfilment}></Route>\r\n              <Route exact path=\"/prepaymentreview\" component={PrePaymentReview}></Route>\r\n              <Route exact path=\"/paymentoptions\" component={PaymentOptions}></Route>\r\n              <Route exact path=\"/forcustomer\" component={ForCustomer}></Route>\r\n              <Route exact path=\"/forself\" component={ForSelf}></Route>\r\n              <Route exact path=\"/renewalreport\" component={RenewalReport}></Route>\r\n              {/* <Route path=\"/salespitch\" component={SalesPitch}></Route> */}\r\n              <Route exact path=\"/servicecorner\" component={ServiceCorner}></Route>\r\n              <Route exact path=\"/renewalMaster/allRenewals\" component={Renewals} />\r\n              <Route exact path=\"/renewalMaster/all\" component={RenewalAll} />\r\n              <Route exact path=\"/renewalMaster/paidRenewals\" component={RenewalPaid} />\r\n              <Route exact path=\"/renewalMaster/unpaidRenewals\" component={RenewalUnPaid} />\r\n              <Route exact path=\"/renewalMaster/lapsedRenewals\" component={RenewalLapsed} />\r\n              <Route exact path=\"/renewalMaster/Details\" component={RenewalMasterDetails} />\r\n              <Route exact path=\"/salespendency\" component={SalesPendency}></Route>\r\n              <Route exact path=\"/existingpartner\" component={ExistingPartner}/>\r\n              <Route exact path=\"/existingpartnerdetails\" component={ExistingPartnerDetails}/>\r\n              {/* <Route exact path=\"/norecord\" component={NoRecord}></Route> */}\r\n              <Route exact path=\"/mappedbranches\" component={MappedBranches}></Route>\r\n              <Route exact path=\"/uploadMaster/addressProof\" component={ProofAddress}></Route>\r\n              <Route exact path=\"/proposalhistory\" component={ProposalHistory}></Route>\r\n              \r\n            {/* </div> */}\r\n              {/* <Route path=\"/existingpartner\" component={ExistingPartner}/> */}\r\n              <Route exact path=\"/mappedbranches\" component={MappedBranches}></Route>\r\n              <Route exact path=\"/products\" component={LoanProducts}/>\r\n              \r\n              </div>\r\n              <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    // leads properties\r\n    allLeads:[],\r\n    allLeads_Loading : false,\r\n    fetch_allLeads_Loading : false,\r\n    selected_allLeads : null,\r\n    fetch_allLeads_Error : \"\",\r\n\r\n    // lead form meta data\r\n    fetchTeamMemberLoading:false,\r\n    designations:[],\r\n    fetchTeamMemberError:'',\r\n\r\n    teamMember:{}\r\n\r\n}\r\n// lead reducer\r\nconst fetchAllLeadsStart = (state, action) => {\r\n    return updateObject(state, { fetch_allLeads_Loading: true })\r\n}\r\n\r\nconst fetchAllLeadsSuccess = (state, action) => {\r\n    return updateObject(state, { \r\n        fetch_allLeads_Loading: false, \r\n        allLeads: action.allLeads, \r\n        count:action.count, \r\n        selected_all_leads: action.selected_allLeads \r\n    })\r\n}\r\nconst fetchAllLeadsFail = (state, action) => {\r\n    return updateObject(state, { \r\n        fetch_allLeads_Loading: false, \r\n        fetch_allLeads_Error: action.error,\r\n        allLeads:[]\r\n    });\r\n}\r\n\r\nconst fetchTeamMemberStart = (state, action) => {\r\n    return updateObject(state, { \r\n        fetchTeamMemberLoading: true \r\n    })\r\n}\r\n\r\nconst fetchTeamMemberSuccess = (state, action) => {\r\n    return updateObject(state, { \r\n        fetchTeamMemberLoading: false, \r\n        designations: action.designations \r\n    })\r\n}\r\nconst fetchTeamMemberFail = (state, action) => {\r\n    return updateObject(state, { \r\n        fetchTeamMemberLoading: false, \r\n        fetchTeamMemberError: action.error \r\n    });\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // lead\r\n        case actionTypes.FETCH_ALL_LEADS_START: return fetchAllLeadsStart(state, action)\r\n        case actionTypes.FETCH_ALL_LEADS_SUCCESS: return fetchAllLeadsSuccess(state, action)\r\n        case actionTypes.FETCH_ALL_LEADS_FAIL: return fetchAllLeadsFail(state, action)\r\n\r\n        case actionTypes.FETCH_DESIGNATION_START: return fetchTeamMemberStart(state, action)\r\n        case actionTypes.FETCH_DESIGNATION_SUCCESS: return fetchTeamMemberSuccess(state, action)\r\n        case actionTypes.FETCH_DESIGNATION_FAIL: return fetchTeamMemberFail(state, action)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { isEmpty } from 'lodash';\r\nimport * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\nimport {stoageGetter} from '../../helpers'\r\nimport _ from 'lodash'\r\n\r\nconst logindata = stoageGetter('user')\r\nlet id = ''\r\nif(logindata){\r\nid = logindata.id\r\n\r\n}\r\n// console.log(id)\r\nconst initialState = {\r\n    createLeadLoading:false,\r\n    createLeadError:'',\r\n    editLeadLoading:false,\r\n    editLeadError:'',\r\n    leadDataloading:false,\r\n    successMsg:'',\r\n    leadId:'',\r\n    user_Id:id,\r\n    fetchLeadId:'',\r\n    address:{\r\n        line1:'',\r\n        line2:'',\r\n        line3:'',\r\n    },\r\n    mailingAddressSecond:{\r\n        mailingaddress: {\r\n            line1: '',\r\n            line2: '',\r\n            line3: '',\r\n        },\r\n    },\r\n    HaveLifeInsurance_details:[],\r\n    Insurancedetails:[],\r\n    childParsedData:[],\r\n    payloadFormData:{},\r\n    appointmentData:{\r\n        start_date:'',\r\n        start_time:''\r\n    },\r\n     formData :{\r\n        // statusLeadData: {\r\n            leadStatus: '',\r\n            leadDisposition: '',\r\n            leadsubDisposition: '',\r\n            appointment_status: '',\r\n            appointmentdisPosition: '',\r\n            appointmentsubdisPosition: '',\r\n            lead_Owner_Id: '',\r\n            user_id: id,\r\n            lead_Creator_Id: '',\r\n            start_date: '',\r\n            start_time:  '',\r\n            remarksfromSource: '',\r\n            remarksfromUser: '',\r\n            teamMembers: '',\r\n            productId: '',\r\n            proposalId: '',\r\n            leadSource: '',\r\n            LeadType:'',\r\n            Product:'',\r\n            Insurance_Company:'',\r\n        // },\r\n        // personalLeadData: {\r\n            firstName:'',\r\n            lastName:'',\r\n            dob: '',\r\n            gender: '',\r\n            maritalStatus: '',\r\n            childStatus: '',\r\n            ChildInfo: [],\r\n        // },\r\n        // contactLeadData: {\r\n            primaryMobile:'', \r\n            state: '',\r\n            city: '',\r\n            email: '',\r\n            address: {\r\n                line1: '',\r\n                line2: '',\r\n                line3: '',\r\n            },\r\n            country: '',\r\n            pincode: '',\r\n            secondaryMobile: '',\r\n            landlineNo: '',\r\n            socialSecurityAdharNo: '',\r\n            mailingAddressStatus: '',\r\n            mailingAddressSecond: {\r\n                mailingaddress: {\r\n                    line1: '',\r\n                    line2: '',\r\n                    line3: '',\r\n                },\r\n                state: '',\r\n                city:'', \r\n                country: '',\r\n                pincode: '',\r\n                user_Id:id,\r\n\r\n            },\r\n            HaveLifeInsurance:{\r\n                ExistHealthInsur:'',\r\n                ExistInsur:''\r\n            },\r\n            HaveLifeInsurance_details:[],\r\n            Insurancedetails:[],\r\n            //professional data\r\n            education:'',\r\n            professionType:'',\r\n            incomeGroup:'',\r\n\r\n        // }\r\n    },\r\n    errorMessage:''\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst createLeadStart = (state, action) => {\r\n    return updateObject(state, { \r\n        createLeadLoading: true,\r\n        leadDataloading:false \r\n    })\r\n}\r\n\r\nconst createLeadSuccess = (state, action) => {\r\n    const payload = {...state.formData,...action.formData}\r\n    console.log(payload)\r\n    return updateObject(state, { \r\n            leadDataloading:true,\r\n            createLeadLoading: false, \r\n            formData: payload,\r\n            payloadFormData: payload,\r\n            leadId:action.formData._id,\r\n            // userId:action.formData.userId,\r\n            successMsg:action.succMsg,\r\n         })\r\n}\r\nconst createLeadFail = (state, action) => {\r\n    return updateObject(state, { \r\n        createLeadLoading: false, \r\n        createLeadError: action.error,\r\n        leadDataloading:false,\r\n        errorMessage:action.error\r\n    });\r\n}\r\n\r\nconst editLeadStart = (state, action) => {\r\n    return updateObject(state, { \r\n        editLeadLoading:true\r\n    })\r\n}\r\n\r\nconst editLeadSuccess = (state, action) => {\r\n    const payload = {...state.formData,...action.formData}\r\n    \r\n    return updateObject(state, { \r\n            editLeadLoading:false,\r\n            createLeadLoading: false, \r\n            formData: payload,\r\n            leadId:action.formData[0]._id,\r\n            appointmentData:action.appointmentDetails\r\n\r\n            // userId:action.formData[0].userId\r\n         })\r\n}\r\nconst editLeadFail = (state, action) => {\r\n    return updateObject(state, { \r\n        editLeadError: action.error,\r\n        leadDataloading:false,\r\n        errorMessage:action.error\r\n\r\n    });\r\n}\r\n\r\nconst fetchLeadDetailsStart = (state, action) => {\r\n    return updateObject(state, { createLeadLoading: true,leadDataloading:true })\r\n}\r\n\r\nconst fetchLeadDetailsSuccess = (state, action) => {\r\n    const addSecond = {...state.mailingAddressSecond,...action.mailingAddressSecond}\r\n    // const Insurancedetails = [...state.Insurancedetails,...action.Insurancedetails]\r\n    // const Insurancedetails = action.leadDetails.Insurancedetails\r\n\r\n    // let address1 \r\n    // let address2\r\n    // console.log(mailingAddressStatus)\r\n    // if(action.leadDetails.mailingAddressStatus==='Yes'){\r\n    //      address1 = action.leadDetails.mailingAddressSecond\r\n    //     //  addObj1 = JSON.parse(address1)\r\n    //      address2 = address1\r\n            \r\n   \r\n    //     }else{\r\n    //          address1 = action.leadDetails.mailingAddress\r\n    //         //  addObj1 = JSON.parse(address1)\r\n    //          address2 = action.leadDetails.mailingAddressSecond\r\n    //         //  addObj2 = JSON.parse(address2)\r\n    // }\r\n    // const {mailingaddress:{line1}={line1:'hello'}} = action.leadDetails.mailingAddress\r\n    const fetchLeadId = action.fetchLeadId\r\n    const  {Insurancedetails} = action.leadDetails\r\n    const  {HaveLifeInsurance_details} = action.leadDetails\r\n        // if(!isEmpty(Insurancedetails)&& !isEmpty(HaveLifeInsurance_details)){\r\n\r\n        //     var  healthInsObject = JSON.parse(Insurancedetails)\r\n    \r\n        //     var  lifeInsObject = JSON.parse(HaveLifeInsurance_details)\r\n        // }\r\n        const payload = {...state.formData,...action.leadDetails,...state.appointmentData,...action.appointmentDetails}\r\n    return updateObject(state, { \r\n        leadDataloading:false,\r\n        createLeadLoading: false, \r\n        formData: payload,\r\n        payloadFormData: payload,\r\n        // mailingAddress:address1,\r\n        // mailingAddressSecond:address2,\r\n        leadId:action.leadDetails._id,\r\n        userId:action.leadDetails.userId._id,\r\n        // Insurancedetails:healthInsObject,\r\n        // HaveLifeInsurance_details:lifeInsObject,\r\n        address:action.leadDetails.address[0],\r\n        mailingAddressSecond:addSecond,\r\n        fetchLeadId:fetchLeadId,\r\n        appointmentData:action.appointmentDetails\r\n\r\n    })\r\n}\r\nconst fetchLeadDetailsFail = (state, action) => {\r\n    return updateObject(state, { \r\n        createLeadLoading: false, \r\n        createLeadError: action.error,\r\n        leadDataloading:false  \r\n    });\r\n}\r\n\r\n\r\nconst storeForm = (state, action) => {\r\n    // let childParsedData = action.formData.ChildInfo\r\n    //     if(!_.isEmpty(childParsedData)){\r\n\r\n    \r\n    //         childParsedData = JSON.parse(childParsedData)\r\n    //     }\r\n    // console.log(childParsedData)\r\n    const payload = {...state.formData,...action.formData }\r\n    \r\n    return updateObject(state, { \r\n        createLeadLoading: false, \r\n        formData: payload,\r\n        // childParsedData:childParsedData,\r\n    })\r\n}   \r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // lead\r\n        case actionTypes.CREATE_LEAD_START: return createLeadStart(state, action)\r\n        case actionTypes.CREATE_LEAD_SUCCESS: return createLeadSuccess(state, action)\r\n        case actionTypes.CREATE_LEAD_FAIL: return createLeadFail(state, action)\r\n\r\n        case actionTypes.EDIT_LEAD_START: return editLeadStart(state, action)\r\n        case actionTypes.EDIT_LEAD_SUCCESS: return editLeadSuccess(state, action)\r\n        case actionTypes.EDIT_LEAD_FAIL: return editLeadFail(state, action)\r\n\r\n        case actionTypes.FETCH_LEAD_DETAILS_START: return fetchLeadDetailsStart(state, action)\r\n        case actionTypes.FETCH_LEAD_DETAILS_SUCCESS: return fetchLeadDetailsSuccess(state, action)\r\n        case actionTypes.FETCH_LEAD_DETAILS_FAIL: return fetchLeadDetailsFail(state, action)\r\n\r\n        case actionTypes.STORE_FORM_SUCCESS: return storeForm(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    \r\n    // states \r\n    states:{},\r\n    fetch_States_Loading:false,\r\n    fetch_States_Error:\"\",\r\n\r\n    //cities props\r\n    cities:{},\r\n    fetch_Cities_Loading:false,\r\n    fetch_Cities_Error:\"\"\r\n}\r\n// states reducer\r\nconst fetchStateStart = (state, action) => {\r\n    return updateObject(state, { fetch_States_Loading: true })\r\n}\r\n\r\nconst fetchStateSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_States_Loading: false, states: action.states})\r\n}\r\nconst fetchStateFail = (state, action) => {\r\n    return updateObject(state, { fetch_States_Loading: false, fetch_States_Error: action.error });\r\n}\r\n\r\n//cities reducer\r\nconst fetchCitiesStart = (state, action) => {\r\n    return updateObject(state, { fetch_Cities_Loading: true })\r\n}\r\n\r\nconst fetchCitiesSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_Cities_Loading: false, cities: action.cities[0].cities})\r\n}\r\nconst fetchCitiesFail = (state, action) => {\r\n    return updateObject(state, { fetch_Cities_Loading: false, fetch_Cities_Error: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      \r\n        //state\r\n        case actionTypes.FETCH_STATES_START: return fetchStateStart(state, action)\r\n        case actionTypes.FETCH_STATES_SUCCESS: return fetchStateSuccess(state, action)\r\n        case actionTypes.FETCH_STATES_FAIL: return fetchStateFail(state, action)\r\n\r\n        case actionTypes.FETCH_CITIES_START: return fetchCitiesStart(state, action)\r\n        case actionTypes.FETCH_CITIES_SUCCESS: return fetchCitiesSuccess(state, action)\r\n        case actionTypes.FETCH_CITIES_FAIL: return fetchCitiesFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\nimport { stoageGetter, stoageSetter, camelCaseKeys} from '../../helpers';\r\n\r\nconst initialState = {\r\n    login_agent_data:null,\r\n    agent_id:\"\",\r\n    userId:'',\r\n    login_error:null,\r\n    channelCode:'',\r\n    user:null,\r\n\r\n    userDetails:{},\r\n    levelCode:'',\r\n    hierarchy:{},\r\n    minValue:'',\r\n    checkAgent:false\r\n}\r\n\r\nlet user = stoageGetter('user') \r\nif(user){\r\n    initialState.user = user\r\n}\r\n\r\nconst loginStart = (state, action) => {\r\n    return updateObject(state, { fetch_allLeads_Loading: true })\r\n}\r\n\r\nconst loginSuccess = (state, action) => {\r\n    // console.log(\"id\",action.login_agent_data._id)\r\n    let user= camelCaseKeys({...action.login_agent_data})\r\n    // localStorage.setItem('user',user)\r\n     stoageSetter('user', user);\r\n     \r\n    return updateObject(state,{ \r\n            fetch_allLeads_Loading: false, \r\n            // login_agent_data: action.login_agent_data,\r\n            user:user,\r\n            user_name: action.login_agent_data.first_name,\r\n            agent_id: action.login_agent_data.agent_id,\r\n            userId: action.login_agent_data._id,\r\n            // channelCode:action.login_agent_data.channelCode\r\n         })\r\n}\r\nconst loginFail = (state, action) => {\r\n    return updateObject(state, { \r\n            fetch_allLeads_Loading: false, \r\n            login_error: action.error \r\n        });\r\n}\r\n\r\nconst logoutStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst logoutSuccess = (state, action) => {\r\n    stoageSetter('user', null);\r\n    stoageSetter('headers', {});\r\n    window.localStorage.removeItem('user')\r\n    window.localStorage.removeItem('headers')\r\n    return updateObject(state, {user: null, headers: {}, loading: false});\r\n};\r\n\r\n// const logoutFail = (state, action) => {\r\n//     stoageSetter('user', null);\r\n//     stoageSetter('headers', {});\r\n//     window.localStorage.removeItem('user')\r\n//     window.localStorage.removeItem('headers')\r\n//     return updateObject(state, {user: null, headers: {} ,loading: false, error: action.error});\r\n// };\r\n\r\n// Post login Reducers- Get User details\r\nconst fetchUserDetailsStart = (state, action) => {\r\n    return updateObject(state, { fetch_UserDetails_Loading: true })\r\n}\r\n\r\nconst fetchUserDetailsSuccess = (state, action) => {\r\n    const userDetails = action.userDetails\r\n    return updateObject(state, { \r\n            fetch_UserDetails_Loading: false, \r\n            userDetails: userDetails,\r\n            levelCode:userDetails.hierarchy_id.levelCode,\r\n            channelCode:userDetails.channelCode._id\r\n        })\r\n}\r\nconst fetchUserDetailsFail = (state, action) => {\r\n    return updateObject(state, { \r\n            fetch_UserDetails_Loading: false, \r\n            fetch_UserDetails_Error: action.error \r\n        });\r\n}\r\n\r\n// Get Hierarchy\r\nconst fetchHierarchyStart = (state, action) => {\r\n    return updateObject(state, { fetch_Hierarchy_Loading: true })\r\n}\r\n\r\nconst fetchHierarchySuccess = (state, action) => {\r\n    const hierarchyData = action.hierarchy\r\n    let levelCodeArray = []\r\n    for (let i = 0; i < hierarchyData.length; i++) {\r\n        let levelCode = hierarchyData[i].levelCode\r\n        levelCodeArray.push(levelCode)\r\n    }\r\n    levelCodeArray.sort((a, b) => a - b)\r\n    let minValue = Math.min(...levelCodeArray)\r\n    return updateObject(state, { \r\n            fetch_Hierarchy_Loading: false, \r\n            hierarchy: hierarchyData, \r\n            minValue:minValue\r\n        })\r\n}\r\nconst fetchHierarchyFail = (state, action) => {\r\n    return updateObject(state, { \r\n            fetch_Hierarchy_Loading: false, \r\n            fetch_Hierarchy_Error: action.error \r\n        });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case actionTypes.LOGIN_START: return loginStart(state, action)\r\n        case actionTypes.LOGIN_SUCCESS: return loginSuccess(state, action)\r\n        case actionTypes.LOGIN_FAIL: return loginFail(state, action)\r\n\r\n        case actionTypes.AUTH_LOGOUT_START: return logoutStart(state, action);\r\n        case actionTypes.AUTH_LOGOUT_SUCCESS: return logoutSuccess(state, action);\r\n\r\n        case actionTypes.FETCH_USER_DETAILS_START: return fetchUserDetailsStart(state, action)\r\n        case actionTypes.FETCH_USER_DETAILS_SUCCESS: return fetchUserDetailsSuccess(state, action)\r\n        case actionTypes.FETCH_USER_DETAILS_FAIL: return fetchUserDetailsFail(state, action)\r\n\r\n        case actionTypes.FETCH_HIERARCHY_START: return fetchHierarchyStart(state, action)\r\n        case actionTypes.FETCH_HIERARCHY_SUCCESS: return fetchHierarchySuccess(state, action)\r\n        case actionTypes.FETCH_HIERARCHY_FAIL: return fetchHierarchyFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    home_obj: null,\r\n    activities:[],\r\n    home_Loading : false,\r\n    fetch_Home_Loading : false,\r\n    home_Error : \"\",\r\n    activities_Loading : false,\r\n    fetch_Activities_Loading : false,\r\n    activities_Error : \"\",\r\n\r\n}\r\n\r\nconst fetchHomeStart = (state, action) => {\r\n    return updateObject(state, { fetch_Home_Loading: true })\r\n}\r\n\r\nconst fetchHomeSuccess = (state, action) => {\r\n    console.log(\"actions of home\",action)\r\n    return updateObject(state, { fetch_Home_Loading: false, home_obj: action.home, count:action.count})\r\n}\r\nconst fetchHomeFail = (state, action) => {\r\n    return updateObject(state, { fetch_Home_Loading: false, home_Error: action.error });\r\n}\r\n\r\n\r\nconst fetchActivitiesStart = (state, action) => {\r\n    return updateObject(state, { fetch_Activities_Loading: true })\r\n}\r\n\r\nconst fetchActivitiesSuccess = (state, action) => {\r\n    console.log(\"actions of activities\",action)\r\n    return updateObject(state, { fetch_Activities_Loading: false, activities_obj: action.activities})\r\n}\r\nconst fetchActivitiesFail = (state, action) => {\r\n    return updateObject(state, { fetch_Activities_Loading: false, activities_Error: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case actionTypes.HOME_START: return fetchHomeStart(state, action)\r\n        case actionTypes.HOME_SUCCESS: return fetchHomeSuccess(state, action)\r\n        case actionTypes.LOGIN_FAIL: return fetchHomeFail(state, action)\r\n\r\n        case actionTypes.ACTIVITIES_START: return fetchActivitiesStart(state, action)\r\n        case actionTypes.ACTIVITIES_SUCCESS: return fetchActivitiesSuccess(state, action)\r\n        case actionTypes.ACTIVITIES_FAIL: return fetchActivitiesFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    kpi_data:[],\r\n    fetch_Kpidashboard_Loading : false,\r\n    kpiDashboard_Error : \"\",\r\n\r\n}\r\n\r\n\r\nconst fetchKpiDashboardStart = (state, action) => {\r\n    return updateObject(state, { fetch_Kpidashboard_Loading: true })\r\n}\r\n\r\nconst fetchKpiDashboardSuccess = (state, action) => {\r\n    console.log(\"actions of kpidashboard\",action)\r\n    return updateObject(state, { fetch_Kpidashboard_Loading: false, kpi_data: action.kpi_data})\r\n}\r\nconst fetchKpiDashboardFail = (state, action) => {\r\n    return updateObject(state, { fetch_Kpidashboard_Loading: false, kpiDashboard_Error: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionTypes.KPI_DASHBOARD_START: return fetchKpiDashboardStart(state, action)\r\n        case actionTypes.KPI_DASHBOARD_SUCCESS: return fetchKpiDashboardSuccess(state, action)\r\n        case actionTypes.KPI_DASHBOARD_FAIL: return fetchKpiDashboardFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    // renewal properties\r\n    allRenewals:[],\r\n    paidRenewals:[],\r\n    unPaidRenewals:[],\r\n    lapsedRenewals:[],\r\n    details: null,\r\n    paidRenewals_Loading : false,\r\n    fetch_paidRenewals_Loading : false,\r\n    unPaidRenewals_Loading : false,\r\n    fetch_unPaidRenewals_Loading : false,\r\n    allRenewals_Loading : false,\r\n    fetch_allRenewals_Loading : false,\r\n    selected_allRenewals : null,\r\n    fetch_allRenewals_Error : \"\",\r\n    fetch_paidRenewals_Error : \"\",\r\n    fetch_unPaidRenewals_Error : \"\",\r\n}\r\n// renewals reducer\r\nconst fetchAllRenewalsStart = (state, action) => {\r\n    return updateObject(state, { fetch_allRenewals_Loading: true })\r\n}\r\n\r\nconst fetchAllRenewalsSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_allRenewals_Loading: false, allRenewals: action.allRenewals, count:action.count })\r\n}\r\nconst fetchAllRenewalsFail = (state, action) => {\r\n    return updateObject(state, { fetch_allRenewals_Loading: false, fetch_allRenewals_Error: action.error });\r\n}\r\n\r\nconst fetchPaidRenewalsStart = (state, action) => {\r\n    return updateObject(state, { fetch_paidRenewals_Loading: true })\r\n}\r\n\r\nconst fetchPaidRenewalsSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_paidRenewals_Loading: false, paidRenewals: action.paidRenewals, count:action.count })\r\n}\r\nconst fetchPaidRenewalsFail = (state, action) => {\r\n    return updateObject(state, { fetch_paidRenewals_Loading: false, fetch_paidRenewals_Error: action.error });\r\n}\r\n\r\nconst fetchUnPaidRenewalsStart = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: true })\r\n}\r\n\r\nconst fetchUnPaidRenewalsSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: false, unPaidRenewals: action.unPaidRenewals, count:action.count })\r\n}\r\nconst fetchUnPaidRenewalsFail = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: false, fetch_unPaidRenewals_Error: action.error });\r\n}\r\n\r\nconst fetchRenewalDetailsStart = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: true })\r\n}\r\n\r\nconst fetchRenewalDetailsSuccess = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: false, details: action.RenewalDetails })\r\n}\r\nconst fetchRenewalDetailsFail = (state, action) => {\r\n    return updateObject(state, { fetch_unPaidRenewals_Loading: false, fetch_unPaidRenewals_Error: action.error });\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // renewals\r\n        case actionTypes.FETCH_ALL_RENEWALS_START: return fetchAllRenewalsStart(state, action)\r\n        case actionTypes.FETCH_ALL_RENEWALS_SUCCESS: return fetchAllRenewalsSuccess(state, action)\r\n        case actionTypes.FETCH_ALL_RENEWALS_FAIL: return fetchAllRenewalsFail(state, action)\r\n\r\n        case actionTypes.FETCH_PAID_RENEWALS_START: return fetchPaidRenewalsStart(state, action)\r\n        case actionTypes.FETCH_PAID_RENEWALS_SUCCESS: return fetchPaidRenewalsSuccess(state, action)\r\n        case actionTypes.FETCH_PAID_RENEWALS_FAIL: return fetchPaidRenewalsFail(state, action)\r\n\r\n        case actionTypes.FETCH_UNPAID_RENEWALS_START: return fetchUnPaidRenewalsStart(state, action)\r\n        case actionTypes.FETCH_UNPAID_RENEWALS_SUCCESS: return fetchUnPaidRenewalsSuccess(state, action)\r\n        case actionTypes.FETCH_UNPAID_RENEWALS_FAIL: return fetchUnPaidRenewalsFail(state, action)\r\n\r\n        case actionTypes.FETCH_DETAILS_RENEWALS_START: return fetchRenewalDetailsStart(state, action)\r\n        case actionTypes.FETCH_DETAILS_RENEWALS_SUCCESS: return fetchRenewalDetailsSuccess(state, action)\r\n        case actionTypes.FETCH_DETAILS_RENEWALS_FAIL: return fetchRenewalDetailsFail(state, action)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\nimport _ from \"lodash\";\r\n\r\n\r\nconst initialState = {\r\n    \r\n    // states \r\n    productCategory:[],\r\n    fetchProductLoading:false,\r\n    fetchProductError:\"\",\r\n\r\n    planName:[],\r\n    fetchPlanLoading:false,\r\n    fetchPlanError:\"\",\r\n}\r\n\r\nconst fetchProductStart = (state, action) => {\r\n    return updateObject(state, { fetchProductLoading: true })\r\n}\r\n\r\nconst fetchProductSuccess = (state, action) => {\r\n    console.log(action)\r\n    return updateObject(state, { fetchProductLoading: false, productCategory: action.productCategory})\r\n}\r\nconst fetchProductFail = (state, action) => {\r\n    return updateObject(state, { fetchProductLoading: false, fetchProductError: action.error });\r\n}\r\n\r\nconst fetchPlanNameStart = (state, action) => {\r\n    return updateObject(state, { fetchPlanLoading: true })\r\n}\r\n\r\nconst fetchPlanNameSuccess = (state, action) => {\r\n    const planNames = action.planName\r\n    let planNameOptions = planNames.map(planName => {\r\n                            const {productName,_id,\r\n                                // channelCode:{channelCode}\r\n                            }= planName\r\n                            const label = productName\r\n                            const value = productName\r\n                            // const chCode = channelCode\r\n                            const newProductCategories = { \r\n                                // chCode,\r\n                                _id,\r\n                                label, value }\r\n                            return newProductCategories\r\n                        })\r\n    return updateObject(state, { \r\n        fetchPlanLoading: false, \r\n        planName: planNameOptions\r\n    })\r\n}\r\nconst fetchPlanNameFail = (state, action) => {\r\n    return updateObject(state, { fetchPlanLoading: false, fetchPlanError: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      \r\n        case actionTypes.FETCH_PRODUCT_START: return fetchProductStart(state, action)\r\n        case actionTypes.FETCH_PRODUCT_SUCCESS: return fetchProductSuccess(state, action)\r\n        case actionTypes.FETCH_PRODUCT_FAIL: return fetchProductFail(state, action)\r\n\r\n        case actionTypes.FETCH_PLAN_NAME_START: return fetchPlanNameStart(state, action)\r\n        case actionTypes.FETCH_PLAN_NAME_SUCCESS: return fetchPlanNameSuccess(state, action)\r\n        case actionTypes.FETCH_PLAN_NAME_FAIL: return fetchPlanNameFail(state, action)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    \r\n    // states \r\n    first_name:'',\r\n    last_name:'',\r\n    testimonials:[],\r\n    achievements:{},\r\n    fetchAgentDetailsLoading:false,\r\n    fetchAgentDetailsError:\"\",\r\n    profileImage:'',\r\n    socialLinks:{},\r\n    products:[],\r\n}\r\n// states reducer\r\nconst fetchAgentDetailsStart = (state, action) => {\r\n    return updateObject(state, { fetchAgentDetailsLoading: true })\r\n}\r\n\r\nconst fetchAgentDetailsSuccess = (state, action) => {\r\n    const { \r\n        first_name, \r\n        last_name,\r\n        microsite_settings:{achievements:{badges}} ,\r\n        microsite_settings:{testimonials}, \r\n        microsite_settings:{profileImage}, \r\n        microsite_settings:{connectWithMe}, \r\n        products,\r\n    } = action.agentDetails\r\n    // console.log(achievements,Testimonials)\r\n    // const {}\r\n\r\n    return updateObject(state, { \r\n        fetchAgentDetailsLoading: false, \r\n        agentDetails: action.agentDetails,\r\n        first_name:first_name,\r\n        last_name:last_name,\r\n        achievements:badges,\r\n        testimonials:testimonials,\r\n        profileImage:profileImage,\r\n        socialLinks:connectWithMe,\r\n        products:products,\r\n    })\r\n}\r\nconst fetchAgentDetailsFail = (state, action) => {\r\n    return updateObject(state, { \r\n        fetchAgentDetailsLoading: false, \r\n        fetchAgentDetailsError: action.error \r\n    });\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n      \r\n        //state\r\n        case actionTypes.FETCH_AGENT_DETAILS_START: return fetchAgentDetailsStart(state, action)\r\n        case actionTypes.FETCH_AGENT_DETAILS_SUCCESS: return fetchAgentDetailsSuccess(state, action)\r\n        case actionTypes.FETCH_AGENT_DETAILS_FAIL: return fetchAgentDetailsFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\nimport { dataFormatting, getLabel, doSentenceCase, idFilter, respDetails, milisecondToTime } from '../../helpers'\r\nimport _ from 'lodash'\r\nimport { ApiOutlined } from '@ant-design/icons';\r\nconst initialState = {\r\n    history: [],\r\n    fetchHistoryLoading: false,\r\n    fetchHistoryError: '',\r\n    proposalData: [],\r\n    leadData: [],\r\n    appointmentData:[]\r\n\r\n}\r\nconst fetchHistoryStart = (state, action) => {\r\n    return updateObject(state, { fetchHistoryLoading: true })\r\n}\r\n\r\nconst fetchHistorySuccess = (state, action) => {\r\n    const historyDetailsArr = action.history\r\n    console.log(historyDetailsArr)\r\n    let proposalArr = []\r\n    let leadArr = []\r\n    let appointmentArr = []\r\n    let issuanceArr = []\r\n    let desc = null\r\n    const newArr = historyDetailsArr.map((historydetail) => {\r\n        // console.log(historydetail)\r\n        if (historydetail.AppointmetData !== undefined ) {\r\n            // console.log(historydetail)\r\n            if (historydetail.leadleadDisposition === 'callback') {\r\n                desc = 'Callback date ' + new Date(parseInt(historydetail.AppointmetData.start_date)).toLocaleDateString() + '  Callback time ' + milisecondToTime(historydetail.AppointmetData.start_time)\r\n                if (historydetail.allocated === false) {\r\n                    console.log('callback false')\r\n                    leadArr.push(dataFormatting(historydetail, 'Updated - ' + getLabel(historydetail.leadDisposition), desc + ' ' + respDetails(historydetail.Details2) + ' ' + respDetails(historydetail.Details3)));\r\n                } else {\r\n                    console.log('callback true')\r\n\r\n                    leadArr.push(dataFormatting(historydetail, 'Lead Allocated', desc + ' ' + respDetails(historydetail.Details2) + ' ' + respDetails(historydetail.Details3)));\r\n                }\r\n            } \r\n            else if (historydetail.leadDisposition === \"appointment\") {\r\n                console.log(historyDetailsArr)\r\n                // Appointment  10/28/2018\r\n                if (Array.isArray(historydetail.AppointmetData)) {\r\n                    console.log('apointment false')\r\n\r\n                    // moment(historydetail.AppointmetData[0].start_time).format('LT');\r\n                    desc = 'Appointment date ' + new Date(parseInt(historydetail.AppointmetData[0].start_date)).toLocaleDateString() + '  Appointment time ' + milisecondToTime(historydetail.AppointmetData[0].start_time)\r\n                } else {\r\n                    console.log('apointment true')\r\n\r\n                    // moment(historydetail.AppointmetData.start_time).format('LT');\r\n                    desc = 'Appointment date ' + new Date(parseInt(historydetail.AppointmetData.start_date)).toLocaleDateString() + '  Appointment time ' + milisecondToTime(historydetail.AppointmetData.start_time)\r\n                    appointmentArr.push(historydetail.allocated === false ?\r\n                        dataFormatting(historydetail, 'New Appointment Created', desc + ' ' + respDetails(historydetail.Details2) + ' ' + respDetails(historydetail.Details3)) :\r\n                        dataFormatting(historydetail, 'Appointment Allocated', desc + ' ' + respDetails(historydetail.Details2) + ' ' + respDetails(historydetail.Details3)))\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (historydetail.Status === 'newleadentery') {\r\n                desc = doSentenceCase(historydetail.Details1) + ' ' + historydetail.Details2.split('|')[0]\r\n                historydetail.allocated === true ? \r\n                leadArr.push(dataFormatting(historydetail, 'Lead Allocated', desc)) \r\n                : leadArr.push(dataFormatting(historydetail, 'New Lead Created', desc))\r\n                \r\n            }\r\n            else if (historydetail.AppointmentStatus !== \"\") {\r\n                console.log('lead update')\r\n                desc = doSentenceCase(historydetail.Details1) + '  ' +  respDetails(historydetail.Details2);\r\n                historydetail.allocated === false ? \r\n                // console.log('hello')\r\n                appointmentArr.push(dataFormatting(historydetail, 'Updated - ' + getLabel(historydetail.AppointmentStatus), desc)) \r\n                : appointmentArr.push(dataFormatting(historydetail, 'Lead Allocated', desc))\r\n            } \r\n            else if (historydetail.Status === 'Proposalstarted') {\r\n                /**\r\n                 * When proposal is generated then that code is executed\r\n                 */\r\n                desc = (historydetail.Status === 'Proposalstarted' ? 'Proposal Started' : historydetail.Status) + ' | ' + idFilter(historydetail.proposal_Id.productId, 'P');\r\n                proposalArr.push(dataFormatting(historydetail, 'New BI Created', desc));\r\n\r\n            } else if (historydetail.Status === 'login') {\r\n                if (typeof (historydetail.Details1) === \"object\") {\r\n\r\n                    let _obj = {};\r\n                    _obj['date'] = new Date(parseInt(historydetail.created_date)).toLocaleString();\r\n                    _obj['owner'] = historydetail.Details1.AdvisorName;\r\n                    _obj['desc'] = 'Type of Life: ' + historydetail.Details2[0].requestType + ' | Category of issue :' + historydetail.Details2[0].categoryofIssue + ' | Type of issue: ' + historydetail.Details2[0].typeofIssue;\r\n                    _obj['highlight'] = true;\r\n                    _obj['title'] = 'Requirement Raised';\r\n\r\n                    proposalArr.push(_obj);\r\n\r\n                } else {\r\n\r\n                    // desc = self.doSentenceCase(historydetail.Details1)+' | '+this.respDetails(historydetail.Details2);\r\n                    // self.historyList[2].data.push(self.dataFormatting(historydetail, 'Document Uploaded', desc)); \r\n\r\n                    desc = historydetail.Details1 + ' | ' + (historydetail.Status === 'login' ? 'Login' : historydetail.Status) + ' | ' + idFilter(historydetail.proposal_Id.productId, 'P');\r\n                    proposalArr.push(dataFormatting(historydetail, 'Document Uploaded', desc));\r\n                }\r\n            } else if (historydetail.Status === 'issued') {\r\n                desc = historydetail.Details1 + ' | ' + (historydetail.Status === 'issued' ? 'Issued' : historydetail.Status) + ' | ' + idFilter(historydetail.proposal_Id.productId, 'P');\r\n                proposalArr.push(dataFormatting(historydetail, 'Policy Issued', desc));\r\n\r\n            } else if (historydetail.Status === 'rejected') {\r\n                desc = historydetail.Details1 + ' | ' + (historydetail.Status === 'rejected' ? 'Rejected' : historydetail.Status) + ' | ' + idFilter(historydetail.proposal_Id.productId, 'P');\r\n                proposalArr.push(dataFormatting(historydetail, 'Policy Rejected', desc));\r\n            } else {\r\n                /**\r\n                 * No contact section code eexecuted from here\r\n                 */\r\n                desc = doSentenceCase(historydetail.Details1) + ' ' + respDetails(historydetail.Details2)\r\n\r\n                if (historydetail.allocated === false) {\r\n                    leadArr.push(dataFormatting(historydetail, 'Updated - ' + getLabel(historydetail.leadDisposition), desc))\r\n                } else {\r\n                    leadArr.push(dataFormatting(historydetail, 'Lead Allocated', desc))\r\n                }\r\n            }\r\n        }\r\n\r\n    })\r\n// console.log(historyDetailsArr)\r\n// console.log('proposal arr',proposalArr)\r\n// console.log('lead arr',leadArr)\r\n// console.log('lead Arr',appointmentArr)\r\n// console.log('issuance Arr',issuanceArr)\r\nreturn updateObject(state, {\r\n    fetchHistoryLoading: false,\r\n    history: action.history,\r\n    leadData: leadArr,\r\n    appointmentData:appointmentArr,\r\n    proposalData: proposalArr,\r\n})\r\n}\r\nconst fetchHistoryFail = (state, action) => {\r\n    return updateObject(state, { fetchHistoryLoading: false, fetchHistoryError: action.error });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        //state\r\n        case actionTypes.FETCH_HISTORY_START: return fetchHistoryStart(state, action)\r\n        case actionTypes.FETCH_HISTORY_SUCCESS: return fetchHistorySuccess(state, action)\r\n        case actionTypes.FETCH_HISTORY_FAIL: return fetchHistoryFail(state, action)\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport leadsReducer from './leads';\r\nimport createLeadReducer from './newLead'\r\nimport addressReducer from './address'\r\nimport loginReducer from './auth';\r\nimport homeReducer from './home';\r\nimport activitiesReducer from './home';\r\nimport kpiDashboardReducer from './kpiDashboard'\r\nimport renewalReducer from './renewals'\r\nimport productReducer from './product'\r\nimport agentReducer from './agentMicroSite'\r\n// import activitiesReducer from './home'\r\nimport historyReducer from './history'\r\n// import pendencyReducer from './penc'\r\nconst rootReducer = combineReducers({\r\n    leads:leadsReducer,\r\n    newLead:createLeadReducer,\r\n    address:addressReducer,\r\n    login:loginReducer,\r\n    home: homeReducer,\r\n    activities: activitiesReducer,\r\n    kpiDashboard: kpiDashboardReducer,\r\n    renewals: renewalReducer,\r\n    history:historyReducer,\r\n    product:productReducer,\r\n    agent:agentReducer,\r\n    // pendencies:pendencyReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport rootreducer from './store/reducers/index';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware,compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__  || compose;\r\n\r\nconst store = createStore(rootreducer,composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(\r\n  <Provider store={store} id=\"root\">\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>\r\n  ,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}